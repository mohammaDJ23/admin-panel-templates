(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[125],{3105:function(e,n,a){"use strict";a.r(n);var t=a(0),r=a.n(t),l=a(359),o=a(408),m=a(407),i=a(406),u=a(3),c=a(5),s=a(23),p=a(167),v=a(371),g=a(456),h=a(369),d=a(367),E=a(380),f=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1),minWidth:120},selectEmpty:{marginTop:e.spacing(2)}}}));function C(){var e=f(),n=r.a.useState({age:"",name:"hai"}),a=Object(s.a)(n,2),t=a[0],l=a[1],o=r.a.useRef(null),m=r.a.useState(0),i=Object(s.a)(m,2),p=i[0],C=i[1];function y(e){l((function(n){return Object(c.a)(Object(c.a)({},n),{},Object(u.a)({},e.target.name,e.target.value))}))}return r.a.useEffect((function(){C(o.current.offsetWidth)}),[]),r.a.createElement("form",{className:e.root,autoComplete:"off"},r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"age-simple"},"Age"),r.a.createElement(E.a,{value:t.age,onChange:y,inputProps:{name:"age",id:"age-simple"}},r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty"))),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"age-helper"},"Age"),r.a.createElement(E.a,{value:t.age,onChange:y,inputProps:{name:"age",id:"age-helper"}},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty")),r.a.createElement(h.a,null,"Some important helper text")),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(E.a,{value:t.age,onChange:y,displayEmpty:!0,name:"age",className:e.selectEmpty},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty")),r.a.createElement(h.a,null,"Without label")),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{shrink:!0,htmlFor:"age-label-placeholder"},"Age"),r.a.createElement(E.a,{value:t.age,onChange:y,inputProps:{name:"age",id:"age-label-Skeleton"},displayEmpty:!0,name:"age",className:e.selectEmpty},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty")),r.a.createElement(h.a,null,"Label + placeholder")),r.a.createElement(d.a,{className:e.formControl,disabled:!0},r.a.createElement(v.a,{htmlFor:"name-disabled"},"Name"),r.a.createElement(E.a,{value:t.name,onChange:y,inputProps:{name:"name",id:"name-disabled"}},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:"hai"},"Hai"),r.a.createElement(g.a,{value:"olivier"},"Olivier"),r.a.createElement(g.a,{value:"kevin"},"Kevin")),r.a.createElement(h.a,null,"Disabled")),r.a.createElement(d.a,{className:e.formControl,error:!0},r.a.createElement(v.a,{htmlFor:"name-error"},"Name"),r.a.createElement(E.a,{value:t.name,onChange:y,name:"name",renderValue:function(e){return"\u26a0\ufe0f  - ".concat(e)},inputProps:{id:"name-error"}},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:"hai"},"Hai"),r.a.createElement(g.a,{value:"olivier"},"Olivier"),r.a.createElement(g.a,{value:"kevin"},"Kevin")),r.a.createElement(h.a,null,"Error")),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"name-readonly"},"Name"),r.a.createElement(E.a,{value:t.name,onChange:y,inputProps:{name:"name",id:"name-readonly",readOnly:!0}},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:"hai"},"Hai"),r.a.createElement(g.a,{value:"olivier"},"Olivier"),r.a.createElement(g.a,{value:"kevin"},"Kevin")),r.a.createElement(h.a,null,"Read only")),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"age-auto-width"},"Age"),r.a.createElement(E.a,{value:t.age,onChange:y,inputProps:{name:"age",id:"age-auto-width"},autoWidth:!0},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty")),r.a.createElement(h.a,null,"Auto width")),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(E.a,{value:t.age,onChange:y,name:"age",displayEmpty:!0,className:e.selectEmpty},r.a.createElement(g.a,{value:"",disabled:!0},"Placeholder"),r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty")),r.a.createElement(h.a,null,"Placeholder")),r.a.createElement(d.a,{required:!0,className:e.formControl},r.a.createElement(v.a,{htmlFor:"age-required"},"Age"),r.a.createElement(E.a,{value:t.age,onChange:y,name:"age",inputProps:{id:"age-required"},className:e.selectEmpty},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty")),r.a.createElement(h.a,null,"Required")),r.a.createElement(d.a,{variant:"outlined",className:e.formControl},r.a.createElement(v.a,{ref:o,htmlFor:"outlined-age-simple"},"Age"),r.a.createElement(E.a,{value:t.age,onChange:y,labelWidth:p,inputProps:{name:"age",id:"outlined-age-simple"}},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty"))),r.a.createElement(d.a,{variant:"filled",className:e.formControl},r.a.createElement(v.a,{htmlFor:"filled-age-simple"},"Age"),r.a.createElement(E.a,{value:t.age,onChange:y,inputProps:{name:"age",id:"filled-age-simple"}},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty"))))}var y=a(266),I=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1),minWidth:120},selectEmpty:{marginTop:e.spacing(2)}}}));function b(){var e=I(),n=r.a.useState({age:"",name:"hai"}),a=Object(s.a)(n,2),t=a[0],l=a[1],o=r.a.useRef(null),m=r.a.useState(0),i=Object(s.a)(m,2),p=i[0],g=i[1];r.a.useEffect((function(){g(o.current.offsetWidth)}),[]);var f=function(e){return function(n){l(Object(c.a)(Object(c.a)({},t),{},Object(u.a)({},e,n.target.value)))}};return r.a.createElement("div",{className:e.root},r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"age-native-simple"},"Age"),r.a.createElement(E.a,{native:!0,value:t.age,onChange:f("age"),inputProps:{name:"age",id:"age-native-simple"}},r.a.createElement("option",{value:""}),r.a.createElement("option",{value:10},"Ten"),r.a.createElement("option",{value:20},"Twenty"),r.a.createElement("option",{value:30},"Thirty"))),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"age-native-helper"},"Age"),r.a.createElement(y.a,{value:t.age,onChange:f("age"),inputProps:{name:"age",id:"age-native-helper"}},r.a.createElement("option",{value:""}),r.a.createElement("option",{value:10},"Ten"),r.a.createElement("option",{value:20},"Twenty"),r.a.createElement("option",{value:30},"Thirty")),r.a.createElement(h.a,null,"Some important helper text")),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(y.a,{value:t.age,onChange:f("age"),name:"age",className:e.selectEmpty,inputProps:{"aria-label":"age"}},r.a.createElement("option",{value:""},"None"),r.a.createElement("option",{value:10},"Ten"),r.a.createElement("option",{value:20},"Twenty"),r.a.createElement("option",{value:30},"Thirty")),r.a.createElement(h.a,null,"With visually hidden label")),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{shrink:!0,htmlFor:"age-native-label-placeholder"},"Age"),r.a.createElement(y.a,{value:t.age,onChange:f("age"),inputProps:{name:"age",id:"age-native-label-Skeleton"}},r.a.createElement("option",{value:""},"None"),r.a.createElement("option",{value:10},"Ten"),r.a.createElement("option",{value:20},"Twenty"),r.a.createElement("option",{value:30},"Thirty")),r.a.createElement(h.a,null,"Label + placeholder")),r.a.createElement(d.a,{className:e.formControl,disabled:!0},r.a.createElement(v.a,{htmlFor:"name-native-disabled"},"Name"),r.a.createElement(y.a,{value:t.name,onChange:f("name"),inputProps:{name:"name",id:"name-native-disabled"}},r.a.createElement("option",{value:""}),r.a.createElement("optgroup",{label:"Author"},r.a.createElement("option",{value:"hai"},"Hai")),r.a.createElement("optgroup",{label:"Contributors"},r.a.createElement("option",{value:"olivier"},"Olivier"),r.a.createElement("option",{value:"kevin"},"Kevin"))),r.a.createElement(h.a,null,"Disabled")),r.a.createElement(d.a,{className:e.formControl,error:!0},r.a.createElement(v.a,{htmlFor:"name-native-error"},"Name"),r.a.createElement(y.a,{value:t.name,onChange:f("name"),name:"name",inputProps:{id:"name-native-error"}},r.a.createElement("option",{value:""}),r.a.createElement("optgroup",{label:"Author"},r.a.createElement("option",{value:"hai"},"Hai")),r.a.createElement("optgroup",{label:"Contributors"},r.a.createElement("option",{value:"olivier"},"Olivier"),r.a.createElement("option",{value:"kevin"},"Kevin"))),r.a.createElement(h.a,null,"Error")),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"uncontrolled-native"},"Name"),r.a.createElement(y.a,{defaultValue:30,inputProps:{name:"name",id:"uncontrolled-native"}},r.a.createElement("option",{value:""}),r.a.createElement("option",{value:10},"Ten"),r.a.createElement("option",{value:20},"Twenty"),r.a.createElement("option",{value:30},"Thirty")),r.a.createElement(h.a,null,"Uncontrolled")),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(y.a,{className:e.selectEmpty,value:t.age,name:"age",onChange:f("age"),inputProps:{"aria-label":"age"}},r.a.createElement("option",{value:"",disabled:!0},"Placeholder"),r.a.createElement("option",{value:10},"Ten"),r.a.createElement("option",{value:20},"Twenty"),r.a.createElement("option",{value:30},"Thirty")),r.a.createElement(h.a,null,"Placeholder")),r.a.createElement(d.a,{required:!0,className:e.formControl},r.a.createElement(v.a,{htmlFor:"age-native-required"},"Age"),r.a.createElement(E.a,{native:!0,value:t.age,onChange:f("age"),name:"age",inputProps:{id:"age-native-required"}},r.a.createElement("option",{value:""}),r.a.createElement("option",{value:10},"Ten"),r.a.createElement("option",{value:20},"Twenty"),r.a.createElement("option",{value:30},"Thirty")),r.a.createElement(h.a,null,"Required")),r.a.createElement(d.a,{variant:"outlined",className:e.formControl},r.a.createElement(v.a,{ref:o,htmlFor:"outlined-age-native-simple"},"Age"),r.a.createElement(E.a,{native:!0,value:t.age,onChange:f("age"),labelWidth:p,inputProps:{name:"age",id:"outlined-age-native-simple"}},r.a.createElement("option",{value:""}),r.a.createElement("option",{value:10},"Ten"),r.a.createElement("option",{value:20},"Twenty"),r.a.createElement("option",{value:30},"Thirty"))),r.a.createElement(d.a,{variant:"filled",className:e.formControl},r.a.createElement(v.a,{htmlFor:"filled-age-native-simple"},"Age"),r.a.createElement(E.a,{native:!0,value:t.age,onChange:f("age"),inputProps:{name:"age",id:"filled-age-native-simple"}},r.a.createElement("option",{value:""}),r.a.createElement("option",{value:10},"Ten"),r.a.createElement("option",{value:20},"Twenty"),r.a.createElement("option",{value:30},"Thirty"))))}var T=a(10),N=a(229),F=Object(T.a)((function(e){return{root:{"label + &":{marginTop:e.spacing(3)}},input:{borderRadius:4,position:"relative",backgroundColor:e.palette.background.paper,border:"1px solid #ced4da",fontSize:16,padding:"10px 26px 10px 12px",transition:e.transitions.create(["border-color","box-shadow"]),fontFamily:["-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"'].join(","),"&:focus":{borderRadius:4,borderColor:"#80bdff",boxShadow:"0 0 0 0.2rem rgba(0,123,255,.25)"}}}}))(N.a),S=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing(1)}}}));function M(){var e=S(),n=r.a.useState(""),a=Object(s.a)(n,2),t=a[0],l=a[1],o=function(e){l(e.target.value)};return r.a.createElement("form",{className:e.root,autoComplete:"off"},r.a.createElement(d.a,{className:e.margin},r.a.createElement(v.a,{htmlFor:"age-customized-input"},"Age"),r.a.createElement(F,{id:"age-customized-input"})),r.a.createElement(d.a,{className:e.margin},r.a.createElement(v.a,{htmlFor:"age-customized-select"},"Age"),r.a.createElement(E.a,{value:t,onChange:o,input:r.a.createElement(F,{name:"age",id:"age-customized-select"})},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty"))),r.a.createElement(d.a,{className:e.margin},r.a.createElement(v.a,{htmlFor:"age-customized-native-simple"},"Age"),r.a.createElement(y.a,{value:t,onChange:o,input:r.a.createElement(F,{name:"age",id:"age-customized-native-simple"})},r.a.createElement("option",{value:""}),r.a.createElement("option",{value:10},"Ten"),r.a.createElement("option",{value:20},"Twenty"),r.a.createElement("option",{value:30},"Thirty"))))}var x=a(4),L=a(40),k=a(274),P=a(500),w=a(532),O=a(536),A=Object(p.a)((function(e){return{root:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1),minWidth:120,maxWidth:300},chips:{display:"flex",flexWrap:"wrap"},chip:{margin:2},noLabel:{marginTop:e.spacing(3)}}})),H={PaperProps:{style:{maxHeight:224,width:250}}},W=["Oliver Hansen","Van Henry","April Tucker","Ralph Hubbard","Omar Alexander","Carlos Abbott","Miriam Wagner","Bradley Wilkerson","Virginia Andrews","Kelly Snyder"];function j(e,n,a){return{fontWeight:-1===n.indexOf(e)?a.typography.fontWeightRegular:a.typography.fontWeightMedium}}function R(){var e=A(),n=Object(L.a)(),a=r.a.useState([]),t=Object(s.a)(a,2),l=t[0],o=t[1];function m(e){o(e.target.value)}return r.a.createElement("div",{className:e.root},r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"select-multiple"},"Name"),r.a.createElement(E.a,{multiple:!0,value:l,onChange:m,input:r.a.createElement(k.a,{id:"select-multiple"}),MenuProps:H},W.map((function(e){return r.a.createElement(g.a,{key:e,value:e,style:j(e,l,n)},e)})))),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"select-multiple-checkbox"},"Tag"),r.a.createElement(E.a,{multiple:!0,value:l,onChange:m,input:r.a.createElement(k.a,{id:"select-multiple-checkbox"}),renderValue:function(e){return e.join(", ")},MenuProps:H},W.map((function(e){return r.a.createElement(g.a,{key:e,value:e},r.a.createElement(w.a,{checked:l.indexOf(e)>-1}),r.a.createElement(P.a,{primary:e}))})))),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"select-multiple-chip"},"Chip"),r.a.createElement(E.a,{multiple:!0,value:l,onChange:m,input:r.a.createElement(k.a,{id:"select-multiple-chip"}),renderValue:function(n){return r.a.createElement("div",{className:e.chips},n.map((function(n){return r.a.createElement(O.a,{key:n,label:n,className:e.chip})})))},MenuProps:H},W.map((function(e){return r.a.createElement(g.a,{key:e,value:e,style:j(e,l,n)},e)})))),r.a.createElement(d.a,{className:Object(x.default)(e.formControl,e.noLabel)},r.a.createElement(E.a,{multiple:!0,displayEmpty:!0,value:l,onChange:m,input:r.a.createElement(k.a,{id:"select-multiple-placeholder"}),renderValue:function(e){return 0===e.length?r.a.createElement("em",null,"Placeholder"):e.join(", ")},MenuProps:H},r.a.createElement(g.a,{disabled:!0,value:""},r.a.createElement("em",null,"Placeholder")),W.map((function(e){return r.a.createElement(g.a,{key:e,value:e,style:j(e,l,n)},e)})))),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{shrink:!0,htmlFor:"select-multiple-native"},"Native"),r.a.createElement(E.a,{multiple:!0,native:!0,value:l,onChange:function(e){for(var n=e.target.options,a=[],t=0,r=n.length;t<r;t+=1)n[t].selected&&a.push(n[t].value);o(a)},inputProps:{id:"select-multiple-native"}},W.map((function(e){return r.a.createElement("option",{key:e,value:e},e)})))))}var D=a(270),B=Object(p.a)((function(e){return{button:{display:"block",marginTop:e.spacing(2)},formControl:{margin:e.spacing(1),minWidth:120}}}));function V(){var e=B(),n=r.a.useState(""),a=Object(s.a)(n,2),t=a[0],l=a[1],o=r.a.useState(!1),m=Object(s.a)(o,2),i=m[0],u=m[1];function c(){u(!0)}return r.a.createElement("form",{autoComplete:"off"},r.a.createElement(D.a,{className:e.button,onClick:c},"Open the select"),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"demo-controlled-open-select"},"Age"),r.a.createElement(E.a,{open:i,onClose:function(){u(!1)},onOpen:c,value:t,onChange:function(e){l(e.target.value)},inputProps:{name:"age",id:"demo-controlled-open-select"}},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty"))))}var q=a(480),z=a(481),K=a(482),U=a(484),_=Object(p.a)((function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing(1),minWidth:120}}}));function G(){var e=_(),n=r.a.useState({open:!1,age:""}),a=Object(s.a)(n,2),t=a[0],l=a[1],o=function(e){return function(n){l(Object(c.a)(Object(c.a)({},t),{},Object(u.a)({},e,Number(n.target.value))))}};function m(){l(Object(c.a)(Object(c.a)({},t),{},{open:!1}))}return r.a.createElement("div",null,r.a.createElement(D.a,{onClick:function(){l(Object(c.a)(Object(c.a)({},t),{},{open:!0}))}},"Open select dialog"),r.a.createElement(q.a,{disableBackdropClick:!0,disableEscapeKeyDown:!0,open:t.open,onClose:m},r.a.createElement(U.a,null,"Fill the form"),r.a.createElement(K.a,null,r.a.createElement("form",{className:e.container},r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"age-native-simple"},"Age"),r.a.createElement(E.a,{native:!0,value:t.age,onChange:o("age"),input:r.a.createElement(k.a,{id:"age-native-simple"})},r.a.createElement("option",{value:""}),r.a.createElement("option",{value:10},"Ten"),r.a.createElement("option",{value:20},"Twenty"),r.a.createElement("option",{value:30},"Thirty"))),r.a.createElement(d.a,{className:e.formControl},r.a.createElement(v.a,{htmlFor:"age-simple"},"Age"),r.a.createElement(E.a,{value:t.age,onChange:o("age"),input:r.a.createElement(k.a,{id:"age-simple"})},r.a.createElement(g.a,{value:""},r.a.createElement("em",null,"None")),r.a.createElement(g.a,{value:10},"Ten"),r.a.createElement(g.a,{value:20},"Twenty"),r.a.createElement(g.a,{value:30},"Thirty"))))),r.a.createElement(z.a,null,r.a.createElement(D.a,{onClick:m,color:"primary"},"Cancel"),r.a.createElement(D.a,{onClick:m,color:"primary"},"Ok"))))}n.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(m.a,{title:"Selects",description:"Select components are used for collecting user provided information from a list of options",refUrl:"https://material-ui.com/components/selects/"}),r.a.createElement(i.a,null,r.a.createElement(l.a,{item:!0,xs:12},r.a.createElement(o.a,{title:"Simple Select",component:C,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setValues((oldValues) => ({\r\n      ...oldValues,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <form className={classes.root} autoComplete='off'>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='age-simple'>Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-simple',\r\n          }}>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='age-helper'>Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-helper',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          name='age'\r\n          className={classes.selectEmpty}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Without label</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor='age-label-placeholder'>\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-label-Skeleton',\r\n          }}\r\n          displayEmpty\r\n          name='age'\r\n          className={classes.selectEmpty}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Label + placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor='name-disabled'>Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'name',\r\n            id: 'name-disabled',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value='hai'>Hai</MenuItem>\r\n          <MenuItem value='olivier'>Olivier</MenuItem>\r\n          <MenuItem value='kevin'>Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor='name-error'>Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          name='name'\r\n          renderValue={(value) => `\u26a0\ufe0f  - ${value}`}\r\n          inputProps={{\r\n            id: 'name-error',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value='hai'>Hai</MenuItem>\r\n          <MenuItem value='olivier'>Olivier</MenuItem>\r\n          <MenuItem value='kevin'>Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='name-readonly'>Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'name',\r\n            id: 'name-readonly',\r\n            readOnly: true,\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value='hai'>Hai</MenuItem>\r\n          <MenuItem value='olivier'>Olivier</MenuItem>\r\n          <MenuItem value='kevin'>Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Read only</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='age-auto-width'>Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-auto-width',\r\n          }}\r\n          autoWidth>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Auto width</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          name='age'\r\n          displayEmpty\r\n          className={classes.selectEmpty}>\r\n          <MenuItem value='' disabled>\r\n            Placeholder\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel htmlFor='age-required'>Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          name='age'\r\n          inputProps={{\r\n            id: 'age-required',\r\n          }}\r\n          className={classes.selectEmpty}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      <FormControl variant='outlined' className={classes.formControl}>\r\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-simple'>\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          labelWidth={labelWidth}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'outlined-age-simple',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl variant='filled' className={classes.formControl}>\r\n        <InputLabel htmlFor='filled-age-simple'>Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'filled-age-simple',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n",description:"Menus are positioned over their emitting elements such that the currently selected menu item appears on top of the emitting element"})),r.a.createElement(l.a,{item:!0,xs:12},r.a.createElement(o.a,{title:"Native Select",component:b,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function NativeSelects() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-simple',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='age-native-helper'>Age</InputLabel>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-helper',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          name='age'\r\n          className={classes.selectEmpty}\r\n          inputProps={{'aria-label': 'age'}}>\r\n          <option value=''>None</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>With visually hidden label</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor='age-native-label-placeholder'>\r\n          Age\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-label-Skeleton',\r\n          }}>\r\n          <option value=''>None</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Label + placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor='name-native-disabled'>Name</InputLabel>\r\n        <NativeSelect\r\n          value={state.name}\r\n          onChange={handleChange('name')}\r\n          inputProps={{\r\n            name: 'name',\r\n            id: 'name-native-disabled',\r\n          }}>\r\n          <option value='' />\r\n          <optgroup label='Author'>\r\n            <option value='hai'>Hai</option>\r\n          </optgroup>\r\n          <optgroup label='Contributors'>\r\n            <option value='olivier'>Olivier</option>\r\n            <option value='kevin'>Kevin</option>\r\n          </optgroup>\r\n        </NativeSelect>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor='name-native-error'>Name</InputLabel>\r\n        <NativeSelect\r\n          value={state.name}\r\n          onChange={handleChange('name')}\r\n          name='name'\r\n          inputProps={{\r\n            id: 'name-native-error',\r\n          }}>\r\n          <option value='' />\r\n          <optgroup label='Author'>\r\n            <option value='hai'>Hai</option>\r\n          </optgroup>\r\n          <optgroup label='Contributors'>\r\n            <option value='olivier'>Olivier</option>\r\n            <option value='kevin'>Kevin</option>\r\n          </optgroup>\r\n        </NativeSelect>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='uncontrolled-native'>Name</InputLabel>\r\n        <NativeSelect\r\n          defaultValue={30}\r\n          inputProps={{\r\n            name: 'name',\r\n            id: 'uncontrolled-native',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Uncontrolled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <NativeSelect\r\n          className={classes.selectEmpty}\r\n          value={state.age}\r\n          name='age'\r\n          onChange={handleChange('age')}\r\n          inputProps={{'aria-label': 'age'}}>\r\n          <option value='' disabled>\r\n            Placeholder\r\n          </option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel htmlFor='age-native-required'>Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          name='age'\r\n          inputProps={{\r\n            id: 'age-native-required',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      <FormControl variant='outlined' className={classes.formControl}>\r\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-native-simple'>\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          labelWidth={labelWidth}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'outlined-age-native-simple',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl variant='filled' className={classes.formControl}>\r\n        <InputLabel htmlFor='filled-age-native-simple'>Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'filled-age-native-simple',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n",description:"As the user experience can be improved on mobile using the native select of the platform, we allow such pattern."})),r.a.createElement(l.a,{item:!0,xs:12,lg:6},r.a.createElement(o.a,{title:"Customized selects",component:M,source:"import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSelects() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n  return (\r\n    <form className={classes.root} autoComplete='off'>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor='age-customized-input'>Age</InputLabel>\r\n        <BootstrapInput id='age-customized-input' />\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor='age-customized-select'>Age</InputLabel>\r\n        <Select\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={<BootstrapInput name='age' id='age-customized-select' />}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor='age-customized-native-simple'>Age</InputLabel>\r\n        <NativeSelect\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={\r\n            <BootstrapInput name='age' id='age-customized-native-simple' />\r\n          }>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n",description:"The first step is to style the InputBase component. Once it's styled, you can either use it directly as a text field or provide it to the select input property to have a select field.."})),r.a.createElement(l.a,{item:!0,xs:12,lg:6},r.a.createElement(o.a,{title:"Multiple Select",component:R,source:"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  function handleChange(event) {\r\n    setPersonName(event.target.value);\r\n  }\r\n\r\n  function handleChangeMultiple(event) {\r\n    const {options} = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='select-multiple'>Name</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id='select-multiple' />}\r\n          MenuProps={MenuProps}>\r\n          {names.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='select-multiple-checkbox'>Tag</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id='select-multiple-checkbox' />}\r\n          renderValue={(selected) => selected.join(', ')}\r\n          MenuProps={MenuProps}>\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={personName.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='select-multiple-chip'>Chip</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id='select-multiple-chip' />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}>\r\n          {names.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id='select-multiple-placeholder' />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>Placeholder</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}>\r\n          <MenuItem disabled value=''>\r\n            <em>Placeholder</em>\r\n          </MenuItem>\r\n          {names.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor='select-multiple-native'>\r\n          Native\r\n        </InputLabel>\r\n        <Select\r\n          multiple\r\n          native\r\n          value={personName}\r\n          onChange={handleChangeMultiple}\r\n          inputProps={{\r\n            id: 'select-multiple-native',\r\n          }}>\r\n          {names.map((name) => (\r\n            <option key={name} value={name}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n",description:"The Select component can handle multiple selections. It's enabled with the multiple property."})),r.a.createElement(l.a,{item:!0,xs:12,lg:6},r.a.createElement(o.a,{title:"Controlled Open Select",component:V,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function ControlledOpenSelect() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleChange(event) {\r\n    setAge(event.target.value);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <form autoComplete='off'>\r\n      <Button className={classes.button} onClick={handleOpen}>\r\n        Open the select\r\n      </Button>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='demo-controlled-open-select'>Age</InputLabel>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'demo-controlled-open-select',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n"})),r.a.createElement(l.a,{item:!0,xs:12,lg:6},r.a.createElement(o.a,{title:"With a Dialog",component:G,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function DialogSelect() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    age: '',\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({...state, [name]: Number(event.target.value)});\r\n  };\r\n\r\n  function handleClickOpen() {\r\n    setState({...state, open: true});\r\n  }\r\n\r\n  function handleClose() {\r\n    setState({...state, open: false});\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        open={state.open}\r\n        onClose={handleClose}>\r\n        <DialogTitle>Fill the form</DialogTitle>\r\n        <DialogContent>\r\n          <form className={classes.container}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange('age')}\r\n                input={<Input id='age-native-simple' />}>\r\n                <option value='' />\r\n                <option value={10}>Ten</option>\r\n                <option value={20}>Twenty</option>\r\n                <option value={30}>Thirty</option>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor='age-simple'>Age</InputLabel>\r\n              <Select\r\n                value={state.age}\r\n                onChange={handleChange('age')}\r\n                input={<Input id='age-simple' />}>\r\n                <MenuItem value=''>\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={10}>Ten</MenuItem>\r\n                <MenuItem value={20}>Twenty</MenuItem>\r\n                <MenuItem value={30}>Thirty</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",description:"While it's discouraged by the Material Design specification, you can use a select inside a dialog."}))))}}}]);
//# sourceMappingURL=125.7bc53b4e.chunk.js.map