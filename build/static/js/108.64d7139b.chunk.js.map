{"version":3,"sources":["../node_modules/@material-ui/icons/ArrowDropDown.js","modules/muiComponents/inputs/ButtonGroup/Basic.js","webpack:///./src/modules/muiComponents/inputs/ButtonGroup/Basic.js?4e62","modules/muiComponents/inputs/ButtonGroup/SizesColors.js","webpack:///./src/modules/muiComponents/inputs/ButtonGroup/SizesColors.js?7d2a","modules/muiComponents/inputs/ButtonGroup/VerticalGroup.js","webpack:///./src/modules/muiComponents/inputs/ButtonGroup/VerticalGroup.js?73bf","modules/muiComponents/inputs/ButtonGroup/SplitButton.js","modules/muiComponents/inputs/ButtonGroup/index.js","webpack:///./src/modules/muiComponents/inputs/ButtonGroup/SplitButton.js?6260"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","root","display","flexDirection","alignItems","margin","spacing","Basic","classes","className","ButtonGroup","color","aria-label","Button","variant","SizesColors","size","VerticalGroup","orientation","options","SplitButton","React","useState","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClose","event","current","contains","target","Grid","container","direction","item","xs","ref","onClick","console","info","aria-controls","undefined","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","map","option","index","MenuItem","key","disabled","selected","handleMenuItemClick","Buttons","ComponentHeader","title","description","refUrl","GridContainer","ComponentCard","component","source"],"mappings":"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","file":"static/js/108.64d7139b.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Basic() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonGroup color='primary' aria-label='outlined primary button group'>\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup>\r\n      <ButtonGroup\r\n        variant='contained'\r\n        color='primary'\r\n        aria-label='contained primary button group'>\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup>\r\n      <ButtonGroup\r\n        variant='text'\r\n        color='primary'\r\n        aria-label='text primary button group'>\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    flexDirection: 'column',\\r\\n    alignItems: 'center',\\r\\n    '& > *': {\\r\\n      margin: theme.spacing(1),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function Basic() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <ButtonGroup color='primary' aria-label='outlined primary button group'>\\r\\n        <Button>One</Button>\\r\\n        <Button>Two</Button>\\r\\n        <Button>Three</Button>\\r\\n      </ButtonGroup>\\r\\n      <ButtonGroup\\r\\n        variant='contained'\\r\\n        color='primary'\\r\\n        aria-label='contained primary button group'>\\r\\n        <Button>One</Button>\\r\\n        <Button>Two</Button>\\r\\n        <Button>Three</Button>\\r\\n      </ButtonGroup>\\r\\n      <ButtonGroup\\r\\n        variant='text'\\r\\n        color='primary'\\r\\n        aria-label='text primary button group'>\\r\\n        <Button>One</Button>\\r\\n        <Button>Two</Button>\\r\\n        <Button>Three</Button>\\r\\n      </ButtonGroup>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SizesColors() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonGroup size='small' aria-label='small outlined button group'>\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup>\r\n      <ButtonGroup\r\n        color='secondary'\r\n        aria-label='outlined secondary button group'>\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup>\r\n      <ButtonGroup\r\n        size='large'\r\n        color='primary'\r\n        aria-label='large outlined primary button group'>\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    flexDirection: 'column',\\r\\n    alignItems: 'center',\\r\\n    '& > *': {\\r\\n      margin: theme.spacing(1),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SizesColors() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <ButtonGroup size='small' aria-label='small outlined button group'>\\r\\n        <Button>One</Button>\\r\\n        <Button>Two</Button>\\r\\n        <Button>Three</Button>\\r\\n      </ButtonGroup>\\r\\n      <ButtonGroup\\r\\n        color='secondary'\\r\\n        aria-label='outlined secondary button group'>\\r\\n        <Button>One</Button>\\r\\n        <Button>Two</Button>\\r\\n        <Button>Three</Button>\\r\\n      </ButtonGroup>\\r\\n      <ButtonGroup\\r\\n        size='large'\\r\\n        color='primary'\\r\\n        aria-label='large outlined primary button group'>\\r\\n        <Button>One</Button>\\r\\n        <Button>Two</Button>\\r\\n        <Button>Three</Button>\\r\\n      </ButtonGroup>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function VerticalGroup() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonGroup\r\n        orientation='vertical'\r\n        color='primary'\r\n        aria-label='vertical outlined primary button group'>\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup>\r\n      <ButtonGroup\r\n        orientation='vertical'\r\n        color='primary'\r\n        aria-label='vertical contained primary button group'\r\n        variant='contained'>\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup>\r\n      <ButtonGroup\r\n        orientation='vertical'\r\n        color='primary'\r\n        aria-label='vertical contained primary button group'\r\n        variant='text'>\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    '& > *': {\\r\\n      margin: theme.spacing(1),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function VerticalGroup() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <ButtonGroup\\r\\n        orientation='vertical'\\r\\n        color='primary'\\r\\n        aria-label='vertical outlined primary button group'>\\r\\n        <Button>One</Button>\\r\\n        <Button>Two</Button>\\r\\n        <Button>Three</Button>\\r\\n      </ButtonGroup>\\r\\n      <ButtonGroup\\r\\n        orientation='vertical'\\r\\n        color='primary'\\r\\n        aria-label='vertical contained primary button group'\\r\\n        variant='contained'>\\r\\n        <Button>One</Button>\\r\\n        <Button>Two</Button>\\r\\n        <Button>Three</Button>\\r\\n      </ButtonGroup>\\r\\n      <ButtonGroup\\r\\n        orientation='vertical'\\r\\n        color='primary'\\r\\n        aria-label='vertical contained primary button group'\\r\\n        variant='text'>\\r\\n        <Button>One</Button>\\r\\n        <Button>Two</Button>\\r\\n        <Button>Three</Button>\\r\\n      </ButtonGroup>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\nconst options = [\r\n  'Create a merge commit',\r\n  'Squash and merge',\r\n  'Rebase and merge',\r\n];\r\n\r\nexport default function SplitButton() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleClick = () => {\r\n    console.info(`You clicked ${options[selectedIndex]}`);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='column' alignItems='center'>\r\n      <Grid item xs={12}>\r\n        <ButtonGroup\r\n          variant='contained'\r\n          color='primary'\r\n          ref={anchorRef}\r\n          aria-label='split button'>\r\n          <Button onClick={handleClick}>{options[selectedIndex]}</Button>\r\n          <Button\r\n            color='primary'\r\n            size='small'\r\n            aria-controls={open ? 'split-button-menu' : undefined}\r\n            aria-expanded={open ? 'true' : undefined}\r\n            aria-label='select merge strategy'\r\n            aria-haspopup='menu'\r\n            onClick={handleToggle}>\r\n            <ArrowDropDownIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal>\r\n          {({TransitionProps, placement}) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === 'bottom' ? 'center top' : 'center bottom',\r\n              }}>\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList id='split-button-menu'>\r\n                    {options.map((option, index) => (\r\n                      <MenuItem\r\n                        key={option}\r\n                        disabled={index === 2}\r\n                        selected={index === selectedIndex}\r\n                        onClick={(event) => handleMenuItemClick(event, index)}>\r\n                        {option}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\nimport Basic from './Basic';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport BasicSource from '!raw-loader!./Basic';\r\nimport SizesColors from './SizesColors';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SizesColorsSource from '!raw-loader!./SizesColors';\r\nimport VerticalGroup from './VerticalGroup';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport VerticalGroupSource from '!raw-loader!./VerticalGroup';\r\n\r\nimport SplitButton from './SplitButton';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SplitButtonSource from '!raw-loader!./SplitButton';\r\n\r\nconst Buttons = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Button group'\r\n        description='The ButtonGroup component can be used to group related buttons.'\r\n        refUrl='https://material-ui.com/components/button-group/'\r\n      />\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Basic button group'\r\n            component={Basic}\r\n            source={BasicSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Sizes and colors'\r\n            component={SizesColors}\r\n            source={SizesColorsSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Vertical group'\r\n            component={VerticalGroup}\r\n            source={VerticalGroupSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Split button'\r\n            component={SplitButton}\r\n            source={SplitButtonSource}\r\n            description='ButtonGroup can also be used to create a split button. The dropdown can change the button action (as in this example), or be used to immediately trigger a related action.'\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","export default \"import React from 'react';\\r\\nimport Grid from '@material-ui/core/Grid';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\\r\\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\\r\\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\\r\\nimport Grow from '@material-ui/core/Grow';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport Popper from '@material-ui/core/Popper';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport MenuList from '@material-ui/core/MenuList';\\r\\n\\r\\nconst options = [\\r\\n  'Create a merge commit',\\r\\n  'Squash and merge',\\r\\n  'Rebase and merge',\\r\\n];\\r\\n\\r\\nexport default function SplitButton() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const anchorRef = React.useRef(null);\\r\\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\\r\\n\\r\\n  const handleClick = () => {\\r\\n    console.info(`You clicked ${options[selectedIndex]}`);\\r\\n  };\\r\\n\\r\\n  const handleMenuItemClick = (event, index) => {\\r\\n    setSelectedIndex(index);\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  const handleToggle = () => {\\r\\n    setOpen((prevOpen) => !prevOpen);\\r\\n  };\\r\\n\\r\\n  const handleClose = (event) => {\\r\\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Grid container direction='column' alignItems='center'>\\r\\n      <Grid item xs={12}>\\r\\n        <ButtonGroup\\r\\n          variant='contained'\\r\\n          color='primary'\\r\\n          ref={anchorRef}\\r\\n          aria-label='split button'>\\r\\n          <Button onClick={handleClick}>{options[selectedIndex]}</Button>\\r\\n          <Button\\r\\n            color='primary'\\r\\n            size='small'\\r\\n            aria-controls={open ? 'split-button-menu' : undefined}\\r\\n            aria-expanded={open ? 'true' : undefined}\\r\\n            aria-label='select merge strategy'\\r\\n            aria-haspopup='menu'\\r\\n            onClick={handleToggle}>\\r\\n            <ArrowDropDownIcon />\\r\\n          </Button>\\r\\n        </ButtonGroup>\\r\\n        <Popper\\r\\n          open={open}\\r\\n          anchorEl={anchorRef.current}\\r\\n          role={undefined}\\r\\n          transition\\r\\n          disablePortal>\\r\\n          {({TransitionProps, placement}) => (\\r\\n            <Grow\\r\\n              {...TransitionProps}\\r\\n              style={{\\r\\n                transformOrigin:\\r\\n                  placement === 'bottom' ? 'center top' : 'center bottom',\\r\\n              }}>\\r\\n              <Paper>\\r\\n                <ClickAwayListener onClickAway={handleClose}>\\r\\n                  <MenuList id='split-button-menu'>\\r\\n                    {options.map((option, index) => (\\r\\n                      <MenuItem\\r\\n                        key={option}\\r\\n                        disabled={index === 2}\\r\\n                        selected={index === selectedIndex}\\r\\n                        onClick={(event) => handleMenuItemClick(event, index)}>\\r\\n                        {option}\\r\\n                      </MenuItem>\\r\\n                    ))}\\r\\n                  </MenuList>\\r\\n                </ClickAwayListener>\\r\\n              </Paper>\\r\\n            </Grow>\\r\\n          )}\\r\\n        </Popper>\\r\\n      </Grid>\\r\\n    </Grid>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}