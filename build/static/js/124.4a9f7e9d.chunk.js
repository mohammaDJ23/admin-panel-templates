(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[124],{3090:function(n,e,r){"use strict";r.r(e);var a=r(0),t=r.n(a),o=r(359),s=r(408),i=r(407),c=r(406),l=r(23),m=r(167),u=r(270),p=r(506),d=r(197),k=r(150),g=r.n(k),b=Object(m.a)((function(n){return{close:{padding:n.spacing(.5)}}}));function f(){var n=b(),e=t.a.useState(!1),r=Object(l.a)(e,2),a=r[0],o=r[1];function s(n,e){"clickaway"!==e&&o(!1)}return t.a.createElement("div",null,t.a.createElement(u.a,{onClick:function(){o(!0)}},"Open simple snackbar"),t.a.createElement(p.a,{anchorOrigin:{vertical:"bottom",horizontal:"left"},open:a,autoHideDuration:6e3,onClose:s,ContentProps:{"aria-describedby":"message-id"},message:t.a.createElement("span",{id:"message-id"},"Note archived"),action:[t.a.createElement(u.a,{key:"undo",color:"secondary",size:"small",onClick:s},"UNDO"),t.a.createElement(d.a,{key:"close","aria-label":"close",color:"inherit",className:n.close,onClick:s},t.a.createElement(g.a,null))]}))}var h=r(148),C=r(4),v=r(527),S=r.n(v),y=r(628),E=r.n(y),B=r(454),I=r.n(B),T=r(196),w=r(624),O=r(374),N=r(627),R=r.n(N),x={success:S.a,warning:R.a,error:E.a,info:I.a},z=Object(m.a)((function(n){return{success:{backgroundColor:T.a[600]},error:{backgroundColor:n.palette.error.dark},info:{backgroundColor:n.palette.primary.main},warning:{backgroundColor:w.a[700]},icon:{fontSize:20},iconVariant:{opacity:.9,marginRight:n.spacing(1)},message:{display:"flex",alignItems:"center"}}}));function j(n){var e=z(),r=n.className,a=n.message,o=n.onClose,s=n.variant,i=Object(h.a)(n,["className","message","onClose","variant"]),c=x[s];return t.a.createElement(O.a,Object.assign({className:Object(C.default)(e[s],r),"aria-describedby":"client-snackbar",message:t.a.createElement("span",{id:"client-snackbar",className:e.message},t.a.createElement(c,{className:Object(C.default)(e.icon,e.iconVariant)}),a),action:[t.a.createElement(d.a,{key:"close","aria-label":"close",color:"inherit",onClick:o},t.a.createElement(g.a,{className:e.icon}))]},i))}var P=Object(m.a)((function(n){return{margin:{margin:n.spacing(1)}}}));function D(){var n=P(),e=t.a.useState(!1),r=Object(l.a)(e,2),a=r[0],o=r[1];function s(n,e){"clickaway"!==e&&o(!1)}return t.a.createElement("div",null,t.a.createElement(u.a,{variant:"outlined",className:n.margin,onClick:function(){o(!0)}},"Open success snackbar"),t.a.createElement(p.a,{anchorOrigin:{vertical:"bottom",horizontal:"left"},open:a,autoHideDuration:6e3,onClose:s},t.a.createElement(j,{onClose:s,variant:"success",message:"This is a success message!"})),t.a.createElement(j,{variant:"error",className:n.margin,message:"This is an error message!"}),t.a.createElement(j,{variant:"warning",className:n.margin,message:"This is a warning message!"}),t.a.createElement(j,{variant:"info",className:n.margin,message:"This is an information message!"}),t.a.createElement(j,{variant:"success",className:n.margin,message:"This is a success message!"}))}var M=r(5);function A(){var n=t.a.useState({open:!1,vertical:"top",horizontal:"center"}),e=Object(l.a)(n,2),r=e[0],a=e[1],o=r.vertical,s=r.horizontal,i=r.open,c=function(n){return function(){a(Object(M.a)({open:!0},n))}};return t.a.createElement("div",null,t.a.createElement(u.a,{onClick:c({vertical:"top",horizontal:"center"})},"Top-Center"),t.a.createElement(u.a,{onClick:c({vertical:"top",horizontal:"right"})},"Top-Right"),t.a.createElement(u.a,{onClick:c({vertical:"bottom",horizontal:"right"})},"Bottom-Right"),t.a.createElement(u.a,{onClick:c({vertical:"bottom",horizontal:"center"})},"Bottom-Center"),t.a.createElement(u.a,{onClick:c({vertical:"bottom",horizontal:"left"})},"Bottom-Left"),t.a.createElement(u.a,{onClick:c({vertical:"top",horizontal:"left"})},"Top-Left"),t.a.createElement(p.a,{anchorOrigin:{vertical:o,horizontal:s},key:"".concat(o,",").concat(s),open:i,onClose:function(){a(Object(M.a)(Object(M.a)({},r),{},{open:!1}))},ContentProps:{"aria-describedby":"message-id"},message:t.a.createElement("span",{id:"message-id"},"I love snacks")}))}var F=t.a.createElement(u.a,{color:"secondary",size:"small"},"lorem ipsum dolorem"),W=Object(m.a)((function(n){return{root:{maxWidth:600},snackbar:{margin:n.spacing(1)}}}));function U(){var n=W();return t.a.createElement("div",{className:n.root},t.a.createElement(O.a,{className:n.snackbar,message:"I love snacks.",action:F}),t.a.createElement(O.a,{className:n.snackbar,message:"I love candy. I love cookies. I love cupcakes.           I love cheesecake. I love chocolate."}),t.a.createElement(O.a,{className:n.snackbar,message:"I love candy. I love cookies. I love cupcakes.",action:F}),t.a.createElement(O.a,{className:n.snackbar,message:"I love candy. I love cookies. I love cupcakes.           I love cheesecake. I love chocolate.",action:F}))}var L=Object(m.a)((function(n){return{close:{padding:n.spacing(.5)}}}));function q(){var n=t.a.useRef([]),e=t.a.useState(!1),r=Object(l.a)(e,2),a=r[0],o=r[1],s=t.a.useState(void 0),i=Object(l.a)(s,2),c=i[0],m=i[1],k=function(){n.current.length>0&&(m(n.current.shift()),o(!0))},b=function(e){return function(){n.current.push({message:e,key:(new Date).getTime()}),a?o(!1):k()}},f=function(n,e){"clickaway"!==e&&o(!1)},h=L();return t.a.createElement("div",null,t.a.createElement(u.a,{onClick:b("Message A")},"Show message A"),t.a.createElement(u.a,{onClick:b("Message B")},"Show message B"),t.a.createElement(p.a,{key:c?c.key:void 0,anchorOrigin:{vertical:"bottom",horizontal:"left"},open:a,autoHideDuration:6e3,onClose:f,onExited:function(){k()},ContentProps:{"aria-describedby":"message-id"},message:t.a.createElement("span",{id:"message-id"},c?c.message:void 0),action:[t.a.createElement(u.a,{key:"undo",color:"secondary",size:"small",onClick:f},"UNDO"),t.a.createElement(d.a,{key:"close","aria-label":"close",color:"inherit",className:h.close,onClick:f},t.a.createElement(g.a,null))]}))}var G=r(3),H=r(470),V=r(479),Q=r(519),J=r(60),Y=r.n(J),$=r(82),K=r(490),X=r(1448),Z=r.n(X),_=Object(m.a)((function(n){return{"@global":{body:{backgroundColor:n.palette.background.paper}},menuButton:{marginRight:n.spacing(2)},fab:{position:"absolute",bottom:n.spacing(2),right:n.spacing(2)},snackbar:Object(G.a)({},n.breakpoints.down("xs"),{bottom:90})}}));function nn(){var n=_();return t.a.createElement(t.a.Fragment,null,t.a.createElement(V.a,null),t.a.createElement("div",null,t.a.createElement(H.a,{position:"static",color:"primary"},t.a.createElement(Q.a,null,t.a.createElement(d.a,{edge:"start",className:n.menuButton,color:"inherit","aria-label":"menu"},t.a.createElement(Y.a,null)),t.a.createElement($.a,{variant:"h6",color:"inherit"},"App Bar"))),t.a.createElement(K.a,{color:"secondary",className:n.fab},t.a.createElement(Z.a,null)),t.a.createElement(p.a,{open:!0,autoHideDuration:4e3,ContentProps:{"aria-describedby":"snackbar-fab-message-id"},message:t.a.createElement("span",{id:"snackbar-fab-message-id"},"Archived"),action:t.a.createElement(u.a,{color:"inherit",size:"small"},"Undo"),className:n.snackbar})))}var en=r(364);function rn(n){return t.a.createElement(en.a,Object.assign({},n,{direction:"left"}))}function an(n){return t.a.createElement(en.a,Object.assign({},n,{direction:"up"}))}function tn(n){return t.a.createElement(en.a,Object.assign({},n,{direction:"right"}))}function on(n){return t.a.createElement(en.a,Object.assign({},n,{direction:"down"}))}function sn(){var n=t.a.useState(!1),e=Object(l.a)(n,2),r=e[0],a=e[1],o=t.a.useState(void 0),s=Object(l.a)(o,2),i=s[0],c=s[1],m=function(n){return function(){c((function(){return n})),a(!0)}};return t.a.createElement("div",null,t.a.createElement(u.a,{onClick:m(rn)},"Right"),t.a.createElement(u.a,{onClick:m(an)},"Up"),t.a.createElement(u.a,{onClick:m(tn)},"Left"),t.a.createElement(u.a,{onClick:m(on)},"Down"),t.a.createElement(p.a,{open:r,onClose:function(){a(!1)},TransitionComponent:i,ContentProps:{"aria-describedby":"message-id"},message:t.a.createElement("span",{id:"message-id"},"I love snacks")}))}var cn=r(2353);function ln(){var n,e=Object(cn.b)().enqueueSnackbar;return t.a.createElement(t.a.Fragment,null,t.a.createElement(u.a,{onClick:function(){e("I love snacks.")}},"Show snackbar"),t.a.createElement(u.a,{onClick:(n="warning",function(){e("This is a warning message!",{variant:n})})},"Show warning snackbar"))}function mn(){return t.a.createElement(cn.a,{maxSnack:3},t.a.createElement(ln,null))}var un=r(273),pn=r(224);function dn(n){return t.a.createElement(en.a,Object.assign({},n,{direction:"up"}))}function kn(n){return t.a.createElement(pn.a,n)}function gn(){var n=t.a.useState({open:!1,Transition:un.a}),e=Object(l.a)(n,2),r=e[0],a=e[1],o=function(n){return function(){a({open:!0,Transition:n})}};return t.a.createElement("div",null,t.a.createElement(u.a,{onClick:o(kn)},"Grow Transition"),t.a.createElement(u.a,{onClick:o(un.a)},"Fade Transition"),t.a.createElement(u.a,{onClick:o(dn)},"Slide Transition"),t.a.createElement(p.a,{open:r.open,onClose:function(){a(Object(M.a)(Object(M.a)({},r),{},{open:!1}))},TransitionComponent:r.Transition,ContentProps:{"aria-describedby":"message-id"},message:t.a.createElement("span",{id:"message-id"},"I love snacks")}))}e.default=function(){return t.a.createElement(t.a.Fragment,null,t.a.createElement(i.a,{title:"Snackbars",description:"Snackbars provide brief messages about app processes. The component is also known as a toast.",refUrl:"https://material-ui.com/components/snackbars/"}),t.a.createElement(c.a,null,t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(s.a,{title:"Message Length",component:U,source:"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\nconst action = (\r\n  <Button color='secondary' size='small'>\r\n    lorem ipsum dolorem\r\n  </Button>\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 600,\r\n  },\r\n  snackbar: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function LongTextSnackbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message='I love snacks.'\r\n        action={action}\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={\r\n          'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n        }\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message='I love candy. I love cookies. I love cupcakes.'\r\n        action={action}\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={\r\n          'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n        }\r\n        action={action}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",description:"Some snackbars with varying message length..."})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(s.a,{title:"Customized snackbars",component:D,source:"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const {className, message, onClose, variant, ...other} = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby='client-snackbar'\r\n      message={\r\n        <span id='client-snackbar' className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key='close'\r\n          aria-label='close'\r\n          color='inherit'\r\n          onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant='outlined'\r\n        className={classes.margin}\r\n        onClick={handleClick}>\r\n        Open success snackbar\r\n      </Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}>\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant='success'\r\n          message='This is a success message!'\r\n        />\r\n      </Snackbar>\r\n      <MySnackbarContentWrapper\r\n        variant='error'\r\n        className={classes.margin}\r\n        message='This is an error message!'\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant='warning'\r\n        className={classes.margin}\r\n        message='This is a warning message!'\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant='info'\r\n        className={classes.margin}\r\n        message='This is an information message!'\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant='success'\r\n        className={classes.margin}\r\n        message='This is a success message!'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",description:"Here are some examples of customizing the component. You can learn more about this in the overrides documentation page."})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(s.a,{title:"Positioned snackbars",component:A,source:"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport default function PositionedSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n\r\n  const {vertical, horizontal, open} = state;\r\n\r\n  const handleClick = (newState) => () => {\r\n    setState({open: true, ...newState});\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({...state, open: false});\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'center'})}>\r\n        Top-Center\r\n      </Button>\r\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'right'})}>\r\n        Top-Right\r\n      </Button>\r\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'right'})}>\r\n        Bottom-Right\r\n      </Button>\r\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'center'})}>\r\n        Bottom-Center\r\n      </Button>\r\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'left'})}>\r\n        Bottom-Left\r\n      </Button>\r\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'left'})}>\r\n        Top-Left\r\n      </Button>\r\n      <Snackbar\r\n        anchorOrigin={{vertical, horizontal}}\r\n        key={`${vertical},${horizontal}`}\r\n        open={open}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id='message-id'>I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",description:"There may be circumstances when the placement of the snackbar needs to be more flexible."})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(s.a,{title:"Simple snackbars",component:f,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSnackbar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id='message-id'>Note archived</span>}\r\n        action={[\r\n          <Button\r\n            key='undo'\r\n            color='secondary'\r\n            size='small'\r\n            onClick={handleClose}>\r\n            UNDO\r\n          </Button>,\r\n          <IconButton\r\n            key='close'\r\n            aria-label='close'\r\n            color='inherit'\r\n            className={classes.close}\r\n            onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",description:"A basic snackbar that aims to reproduce Google Keep's snackbar behavior."})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(s.a,{title:"Transitions",component:q,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function ConsecutiveSnackbars() {\r\n  const queueRef = React.useRef([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\r\n\r\n  const processQueue = () => {\r\n    if (queueRef.current.length > 0) {\r\n      setMessageInfo(queueRef.current.shift());\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClick = (message) => () => {\r\n    queueRef.current.push({\r\n      message,\r\n      key: new Date().getTime(),\r\n    });\r\n\r\n    if (open) {\r\n      // immediately begin dismissing current message\r\n      // to start showing new one\r\n      setOpen(false);\r\n    } else {\r\n      processQueue();\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => {\r\n    processQueue();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick('Message A')}>Show message A</Button>\r\n      <Button onClick={handleClick('Message B')}>Show message B</Button>\r\n      <Snackbar\r\n        key={messageInfo ? messageInfo.key : undefined}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        onExited={handleExited}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={\r\n          <span id='message-id'>\r\n            {messageInfo ? messageInfo.message : undefined}\r\n          </span>\r\n        }\r\n        action={[\r\n          <Button\r\n            key='undo'\r\n            color='secondary'\r\n            size='small'\r\n            onClick={handleClose}>\r\n            UNDO\r\n          </Button>,\r\n          <IconButton\r\n            key='close'\r\n            aria-label='close'\r\n            color='inherit'\r\n            className={classes.close}\r\n            onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",description:"Some snackbars with varying message length..."})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(s.a,{title:"Snackbars and floating action buttons",component:nn,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  snackbar: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      bottom: 90,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function FabIntegrationSnackbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <div>\r\n        <AppBar position='static' color='primary'>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge='start'\r\n              className={classes.menuButton}\r\n              color='inherit'\r\n              aria-label='menu'>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant='h6' color='inherit'>\r\n              App Bar\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Fab color='secondary' className={classes.fab}>\r\n          <AddIcon />\r\n        </Fab>\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={4000}\r\n          ContentProps={{\r\n            'aria-describedby': 'snackbar-fab-message-id',\r\n          }}\r\n          message={<span id='snackbar-fab-message-id'>Archived</span>}\r\n          action={\r\n            <Button color='inherit' size='small'>\r\n              Undo\r\n            </Button>\r\n          }\r\n          className={classes.snackbar}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n",description:"Some snackbars with varying message length..."})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(s.a,{title:"Change Transition",component:gn,source:"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction='up' />;\r\n}\r\n\r\nfunction GrowTransition(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\nexport default function TransitionsSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    Transition: Fade,\r\n  });\r\n\r\n  const handleClick = (Transition) => () => {\r\n    setState({\r\n      open: true,\r\n      Transition,\r\n    });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\r\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\r\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\r\n      <Snackbar\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={state.Transition}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id='message-id'>I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",description:"Grow is the default transition but you can use a different one."})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(s.a,{title:"Control Slide direction",component:sn,source:"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction='left' />;\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction='up' />;\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n  return <Slide {...props} direction='right' />;\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n  return <Slide {...props} direction='down' />;\r\n}\r\n\r\nexport default function DirectionSnackbar() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [transition, setTransition] = React.useState(undefined);\r\n\r\n  const handleClick = (Transition) => () => {\r\n    setTransition(() => Transition);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick(TransitionLeft)}>Right</Button>\r\n      <Button onClick={handleClick(TransitionUp)}>Up</Button>\r\n      <Button onClick={handleClick(TransitionRight)}>Left</Button>\r\n      <Button onClick={handleClick(TransitionDown)}>Down</Button>\r\n      <Snackbar\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={transition}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id='message-id'>I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",description:"You can change the direction of the Slide transition.."})),t.a.createElement(o.a,{item:!0,xs:12,lg:6},t.a.createElement(s.a,{title:"Snackbar notistack",component:mn,source:"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {SnackbarProvider, useSnackbar} from 'notistack';\r\n\r\nfunction MyApp() {\r\n  const {enqueueSnackbar} = useSnackbar();\r\n\r\n  const handleClick = () => {\r\n    enqueueSnackbar('I love snacks.');\r\n  };\r\n\r\n  const handleClickVariant = (variant) => () => {\r\n    // variant could be success, error, warning, info, or default\r\n    enqueueSnackbar('This is a warning message!', {variant});\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button onClick={handleClick}>Show snackbar</Button>\r\n      <Button onClick={handleClickVariant('warning')}>\r\n        Show warning snackbar\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function IntegrationNotistack() {\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <MyApp />\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n",description:"In the following example, we demonstrate how to use notistack. notistack makes it easy to display snackbars (so you don't have to deal with open/close state of them). It also enables you to stack them on top of one another (although this is discouraged by the specification)."}))))}}}]);
//# sourceMappingURL=124.4a9f7e9d.chunk.js.map