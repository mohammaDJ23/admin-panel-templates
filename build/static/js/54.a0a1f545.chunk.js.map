{"version":3,"sources":["@crema/core/AppList/ListView.js","@crema/core/AppList/ListFooter.js","@crema/core/AppList/index.js","@crema/core/AppAnimateGroup/index.js","@crema/core/AppsContainer/AppsContent.js","@crema/core/AppsContainer/index.style.js","@crema/core/AppsContainer/AppSidebar.js","@crema/core/AppsContainer/index.js","@crema/core/AppsContainer/AppsHeader.js","@crema/core/AppList/ListEmptyResult.js","@crema/core/AppsPagination/index.js","@crema/core/AppsStarredIcon/index.js","@crema/core/AppsContainer/AppsFooter.js","@crema/core/AppsSideBarFolderItem/index.js","@crema/core/Skeleton/SidebarListSkeleton.js","modules/apps/Mail/MailsList/MailContentHeader/CheckedMailActions.js","modules/apps/Mail/MailsList/MailContentHeader/MoreOptions.js","modules/apps/Mail/MailsList/MailContentHeader/index.js","modules/apps/Mail/MailsList/MailListItem/index.js","@crema/core/Skeleton/EmailListSkeleton.js","modules/apps/Mail/MailsList/index.js","modules/apps/Mail/MailDetail/MailDetailHeader/index.js","modules/apps/Mail/MailDetail/MailDetailBody/ReplyMail.js","modules/apps/Mail/MailDetail/MailDetailBody/ForwardMail/index.js","modules/apps/Mail/MailDetail/MailDetailBody/index.js","@crema/core/Skeleton/MailDetailSkeleton.js","modules/apps/Mail/MailDetail/index.js","modules/apps/Mail/ComposeMail/index.js","modules/apps/Mail/MailSideBar/ChatWindow.js","modules/apps/Mail/MailSideBar/ConnectionListItem.js","modules/apps/Mail/MailSideBar/LabelItem.js","modules/apps/Mail/MailSideBar/index.js","modules/apps/Mail/index.js"],"names":["ListView","renderRow","onEndReached","data","animation","delay","duration","containerStyle","border","ListFooterComponent","ListEmptyComponent","rest","ItemSeparatorComponent","theme","useTheme","borderStyle","grey","backgroundColor","palette","background","paper","borderRadius","overflow","style","useBottomScrollListener","AppAnimateGroup","flex","enter","length","map","item","index","React","isValidElement","getEmptyContainer","getFooterContainer","defaultProps","useStyles","makeStyles","listFooterRoot","padding","color","text","secondary","display","justifyContent","listFooterLoaderRoot","width","borderTop","boxSizing","ListFooter","loading","footerText","classes","Box","className","CircularProgress","size","component","ml","clsx","prototype","PropTypes","bool","string","AppList","footerProps","props","enterAnimationDefaults","stagger","visibility","leaveAnimationDefaults","backwards","leave","easing","runOnMount","enterHideStyle","enterShowStyle","memo","useAppsContentStyles","appsContentContainer","flexDirection","height","isDetailView","breakpoints","up","fullView","position","top","left","minWidth","marginLeft","marginRight","maxWidth","overrides","MuiCard","root","fade","AppsContent","children","getHeaderHeight","navStyle","screenSize","NavStyle","HOR_DARK_LAYOUT","HOR_LIGHT_NAV","H_DEFAULT","BIT_BUCKET","appsContainer","footer","appsSidebar","appsMainContent","paddingLeft","menuButton","spacing","menuIcon","appSidebarDrawer","zIndex","scLauncher","primary","main","AppSidebar","isAppDrawerOpen","sidebarContent","dispatch","useDispatch","Hidden","lgUp","Drawer","open","onClose","ev","onToggleAppDrawer","mdDown","Card","AppsContainer","useSelector","common","useContext","AppContext","title","pt","xl","mb","xs","lg","mt","alignItems","IconButton","edge","aria-label","onClick","fontWeight","Fonts","BOLD","fontSize","cardStyle","InfoView","appHeader","borderBottom","checkboxRoot","pointer","cursor","AppsHeader","px","py","emptyListContainer","minHeight","textAlign","flexRow","ListEmptyResult","loader","placeholder","actionTitle","content","Fragment","variant","marginTop","id","description","action","func","AppsPagination","count","page","onPageChange","rowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","rowsPerPageOptions","number","isRequired","AppsStarredIcon","onChange","icon","checkedIcon","checked","isStarred","event","target","paginationRoot","paddingRight","paddingBottom","paddingTop","borderColor","paddingY","AppsFooter","useStyle","listItem","down","marginBottom","MEDIUM","listItemIcon","listItemText","fontFamily","WrappedIcon","AppsSideBarFolderItem","path","button","key","to","NavLink","activeClassName","mr","name","SidebarItem","viewBox","x","y","rx","ry","SidebarListSkeleton","CheckedMailActions","checkedMails","setCheckedMails","useState","isLabelOpen","onOpenLabel","isMoveToOpen","onOpenMoveToIcon","labelList","mailApp","folderList","onChangeMailFolder","type","onUpdateMailFolders","onSelectLabel","labelType","find","label","value","onUpdateMailLabels","IntlMessages","sm","currentTarget","Menu","anchorEl","Boolean","MenuItem","folder","array","moreVertIconRoot","MoreOptions","unReadOption","readOption","starredOption","unStarredOption","mailList","isMoreIcon","onOpenMoreIcon","mail","includes","isRead","onViewMoreOpen","onViewMoreClose","onChangeReadStatus","statusValue","status","onUpdateReadStatus","onChangeAllReadStatus","onChangeAllStarred","onUpdateStarredStatus","onChangeStarredStatus","any","iconBlock","MailContentHeader","history","useHistory","totalMails","indeterminate","mailIds","push","xsDown","pagination","withRouter","REGULAR","crMailTitle","crMailInfo","crMailTime","appsStarredRoot","truncate","textOverflow","whiteSpace","fontBold","whitespacePre","MailListItem","date","onChangeCheckedMails","onChangeStarred","onViewMailDetail","ListItem","dense","pr","stopPropagation","Typography","isReplied","sentBy","pl","placement","bgcolor","subject","isAttachment","sentOn","moment","format","split","object","MailItem","EmailListSkeleton","MailsList","params","useParams","setPage","pathname","useLocation","useEffect","onGetMailList","concat","filter","mailId","changedMailList","selectedIdList","smUp","MailDetailHeader","selectedMail","onUpdateSelectedMail","folderValue","goBack","mx","my","textField","textareaAutosize","btnRoot","contrastText","ReplyMail","onSubmitMail","p","fullWidth","margin","senderMailId","rows","multiline","MyTextField","useField","field","meta","errorText","error","touched","helperText","validationSchema","yup","email","required","cc","MailForward","onSubmitForwardedMail","isShowCC","onShowCC","onShowCcInput","user","useAuthUser","messages","useIntl","validateOnChange","initialValues","onSubmit","setSubmitting","resetForm","Math","floor","random","isChecked","displayName","sentAt","isSubmitting","values","handleChange","InputProps","startAdornment","disabled","avatar","breakAll","wordBreak","MailDetailBody","isReply","onReplyMail","isForward","onForward","onGetMailTime","LIGHT","ForwardMail","onComposeMail","MailDetailSkeleton","speed","foregroundColor","cx","cy","r","MailDetail","contentRef","createRef","onGetSelectedMail","onNullifyMail","ref","AppAnimate","animatoin","dialogBox","formRoot","textareaAutosizeRoot","scrollRoot","Transition","forwardRef","Slide","direction","bcc","ComposeMail","isComposeMail","onCloseComposeMail","isShowBcc","onShowBcc","isShowChip","onShowChip","Dialog","aria-labelledby","TransitionComponent","aria-describedby","Scrollbar","alias","red","noValidate","autoComplete","Chip","test","onDelete","onBlur","connection","ChatWindow","isOpenChat","setOpenChat","messageList","setMessageList","agentProfile","teamName","imageUrl","image","onMessageWasSent","message","onFilesSelected","fileList","objectURL","window","URL","createObjectURL","author","url","fileName","handleClick","isOpen","showEmoji","marginTop0","marginY","ConnectionListItem","ListItemAvatar","alt","src","ListItemText","LabelItem","clone","textTransform","listRoot","MailSidebar","connectionList","setComposeMail","md","pb","List","Mail","onGetLabelList","onGetFolderList","onGetConnectionList","match","node"],"mappings":"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","file":"static/js/54.a0a1f545.chunk.js","sourcesContent":["import React from 'react';\nimport {useBottomScrollListener} from 'react-bottom-scroll-listener';\nimport PropTypes from 'prop-types';\nimport {useTheme} from '@material-ui/core';\nimport grey from '@material-ui/core/colors/grey';\nimport AppAnimateGroup from '../AppAnimateGroup';\n\nconst getEmptyContainer = (ListEmptyComponent) => {\n  if (ListEmptyComponent)\n    return React.isValidElement(ListEmptyComponent) ? (\n      ListEmptyComponent\n    ) : (\n      <ListEmptyComponent />\n    );\n  return null;\n};\n\nconst getFooterContainer = (ListFooterComponent) => {\n  if (ListFooterComponent)\n    return React.isValidElement(ListFooterComponent) ? (\n      ListFooterComponent\n    ) : (\n      <ListFooterComponent />\n    );\n  return null;\n};\nconst ListView = ({\n  renderRow,\n  onEndReached,\n  data,\n  animation,\n  delay = 0,\n  duration = 200,\n  containerStyle,\n  border,\n  ListFooterComponent,\n  ListEmptyComponent,\n  ItemSeparatorComponent,\n  ...rest\n}) => {\n  const theme = useTheme();\n  const borderStyle = {\n    border: `1px solid ${grey[300]}`,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 4,\n    overflow: 'hidden',\n  };\n\n  if (!onEndReached) {\n    onEndReached = () => {};\n  }\n\n  let style = containerStyle;\n  if (border) {\n    style = {...style, ...borderStyle};\n  }\n  useBottomScrollListener(onEndReached, 200);\n  return (\n    <AppAnimateGroup\n      style={{...style}}\n      {...rest}\n      flex={1}\n      enter={{delay, duration, animation}}>\n      {data.length > 0\n        ? data.map((item, index) => renderRow(item, index))\n        : getEmptyContainer(ListEmptyComponent)}\n      {getFooterContainer(ListFooterComponent)}\n    </AppAnimateGroup>\n  );\n};\n\nexport default ListView;\nListView.propTypes = {\n  border: PropTypes.bool,\n  animation: PropTypes.string,\n  containerStyle: PropTypes.object,\n  ListEmptyComponent: PropTypes.node,\n  ListFooterComponent: PropTypes.node,\n  data: PropTypes.array.isRequired,\n  onEndReached: PropTypes.func,\n};\nListView.defaultProps = {\n  border: false,\n  animation: 'transition.slideUpIn',\n  data: [],\n  onEndReached: () => {},\n};\n","import React from 'react';\nimport {Box, CircularProgress, makeStyles} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  listFooterRoot: {\n    padding: 10,\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  listFooterLoaderRoot: {\n    width: '100%',\n    display: 'flex',\n    color: theme.palette.text.secondary,\n    justifyContent: 'center',\n    padding: 8,\n    borderTop: `1px solid ${theme.palette.grey[200]}`,\n    boxSizing: 'border-box',\n  },\n}));\n\nconst ListFooter = ({loading, footerText}) => {\n  const classes = useStyles();\n\n  return loading ? (\n    <Box className={classes.listFooterLoaderRoot}>\n      <CircularProgress size={16} />\n      <Box component='span' ml={2}>\n        Loading...\n      </Box>\n    </Box>\n  ) : (\n    <Box className={clsx(classes.listFooterRoot, 'list-footer')}>\n      <Box component='p'>{footerText}</Box>\n    </Box>\n  );\n};\n\nListFooter.prototype = {\n  loading: PropTypes.bool,\n  footerText: PropTypes.string,\n};\n\nListFooter.defaultProps = {\n  loading: false,\n};\n\nexport default ListFooter;\n","import React from 'react';\nimport ListView from './ListView';\nimport PropTypes from 'prop-types';\nimport ListFooter from './ListFooter';\n\nconst AppList = ({footerProps, ...props}) => {\n  return (\n    <ListView\n      {...props}\n      ListFooterComponent={\n        footerProps ? (\n          <ListFooter\n            loading={footerProps.loading}\n            footerText={footerProps.footerText}\n          />\n        ) : null\n      }\n    />\n  );\n};\n\nexport default AppList;\nAppList.propTypes = {\n  border: PropTypes.bool,\n  containerStyle: PropTypes.object,\n  ListEmptyComponent: PropTypes.node,\n  ListFooterComponent: PropTypes.node,\n  data: PropTypes.array.isRequired,\n  onEndReached: PropTypes.func,\n};\nAppList.defaultProps = {\n  border: false,\n  data: [],\n};\n","import PropTypes from 'prop-types';\nimport React, {memo} from 'react';\nimport {VelocityTransitionGroup} from 'velocity-react';\nimport 'velocity-animate/velocity.ui';\n\nconst enterAnimationDefaults = {\n  animation: 'transition.fadeIn',\n  stagger: 50,\n  duration: 200,\n  display: null,\n  visibility: 'visible',\n  delay: 0,\n};\n\nconst leaveAnimationDefaults = {\n  animation: 'transition.slideUpOut',\n  backwards: 150,\n  duration: 200,\n  display: null,\n  visibility: 'visible',\n  delay: 0,\n};\n\nfunction AppAnimateGroup({loading, ...props}) {\n  return (\n    <VelocityTransitionGroup\n      {...props}\n      enter={{...enterAnimationDefaults, ...props.enter}}\n      leave={{...leaveAnimationDefaults, ...props.leave}}\n    />\n  );\n}\n\nAppAnimateGroup.propTypes = {\n  children: PropTypes.any,\n};\n\nAppAnimateGroup.defaultProps = {\n  enter: enterAnimationDefaults,\n  leave: leaveAnimationDefaults,\n  easing: [0.4, 0.0, 0.2, 1],\n  runOnMount: true,\n  enterHideStyle: {\n    visibility: 'visible',\n  },\n  enterShowStyle: {\n    visibility: 'hidden',\n  },\n};\n\nexport default memo(AppAnimateGroup);\n","import React from 'react';\nimport Scrollbar from '../Scrollbar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport {fade} from '@material-ui/core';\n\nexport const useAppsContentStyles = makeStyles((theme) => ({\n  appsContentContainer: (props) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    height: `calc(100% - ${props.isDetailView ? 60 : 115}px)`,\n    [theme.breakpoints.up('sm')]: {\n      height: `calc(100% - ${props.fullView ? 0 : 60}px)`,\n    },\n    [theme.breakpoints.up('xl')]: {\n      height: `calc(100% - ${props.fullView ? 0 : 77}px)`,\n    },\n    '& .scrum-absolute': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n    },\n    '& .scrum-row': {\n      display: 'inline-flex',\n      minWidth: '100%',\n      height: '100%',\n      marginLeft: '-10px',\n      marginRight: '-10px',\n    },\n    '& .scrum-col': {\n      minWidth: '280px',\n      maxWidth: '280px',\n      marginLeft: '10px',\n      marginRight: '10px',\n      borderRadius: theme.overrides.MuiCard.root.borderRadius,\n      backgroundColor: fade(theme.palette.background.paper, 0.45),\n      height: '100% !important',\n      [theme.breakpoints.up('md')]: {\n        minWidth: '354px',\n        maxWidth: '354px',\n      },\n    },\n    '& .scroll-scrum-item': {\n      height: 'auto !important',\n    },\n  }),\n}));\n\nconst AppsContent = (props) => {\n  const classes = useAppsContentStyles(props);\n  return (\n    <Scrollbar className={classes.appsContentContainer} style={props.style}>\n      {props.children}\n    </Scrollbar>\n  );\n};\n\nexport default AppsContent;\n\nAppsContent.defaultProps = {isDetailView: false};\n","import {makeStyles} from '@material-ui/core/styles';\nimport {NavStyle} from '../../../shared/constants/AppEnums';\n\nconst getHeaderHeight = (navStyle, screenSize) => {\n  if (\n    navStyle === NavStyle.HOR_DARK_LAYOUT ||\n    navStyle === NavStyle.HOR_LIGHT_NAV ||\n    navStyle === NavStyle.H_DEFAULT\n  )\n    return screenSize >= 1280 ? 124 + 20 : 70 + 10; // 50 Header Height + 20/10 Padding Bottom\n  if (navStyle === NavStyle.BIT_BUCKET) return 0; // 0 Header Height\n\n  return screenSize >= 600 ? 70 : 60;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  appsContainer: (props) => ({\n    height: `calc(100vh - ${\n      55 + // AppContainerHeader Height\n      20 + //Container Padding\n      getHeaderHeight(props.navStyle, 0) +\n      (props.footer ? 70 : 10) // 50 Header Height + 20 Margin Top\n    }px) !important`,\n    [theme.breakpoints.up('sm')]: {\n      height: `calc(100vh - ${\n        55 + // AppContainerHeader Height\n        20 + //Container Padding\n        getHeaderHeight(props.navStyle, 600) +\n        (props.footer ? 70 : 10)\n      }px) !important`,\n    },\n    [theme.breakpoints.up('md')]: {\n      height: `calc(100vh - ${\n        55 + // AppContainerHeader Height\n        30 + //Container Padding\n        getHeaderHeight(props.navStyle, 960) +\n        (props.footer ? 80 : 10) // 50 Header Height + 30 Margin Top\n      }px) !important`,\n    },\n    [theme.breakpoints.up('lg')]: {\n      height: `calc(100vh - ${\n        43 + // AppContainerHeader Height\n        30 + //Container Padding\n        getHeaderHeight(props.navStyle, 1280) +\n        (props.footer ? 80 : 10)\n      }px) !important`,\n    },\n    [theme.breakpoints.up('xl')]: {\n      height: `calc(100vh - ${\n        64 + // AppContainerHeader Height\n        30 + //Container Padding\n        getHeaderHeight(props.navStyle, 1920) +\n        (props.footer ? 86 : 10) // 56 Header Height + 30 Margin Top\n      }px) !important`,\n    },\n    display: 'flex',\n  }),\n  appsSidebar: {\n    height: '100%',\n    [theme.breakpoints.up('lg')]: {\n      width: '17rem',\n    },\n    [theme.breakpoints.up('xl')]: {\n      width: '20rem',\n    },\n  },\n  appsMainContent: (props) => ({\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.up('lg')]: {\n      width: `calc(100% - ${props.fullView ? 0 : 17}rem)`,\n      paddingLeft: props.fullView ? 0 : 40,\n    },\n    [theme.breakpoints.up('xl')]: {\n      width: `calc(100% - ${props.fullView ? 0 : 20}rem)`,\n    },\n  }),\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  menuIcon: {\n    width: 35,\n    height: 35,\n  },\n  appSidebarDrawer: {\n    width: '19rem',\n    '& .listItem': {\n      zIndex: 1305,\n    },\n  },\n  scLauncher: {\n    '& .sc-header, & .sc-message--content.sent .sc-message--text, & .sc-header--close-button:hover': {\n      backgroundColor: `${theme.palette.primary.main} !important`,\n    },\n  },\n}));\nexport default useStyles;\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport Drawer from '@material-ui/core/Drawer';\nimport {onToggleAppDrawer} from '../../../redux/actions';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport {Box} from '@material-ui/core';\nimport useStyles from './index.style';\nimport {useDispatch} from 'react-redux';\n\nconst AppSidebar = (props) => {\n  const {isAppDrawerOpen, footer, navStyle, fullView, sidebarContent} = props;\n  const dispatch = useDispatch();\n  const classes = useStyles({footer, navStyle, fullView});\n  return (\n    <Box className={classes.appsSidebar}>\n      <Hidden lgUp>\n        <Drawer\n          open={isAppDrawerOpen}\n          onClose={(ev) => dispatch(onToggleAppDrawer())}\n          classes={{\n            paper: clsx(classes.appSidebarDrawer),\n          }}\n          style={{position: 'absolute'}}>\n          {sidebarContent}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Card style={{height: '100%'}}>{sidebarContent}</Card>\n      </Hidden>\n    </Box>\n  );\n};\n\nexport default AppSidebar;\n","import React, {useContext} from 'react';\nimport {onToggleAppDrawer} from '../../../redux/actions';\nimport {useDispatch, useSelector} from 'react-redux';\nimport InfoView from '@crema/core/InfoView';\nimport {Box} from '@material-ui/core';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PropTypes from 'prop-types';\nimport {Fonts} from '../../../shared/constants/AppEnums';\nimport Card from '@material-ui/core/Card';\nimport useStyles from './index.style';\nimport {AppContext} from '../../index';\nimport AppSidebar from './AppSidebar';\n\nconst AppsContainer = (props) => {\n  const dispatch = useDispatch();\n  const {isAppDrawerOpen} = useSelector(({common}) => common);\n  const {footer, navStyle} = useContext(AppContext);\n  const {title, sidebarContent, fullView, children} = props;\n  const classes = useStyles({footer, navStyle, fullView});\n\n  return (\n    <Box pt={{xl: 4}} flex={1} display='flex' flexDirection='column'>\n      <Box\n        mb={{xs: fullView ? 4 : 2, lg: fullView ? 5 : 4}}\n        mt={{xs: fullView ? 0 : -3, lg: 0}}\n        display='flex'\n        alignItems='center'>\n        {fullView ? null : (\n          <Hidden lgUp>\n            <IconButton\n              edge='start'\n              className={classes.menuButton}\n              color='inherit'\n              aria-label='open drawer'\n              onClick={() => dispatch(onToggleAppDrawer())}>\n              <MenuIcon className={classes.menuIcon} />\n            </IconButton>\n          </Hidden>\n        )}\n        <Box\n          component='h2'\n          color='text.primary'\n          fontWeight={Fonts.BOLD}\n          fontSize={16}>\n          {title}\n        </Box>\n      </Box>\n\n      <Box className={classes.appsContainer}>\n        {sidebarContent ? (\n          <AppSidebar\n            isAppDrawerOpen={isAppDrawerOpen}\n            footer={footer}\n            fullView={fullView}\n            navStyle={navStyle}\n            sidebarContent={sidebarContent}\n          />\n        ) : null}\n\n        <Box className={classes.appsMainContent}>\n          <Card\n            style={{\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              ...props.cardStyle,\n            }}>\n            {children}\n          </Card>\n          <InfoView />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AppsContainer;\n\nAppsContainer.defaultProps = {\n  title: '',\n};\n\nAppsContainer.prototype = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport {Box} from '@material-ui/core';\nimport {grey} from '@material-ui/core/colors';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  appHeader: {\n    height: 60,\n    display: 'flex',\n    alignItems: 'center',\n    borderBottom: `1px solid ${grey[300]}`,\n    [theme.breakpoints.up('xl')]: {\n      height: 77,\n    },\n  },\n  checkboxRoot: {\n    marginRight: 8,\n  },\n  pointer: {\n    cursor: 'pointer',\n  },\n}));\n\nconst AppsHeader = ({children}) => {\n  const classes = useStyles();\n  return (\n    <Box px={6} py={{xs: 1, xl: 3}} className={classes.appHeader}>\n      {children}\n    </Box>\n  );\n};\n\nexport default AppsHeader;\nAppsHeader.defaultProps = {};\n","import React from 'react';\nimport {Box, Button, CircularProgress} from '@material-ui/core';\nimport clsx from 'clsx';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport IntlMessages from '../../utility/IntlMessages';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  emptyListContainer: {\n    flexDirection: 'column',\n    minHeight: 450,\n    height: '100%',\n    flex: 1,\n    display: 'flex',\n    padding: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: theme.palette.grey[500],\n    borderRadius: 4,\n    textAlign: 'center',\n  },\n  flexRow: {\n    flexDirection: 'row',\n  },\n}));\n\nconst ListEmptyResult = ({\n  loader,\n  placeholder,\n  loading,\n  title,\n  actionTitle,\n  content,\n  onClick,\n}) => {\n  const classes = useStyles();\n  if (loading || loader) {\n    return (\n      <React.Fragment>\n        {placeholder ? (\n          placeholder\n        ) : (\n          <Box className={clsx(classes.emptyListContainer, classes.flexRow)}>\n            <CircularProgress size={16} />\n            <Box component='span' ml={2}>\n              Loading...\n            </Box>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <Box className={classes.emptyListContainer}>\n        {title ? (\n          <Box component='h4' fontSize={18} color='text.secondary' mb={3}>\n            {title}\n          </Box>\n        ) : null}\n        <Box fontSize={16} component='p' color='text.hint'>\n          {content}\n        </Box>\n\n        {actionTitle ? (\n          <Button\n            color='primary'\n            variant='contained'\n            style={{marginTop: 30, height: 45, minWidth: 150}}\n            onClick={onClick}>\n            {actionTitle}\n          </Button>\n        ) : null}\n      </Box>\n    );\n  }\n};\n\nexport default ListEmptyResult;\n\nListEmptyResult.defaultProps = {\n  title: <IntlMessages id='common.noRecordFound' />,\n  description: '',\n};\n\nListEmptyResult.prototype = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  actionTitle: PropTypes.string,\n  action: PropTypes.func,\n};\n","import React from 'react';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport PropTypes from 'prop-types';\n\nconst AppsPagination = ({\n  count,\n  page,\n  onPageChange,\n  rowsPerPage,\n  className,\n}) => {\n  return (\n    <TablePagination\n      component='div'\n      count={count}\n      rowsPerPage={rowsPerPage}\n      className={className}\n      page={page}\n      backIconButtonProps={{'aria-label': 'Previous Page'}}\n      nextIconButtonProps={{'aria-label': 'Next Page'}}\n      onChangePage={onPageChange}\n      rowsPerPageOptions={[]}\n    />\n  );\n};\n\nexport default AppsPagination;\n\nAppsPagination.defaultProps = {\n  className: '',\n  rowsPerPage: 15,\n};\n\nAppsPagination.prototype = {\n  count: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport {Checkbox} from '@material-ui/core';\n\nconst AppsStarredIcon = ({item, onChange}) => {\n  return (\n    <Checkbox\n      icon={<StarBorderIcon />}\n      checkedIcon={<StarIcon />}\n      checked={item.isStarred}\n      onChange={(event) => onChange(event.target.checked, item)}\n    />\n  );\n};\n\nexport default AppsStarredIcon;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {grey} from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  paginationRoot: {\n    paddingLeft: 24,\n    paddingRight: 24,\n    paddingBottom: 8,\n    paddingTop: 8,\n    borderTop: '1px solid',\n    borderColor: grey[300],\n  },\n  paddingY: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n}));\n\nconst AppsFooter = (props) => {\n  const {children, ...rest} = props;\n  const classes = useStyles(props);\n  return (\n    <Box className={classes.paginationRoot} {...rest}>\n      {children}\n    </Box>\n  );\n};\n\nexport default AppsFooter;\n","import React from 'react';\nimport {NavLink} from '../../index';\nimport Box from '@material-ui/core/Box';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Fonts} from '../../../shared/constants/AppEnums';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyle = makeStyles((theme) => ({\n  listItem: {\n    paddingLeft: '10px',\n    paddingRight: '0',\n    paddingTop: '5px',\n    paddingBottom: '5px',\n\n    '& .MuiListItemText-root': {\n      [theme.breakpoints.down('lg')]: {\n        marginTop: 0,\n        marginBottom: 0,\n      },\n    },\n\n    '& .MuiTypography-body1': {\n      fontSize: 15,\n      fontWeight: Fonts.MEDIUM,\n    },\n\n    '& svg': {\n      fontSize: '18px',\n    },\n\n    '&:hover,&:focus,&.active': {\n      backgroundColor: 'transparent',\n      color: theme.palette.primary.main,\n\n      '& svg': {\n        color: theme.palette.primary.main,\n      },\n\n      '& .MuiTypography-root': {\n        color: theme.palette.primary.main,\n      },\n    },\n\n    '&.active': {\n      color: theme.palette.primary.main,\n\n      '& svg, & .MuiTypography-root': {\n        color: theme.palette.primary.main,\n      },\n    },\n  },\n  listItemIcon: {\n    minWidth: 10,\n    paddingTop: 4,\n  },\n  listItemText: {\n    fontFamily: 'inherit',\n  },\n}));\n\nconst WrappedIcon = (props) => <Icon {...props} />;\n\nconst AppsSideBarFolderItem = ({item, path}) => {\n  const classes = useStyle();\n  return (\n    <ListItem\n      button\n      key={item.id}\n      to={path}\n      component={NavLink}\n      className={classes.listItem}\n      activeClassName='active'>\n      <Box component='span' mr={{xs: 4, xl: 5}}>\n        <ListItemIcon className={classes.listItemIcon}>\n          <WrappedIcon>{item.icon}</WrappedIcon>\n        </ListItemIcon>\n      </Box>\n      <ListItemText primary={item.name} className={classes.listItemText} />\n    </ListItem>\n  );\n};\n\nexport default AppsSideBarFolderItem;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst SidebarItem = () => (\n  <ContentLoader viewBox='0 0 200 45'>\n    <rect x='0' y='10' rx='0' ry='0' width='20' height='20' />\n    <rect x='35' y='12' rx='2' ry='2' width='100' height='15' />\n  </ContentLoader>\n);\nconst SidebarListSkeleton = () => {\n  return (\n    <React.Fragment>\n      <SidebarItem />\n      <SidebarItem />\n      <SidebarItem />\n      <SidebarItem />\n      <SidebarItem />\n      <SidebarItem />\n    </React.Fragment>\n  );\n};\n\nexport default SidebarListSkeleton;\n","import React, {useState} from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport InfoSharpIcon from '@material-ui/icons/InfoSharp';\r\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\r\nimport LabelSharpIcon from '@material-ui/icons/LabelSharp';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ShopTwoSharpIcon from '@material-ui/icons/ShopTwoSharp';\r\nimport {\r\n  onUpdateMailFolders,\r\n  onUpdateMailLabels,\r\n} from '../../../../../redux/actions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nconst CheckedMailActions = (props) => {\r\n  const {checkedMails, setCheckedMails} = props;\r\n  const dispatch = useDispatch();\r\n  const [isLabelOpen, onOpenLabel] = useState(null);\r\n\r\n  const [isMoveToOpen, onOpenMoveToIcon] = useState(null);\r\n\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const folderList = useSelector(({mailApp}) => mailApp.folderList);\r\n\r\n  const onLabelOpen = (event) => {\r\n    onOpenLabel(event.currentTarget);\r\n  };\r\n\r\n  const onLabelClose = () => {\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onMoveToOpen = (event) => {\r\n    onOpenMoveToIcon(event.currentTarget);\r\n  };\r\n\r\n  const onMoveToClose = () => {\r\n    onOpenMoveToIcon(null);\r\n  };\r\n\r\n  const onChangeMailFolder = (type) => {\r\n    dispatch(onUpdateMailFolders(checkedMails, type));\r\n    setCheckedMails([]);\r\n  };\r\n\r\n  const onSelectLabel = (event) => {\r\n    const labelType = labelList.find(\r\n      (label) => label.id === event.target.value,\r\n    );\r\n    dispatch(onUpdateMailLabels(checkedMails, labelType));\r\n    setCheckedMails([]);\r\n    onOpenLabel(null);\r\n  };\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box display='flex' alignItems='center'>\r\n      <Tooltip title={<IntlMessages id='common.archive' />}>\r\n        <Box mr={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n          <ArchiveIcon\r\n            className={classes.root}\r\n            onClick={() => onChangeMailFolder(127)}\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Tooltip title={<IntlMessages id='common.reportSpam' />}>\r\n        <Box mr={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n          <InfoSharpIcon\r\n            className={classes.root}\r\n            onClick={() => onChangeMailFolder(125)}\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Tooltip title={<IntlMessages id='common.trash' />}>\r\n        <Box mr={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n          <DeleteSharpIcon\r\n            className={classes.root}\r\n            onClick={() => onChangeMailFolder(126)}\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Tooltip title={<IntlMessages id='common.label' />}>\r\n        <Box mr={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n          <LabelSharpIcon\r\n            className={classes.root}\r\n            value={1}\r\n            onClick={onLabelOpen}\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Menu\r\n        anchorEl={isLabelOpen}\r\n        open={Boolean(isLabelOpen)}\r\n        onClose={onLabelClose}>\r\n        {labelList.map((label) => {\r\n          return (\r\n            <MenuItem onClick={onSelectLabel} value={label.id} key={label.id}>\r\n              {label.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n\r\n      <Tooltip title={<IntlMessages id='common.moveTo' />}>\r\n        <Box mr={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n          <ShopTwoSharpIcon className={classes.root} onClick={onMoveToOpen} />\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Menu\r\n        anchorEl={isMoveToOpen}\r\n        open={Boolean(isMoveToOpen)}\r\n        onClose={onMoveToClose}>\r\n        {folderList.map((folder) => {\r\n          return (\r\n            <MenuItem\r\n              onClick={() => onChangeMailFolder(folder.id)}\r\n              key={folder.id}>\r\n              {folder.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CheckedMailActions;\r\n\r\nCheckedMailActions.defaultProps = {\r\n  checkedMails: [],\r\n};\r\n\r\nCheckedMailActions.prototype = {\r\n  checkedMails: PropTypes.array.isRequired,\r\n  setCheckedMails: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  onUpdateReadStatus,\r\n  onUpdateStarredStatus,\r\n} from '../../../../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {grey} from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  moreVertIconRoot: {\r\n    color: grey[700],\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nconst MoreOptions = (props) => {\r\n  const {checkedMails, setCheckedMails, path} = props;\r\n\r\n  let unReadOption;\r\n  let readOption;\r\n  let starredOption;\r\n  let unStarredOption;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const mailList = useSelector(({mailApp}) => mailApp.mailList);\r\n\r\n  const [isMoreIcon, onOpenMoreIcon] = useState(null);\r\n\r\n  mailList.map((mail) => {\r\n    if (checkedMails.includes(mail.id) && mail.isRead) {\r\n      unReadOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && !mail.isRead) {\r\n      readOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && mail.isStarred) {\r\n      unStarredOption = true;\r\n    }\r\n    if (checkedMails.includes(mail.id) && !mail.isStarred) {\r\n      starredOption = true;\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const onViewMoreOpen = (event) => {\r\n    onOpenMoreIcon(event.currentTarget);\r\n  };\r\n\r\n  const onViewMoreClose = () => {\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeReadStatus = (statusValue) => {\r\n    const status = !!statusValue;\r\n    dispatch(onUpdateReadStatus(checkedMails, status));\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeAllReadStatus = (statusValue) => {\r\n    const status = !!statusValue;\r\n    const checkedMails = mailList.map((mail) => mail.id);\r\n    dispatch(onUpdateReadStatus(checkedMails, status));\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeAllStarred = (status) => {\r\n    const checkedMails = mailList.map((mail) => mail.id);\r\n    dispatch(\r\n      onUpdateStarredStatus(checkedMails, status, path[path.length - 1]),\r\n    );\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onChangeStarredStatus = (status) => {\r\n    dispatch(\r\n      onUpdateStarredStatus(checkedMails, status, path[path.length - 1]),\r\n    );\r\n    setCheckedMails([]);\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <>\r\n      {checkedMails.length > 0 ? (\r\n        <Box>\r\n          <Tooltip title={<IntlMessages id='common.more' />}>\r\n            <MoreVertIcon\r\n              className={clsx(classes.pointer, classes.moreVertIconRoot)}\r\n              onClick={onViewMoreOpen}\r\n            />\r\n          </Tooltip>\r\n\r\n          <Menu\r\n            anchorEl={isMoreIcon}\r\n            open={Boolean(isMoreIcon)}\r\n            onClose={onViewMoreClose}>\r\n            {readOption ? (\r\n              <MenuItem onClick={() => onChangeReadStatus(1)}>\r\n                <IntlMessages id='mailApp.markAsRead' />\r\n              </MenuItem>\r\n            ) : null}\r\n            {unReadOption ? (\r\n              <MenuItem onClick={() => onChangeReadStatus(0)}>\r\n                <IntlMessages id='mailApp.markAsUnread' />\r\n              </MenuItem>\r\n            ) : null}\r\n            {starredOption ? (\r\n              <MenuItem onClick={() => onChangeStarredStatus(1)}>\r\n                <IntlMessages id='mailApp.markAsImportant' />\r\n              </MenuItem>\r\n            ) : null}\r\n            {unStarredOption ? (\r\n              <MenuItem onClick={() => onChangeStarredStatus(0)}>\r\n                <IntlMessages id='mailApp.markAsNotImportant' />\r\n              </MenuItem>\r\n            ) : null}\r\n          </Menu>\r\n        </Box>\r\n      ) : (\r\n        <Box>\r\n          <Tooltip title={<IntlMessages id='common.more' />}>\r\n            <MoreVertIcon\r\n              className={clsx(classes.pointer, classes.moreVertIconRoot)}\r\n              onClick={onViewMoreOpen}\r\n            />\r\n          </Tooltip>\r\n\r\n          <Menu\r\n            anchorEl={isMoreIcon}\r\n            open={Boolean(isMoreIcon)}\r\n            onClose={onViewMoreClose}>\r\n            <MenuItem onClick={() => onChangeAllReadStatus(1)}>\r\n              <IntlMessages id='mailApp.markAllAsRead' />\r\n            </MenuItem>\r\n            <MenuItem onClick={() => onChangeAllReadStatus(0)}>\r\n              <IntlMessages id='mailApp.markAllAsUnread' />\r\n            </MenuItem>\r\n            <MenuItem onClick={() => onChangeAllStarred(1)}>\r\n              <IntlMessages id='mailApp.markAllAsImportant' />\r\n            </MenuItem>\r\n            <MenuItem onClick={() => onChangeAllStarred(0)}>\r\n              <IntlMessages id='mailApp.markAllAsNotImportant' />\r\n            </MenuItem>\r\n          </Menu>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoreOptions;\r\n\r\nMoreOptions.defaultProps = {\r\n  checkedMails: [],\r\n};\r\n\r\nMoreOptions.prototype = {\r\n  checkedMails: PropTypes.array.isRequired,\r\n  setCheckedMails: PropTypes.func,\r\n  path: PropTypes.any.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox/index';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Tooltip from '@material-ui/core/Tooltip/index';\r\nimport {useSelector} from 'react-redux';\r\nimport {useHistory, withRouter} from 'react-router-dom';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport {Hidden} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport CheckedMailActions from './CheckedMailActions';\r\nimport MoreOptions from './MoreOptions';\r\nimport AppsPagination from '../../../../../@crema/core/AppsPagination';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  checkboxRoot: {\r\n    marginRight: 8,\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  iconBlock: {\r\n    display: 'block',\r\n  },\r\n}));\r\n\r\nconst MailContentHeader = (props) => {\r\n  const {path, checkedMails, setCheckedMails, page, onPageChange} = props;\r\n\r\n  const history = useHistory();\r\n\r\n  const mailList = useSelector(({mailApp}) => mailApp.mailList);\r\n\r\n  const totalMails = useSelector(({mailApp}) => mailApp.totalMails);\r\n\r\n  const classes = useStyles(props);\r\n\r\n  const onHandleMasterCheckbox = (event) => {\r\n    if (event.target.checked) {\r\n      const mailIds = mailList.map((mail) => mail.id);\r\n      setCheckedMails(mailIds);\r\n    } else {\r\n      setCheckedMails([]);\r\n    }\r\n  };\r\n\r\n  const onRefreshPage = () => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display='flex' flexDirection='row' alignItems='center'>\r\n        <Checkbox\r\n          color='primary'\r\n          className={classes.checkboxRoot}\r\n          indeterminate={\r\n            checkedMails.length > 0 && checkedMails.length < mailList.length\r\n          }\r\n          checked={\r\n            mailList.length > 0 && checkedMails.length === mailList.length\r\n          }\r\n          onChange={onHandleMasterCheckbox}\r\n        />\r\n\r\n        {checkedMails.length > 0 ? (\r\n          <CheckedMailActions\r\n            checkedMails={checkedMails}\r\n            setCheckedMails={setCheckedMails}\r\n          />\r\n        ) : null}\r\n\r\n        {checkedMails.length < 1 ? (\r\n          <Tooltip title={<IntlMessages id='common.refresh' />}>\r\n            <Box mr={4} component='span' color='text.disabled'>\r\n              <RefreshIcon\r\n                className={clsx(classes.pointer, classes.iconBlock)}\r\n                onClick={onRefreshPage}\r\n              />\r\n            </Box>\r\n          </Tooltip>\r\n        ) : null}\r\n\r\n        <MoreOptions\r\n          checkedMails={checkedMails}\r\n          setCheckedMails={setCheckedMails}\r\n          path={path}\r\n        />\r\n      </Box>\r\n      <Hidden xsDown>\r\n        {mailList.length > 0 ? (\r\n          <Box component='span' ml={{sm: 'auto'}}>\r\n            <AppsPagination\r\n              className={classes.pagination}\r\n              count={totalMails}\r\n              page={page}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </Box>\r\n        ) : null}\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(MailContentHeader);\r\n\r\nMailContentHeader.defaultProps = {\r\n  checkedMails: [],\r\n  page: 0,\r\n};\r\n\r\nMailContentHeader.prototype = {\r\n  checkedMails: PropTypes.array,\r\n  setCheckedMails: PropTypes.func,\r\n  page: PropTypes.number,\r\n  onPageChange: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport {Checkbox, makeStyles} from '@material-ui/core';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AppsStarredIcon from '../../../../../@crema/core/AppsStarredIcon';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontFamily: (props) => (!props.mail.isRead ? Fonts.MEDIUM : Fonts.REGULAR),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    borderBottom: '1px solid',\r\n    borderColor: 'white !important',\r\n    paddingTop: 4,\r\n    paddingBottom: 4,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    cursor: 'pointer',\r\n    [theme.breakpoints.up('sm')]: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingTop: 8,\r\n      paddingBottom: 8,\r\n    },\r\n  },\r\n  crMailTitle: {\r\n    fontWeight: Fonts.MEDIUM,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '120px',\r\n    },\r\n  },\r\n  crMailInfo: {\r\n    width: '100%',\r\n    padding: '5px 0 8px 15px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 'calc(100% - 256px)',\r\n      padding: 0,\r\n      paddingLeft: 16,\r\n    },\r\n  },\r\n  crMailTime: {\r\n    width: '100px',\r\n    marginLeft: 'auto',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  appsStarredRoot: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'inline-block',\r\n    },\r\n  },\r\n  truncate: {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  fontBold: {\r\n    fontWeight: Fonts.MEDIUM,\r\n  },\r\n  whitespacePre: {\r\n    whiteSpace: 'pre',\r\n  },\r\n}));\r\n\r\nconst MailListItem = (props) => {\r\n  const {\r\n    mail,\r\n    checkedMails,\r\n    onChangeCheckedMails,\r\n    onChangeStarred,\r\n    onViewMailDetail,\r\n  } = props;\r\n\r\n  const onGetMailDate = (date) => {\r\n    if (\r\n      moment(date, 'ddd, MMM DD, YYYY').format() ===\r\n      moment('ddd, MMM DD, YYYY').format()\r\n    ) {\r\n      return moment(date).format('LT');\r\n    } else {\r\n      return date.split(',')[1];\r\n    }\r\n  };\r\n\r\n  const classes = useStyles({mail});\r\n\r\n  return (\r\n    <ListItem\r\n      dense\r\n      button\r\n      key={mail.id}\r\n      className={clsx(classes.root, 'item-hover')}\r\n      onClick={() => onViewMailDetail(mail)}>\r\n      <Box display='flex' alignItems='center' width={{xs: '100%', sm: 'auto'}}>\r\n        <Box\r\n          component='span'\r\n          pr={2}\r\n          display='inline-block'\r\n          onClick={(event) => event.stopPropagation()}>\r\n          <Checkbox\r\n            checked={checkedMails.includes(mail.id)}\r\n            onChange={(event) => onChangeCheckedMails(event, mail.id)}\r\n            color='primary'\r\n          />\r\n        </Box>\r\n        <Box\r\n          pr={{xs: 2, sm: 4}}\r\n          component='span'\r\n          className={classes.appsStarredRoot}\r\n          onClick={(event) => event.stopPropagation()}>\r\n          <AppsStarredIcon item={mail} onChange={onChangeStarred} />\r\n        </Box>\r\n        <Typography\r\n          className={clsx(\r\n            classes.crMailTitle,\r\n            classes.truncate,\r\n            !mail.isRead ? classes.fontBold : '',\r\n          )}>\r\n          {mail.isReplied ? `${mail.sentBy}, me(2)` : mail.sentBy}\r\n        </Typography>\r\n        {mail.label ? (\r\n          <Box ml='auto' pl={4} component='span'>\r\n            <Tooltip title={mail.label.name} placement='top'>\r\n              <Box\r\n                height={12}\r\n                width={12}\r\n                component='span'\r\n                borderRadius='50%'\r\n                display='block'\r\n                bgcolor={`${mail.label.color}`}\r\n              />\r\n            </Tooltip>\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n\r\n      <Box className={classes.crMailInfo}>\r\n        <Box\r\n          mb={0}\r\n          component='p'\r\n          width={1}\r\n          className={clsx(\r\n            classes.truncate,\r\n            !mail.isRead ? classes.fontBold : '',\r\n          )}>\r\n          {mail.subject}\r\n        </Box>\r\n\r\n        <Box component='span' pl={2} className={classes.crMailTime}>\r\n          <Box component='span'>\r\n            {mail.isAttachment ? <AttachFileIcon /> : null}\r\n          </Box>\r\n          <Box component='span' className={classes.whitespacePre} pl={2}>\r\n            {onGetMailDate(mail.sentOn)}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default MailListItem;\r\n\r\nMailListItem.defaultProps = {\r\n  labelList: [],\r\n  checkedMails: [],\r\n};\r\n\r\nMailListItem.prototype = {\r\n  mail: PropTypes.object.isRequired,\r\n  labelList: PropTypes.array,\r\n  checkedMails: PropTypes.array,\r\n  onChangeCheckedMails: PropTypes.func,\r\n  onChangeStarred: PropTypes.func,\r\n  onViewMailDetail: PropTypes.func,\r\n};\r\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const MailItem = (props) => (\n  <ContentLoader viewBox='10 0 430 25'>\n    <rect x='15' y='10' rx='0' ry='0' width='10' height='10' />\n    <rect x='30' y='10' rx='10' ry='10' width='10' height='10' />\n    <rect x='50' y='10' rx='0' ry='0' width='40' height='10' />\n    <rect x='100' y='10' rx='0' ry='0' width='300' height='10' />\n    <rect x='410' y='10' rx='0' ry='0' width='20' height='10' />\n  </ContentLoader>\n);\nconst EmailListSkeleton = () => {\n  return (\n    <React.Fragment>\n      <MailItem />\n      <MailItem />\n      <MailItem />\n      <MailItem />\n      <MailItem />\n      <MailItem />\n      <MailItem />\n      <MailItem />\n      <MailItem />\n      <MailItem />\n    </React.Fragment>\n  );\n};\n\nexport default EmailListSkeleton;\n","import React, {useEffect, useState} from 'react';\r\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport MailContentHeader from './MailContentHeader';\r\nimport MailListItem from './MailListItem';\r\nimport {\r\n  onGetMailList,\r\n  onUpdateReadStatus,\r\n  onUpdateStarredStatus,\r\n} from '../../../../redux/actions';\r\nimport {Hidden} from '@material-ui/core';\r\nimport AppsPagination from '../../../../@crema/core/AppsPagination';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppsContent from '../../../../@crema/core/AppsContainer/AppsContent';\r\nimport AppsHeader from '../../../../@crema/core/AppsContainer/AppsHeader';\r\nimport AppsFooter from '../../../../@crema/core/AppsContainer/AppsFooter';\r\nimport AppList from '../../../../@crema/core/AppList';\r\nimport ListEmptyResult from '../../../../@crema/core/AppList/ListEmptyResult';\r\nimport EmailListSkeleton from '../../../../@crema/core/Skeleton/EmailListSkeleton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paddingY: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n}));\r\n\r\nconst MailsList = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  const mailList = useSelector(({mailApp}) => mailApp.mailList);\r\n\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const path = pathname.split('/');\r\n\r\n  const loading = useSelector(({common}) => common.loading);\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    const path = pathname.split('/');\r\n    setPage(0);\r\n    dispatch(onGetMailList(path[path.length - 2], path[path.length - 1], page));\r\n  }, [dispatch, page, pathname]);\r\n\r\n  const [checkedMails, setCheckedMails] = useState([]);\r\n\r\n  const onPageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const onChangeCheckedMails = (event, id) => {\r\n    if (event.target.checked) {\r\n      setCheckedMails(checkedMails.concat(id));\r\n    } else {\r\n      setCheckedMails(checkedMails.filter((mailId) => mailId !== id));\r\n    }\r\n  };\r\n\r\n  const onViewMailDetail = (mail) => {\r\n    const changedMailList = [mail.id];\r\n    dispatch(onUpdateReadStatus(changedMailList, true));\r\n    history.push(`/apps/mail/${params.name}/${mail.id}`);\r\n  };\r\n\r\n  const onChangeStarred = (checked, mail) => {\r\n    const selectedIdList = [mail.id];\r\n    dispatch(\r\n      onUpdateStarredStatus(selectedIdList, checked, path[path.length - 1]),\r\n    );\r\n  };\r\n\r\n  const totalMails = useSelector(({mailApp}) => mailApp.totalMails);\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <MailContentHeader\r\n          checkedMails={checkedMails}\r\n          setCheckedMails={setCheckedMails}\r\n          onPageChange={onPageChange}\r\n          page={page}\r\n          path={path}\r\n        />\r\n      </AppsHeader>\r\n      <AppsContent>\r\n        <AppList\r\n          className={classes.paddingY}\r\n          data={mailList}\r\n          ListEmptyComponent={\r\n            <ListEmptyResult\r\n              loading={loading}\r\n              placeholder={<EmailListSkeleton />}\r\n            />\r\n          }\r\n          renderRow={(mail) => (\r\n            <MailListItem\r\n              key={mail.id}\r\n              mail={mail}\r\n              labelList={labelList}\r\n              onChangeCheckedMails={onChangeCheckedMails}\r\n              checkedMails={checkedMails}\r\n              onViewMailDetail={onViewMailDetail}\r\n              onChangeStarred={onChangeStarred}\r\n            />\r\n          )}\r\n        />\r\n      </AppsContent>\r\n      <Hidden smUp>\r\n        {mailList.length > 0 ? (\r\n          <AppsFooter>\r\n            <AppsPagination\r\n              count={totalMails}\r\n              page={page}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </AppsFooter>\r\n        ) : null}\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailsList;\r\n","import React from 'react';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport InfoSharpIcon from '@material-ui/icons/InfoSharp';\r\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\r\nimport LabelSharpIcon from '@material-ui/icons/LabelSharp';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MarkunreadIcon from '@material-ui/icons/Markunread';\r\nimport {onUpdateSelectedMail} from '../../../../../redux/actions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport {Box} from '@material-ui/core';\r\nimport {useHistory} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\nconst MailDetailHeader = (props) => {\r\n  const {selectedMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const [isLabelOpen, onOpenLabel] = React.useState(null);\r\n\r\n  const [isMoreIcon, onOpenMoreIcon] = React.useState(null);\r\n\r\n  const onClickBackButton = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const onLabelOpen = (event) => {\r\n    onOpenLabel(event.currentTarget);\r\n  };\r\n\r\n  const onLabelClose = () => {\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onViewMoreOpen = (event) => {\r\n    onOpenMoreIcon(event.currentTarget);\r\n  };\r\n\r\n  const onViewMoreClose = () => {\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const onSelectLabel = (event) => {\r\n    const mail = selectedMail;\r\n    mail.label = event.target.value;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onChangeMailFolder = (type) => {\r\n    const mail = selectedMail;\r\n    mail.folderValue = type;\r\n    dispatch(onUpdateSelectedMail(mail, type));\r\n    history.goBack();\r\n  };\r\n\r\n  const onChangeReadStatus = () => {\r\n    const mail = selectedMail;\r\n    mail.isRead = false;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    history.goBack();\r\n  };\r\n\r\n  const onChangeStarredStatus = () => {\r\n    const mail = selectedMail;\r\n    mail.isStarred = !mail.isStarred;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const classes = useStyles(props);\r\n  if (!selectedMail) return null;\r\n  return (\r\n    <>\r\n      <Tooltip title={<IntlMessages id='common.back' />}>\r\n        <Box mx={2} my={0.5} component='span' color='text.disabled'>\r\n          <KeyboardBackspaceIcon\r\n            onClick={onClickBackButton}\r\n            className={classes.pointer}\r\n          />\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Box ml='auto'>\r\n        <Tooltip title={<IntlMessages id='common.archive' />}>\r\n          <Box ml={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n            <ArchiveIcon\r\n              className={classes.pointer}\r\n              onClick={() => onChangeMailFolder(127)}\r\n            />\r\n          </Box>\r\n        </Tooltip>\r\n\r\n        <Tooltip title={<IntlMessages id='common.reportSpam' />}>\r\n          <Box ml={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n            <InfoSharpIcon\r\n              className={classes.pointer}\r\n              onClick={() => onChangeMailFolder(125)}\r\n            />\r\n          </Box>\r\n        </Tooltip>\r\n\r\n        <Tooltip title={<IntlMessages id='common.trash' />}>\r\n          <Box ml={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n            <DeleteSharpIcon\r\n              className={classes.pointer}\r\n              onClick={() => onChangeMailFolder(126)}\r\n            />\r\n          </Box>\r\n        </Tooltip>\r\n\r\n        <Tooltip title={<IntlMessages id='mailApp.markAsUnread' />}>\r\n          <Box ml={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n            <MarkunreadIcon\r\n              className={classes.pointer}\r\n              onClick={() => onChangeReadStatus()}\r\n            />\r\n          </Box>\r\n        </Tooltip>\r\n\r\n        <Tooltip title={<IntlMessages id='common.label' />}>\r\n          <Box ml={{xs: 2, sm: 4}} component='span' color='text.disabled'>\r\n            <LabelSharpIcon\r\n              className={classes.pointer}\r\n              value={1}\r\n              onClick={onLabelOpen}\r\n            />\r\n          </Box>\r\n        </Tooltip>\r\n\r\n        <Menu\r\n          anchorEl={isLabelOpen}\r\n          open={Boolean(isLabelOpen)}\r\n          onClose={onLabelClose}>\r\n          {labelList.map((label) => {\r\n            return (\r\n              <MenuItem onClick={onSelectLabel} value={label.id} key={label.id}>\r\n                {label.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Menu>\r\n\r\n        <Tooltip title={<IntlMessages id='common.more' />}>\r\n          <Box ml={2} component='span' color='text.disabled'>\r\n            <MoreVertIcon\r\n              className={classes.pointer}\r\n              onClick={onViewMoreOpen}\r\n            />\r\n          </Box>\r\n        </Tooltip>\r\n\r\n        <Menu\r\n          anchorEl={isMoreIcon}\r\n          open={Boolean(isMoreIcon)}\r\n          onClose={onViewMoreClose}>\r\n          <MenuItem onClick={onChangeReadStatus}>\r\n            <IntlMessages id='mailApp.markAsUnread' />\r\n          </MenuItem>\r\n          <MenuItem onClick={onChangeStarredStatus}>\r\n            {selectedMail.isStarred ? (\r\n              <IntlMessages id='mailApp.markAsNotImportant' />\r\n            ) : (\r\n              <IntlMessages id='mailApp.markAsImportant' />\r\n            )}\r\n          </MenuItem>\r\n        </Menu>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailDetailHeader;\r\n\r\nMailDetailHeader.prototype = {\r\n  selectedMail: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField/index';\r\nimport Button from '@material-ui/core/Button/index';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    borderBottom: '1px solid',\r\n    borderColor: 'grey.300',\r\n  },\r\n  textareaAutosize: {\r\n    width: '100%',\r\n    '& .MuiInput-underline:before': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  btnRoot: {\r\n    paddingLeft: 32,\r\n    paddingRight: 32,\r\n    backgroundColor: grey[700],\r\n    color: theme.palette.primary.contrastText,\r\n    '&:hover, &:focus': {\r\n      backgroundColor: grey[800],\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n  },\r\n}));\r\n\r\nconst ReplyMail = (props) => {\r\n  const {selectedMail, onSubmitMail} = props;\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box p={5} mt={4} border={1} borderColor='grey.300' borderRadius='0.125rem'>\r\n      <TextField\r\n        fullWidth\r\n        margin='normal'\r\n        value={selectedMail.senderMailId}\r\n        className={classes.textField}\r\n      />\r\n\r\n      <Box mb={4}>\r\n        <TextField\r\n          className={classes.textareaAutosize}\r\n          rows='7'\r\n          name='content'\r\n          multiline\r\n        />\r\n      </Box>\r\n\r\n      <Button className={classes.btnRoot} onClick={onSubmitMail}>\r\n        <IntlMessages id='common.send' />\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReplyMail;\r\n\r\nReplyMail.prototype = {\r\n  selectedMail: PropTypes.object.isRequired,\r\n  onSubmitMail: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField/index';\r\nimport Button from '@material-ui/core/Button/index';\r\nimport InputAdornment from '@material-ui/core/InputAdornment/index';\r\nimport {Form, Formik, useField} from 'formik/dist/index';\r\nimport * as yup from 'yup';\r\nimport IntlMessages from '../../../../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport {Box} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport {useAuthUser} from '../../../../../../@crema/utility/AppHooks';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fontBold: {\r\n    fontWeight: Fonts.MEDIUM,\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  textareaAutosize: {\r\n    width: '100%',\r\n    '& .MuiInput-underline:before': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  btnRoot: {\r\n    paddingLeft: 32,\r\n    paddingRight: 32,\r\n    backgroundColor: grey[700],\r\n    color: theme.palette.primary.contrastText,\r\n    '&:hover, &:focus': {\r\n      backgroundColor: grey[800],\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n  },\r\n}));\r\n\r\nconst MyTextField = (props) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  to: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  cc: yup.string().email(<IntlMessages id='validation.emailFormat' />),\r\n});\r\n\r\nconst MailForward = (props) => {\r\n  const {onSubmitForwardedMail, selectedMail} = props;\r\n  const [isShowCC, onShowCC] = useState(false);\r\n\r\n  const onShowCcInput = () => {\r\n    onShowCC(true);\r\n  };\r\n\r\n  const user = useAuthUser();\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box border={1} borderColor='grey.300' borderRadius='0.125rem' mt={4} p={5}>\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          to: '',\r\n          cc: '',\r\n          content: '',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting, resetForm}) => {\r\n          setSubmitting(true);\r\n          const mail = {\r\n            id: Math.floor(Math.random()) * 1000000,\r\n            isChecked: false,\r\n            isStarred: selectedMail.isStarred,\r\n            isReplied: selectedMail.isReplied,\r\n            label: selectedMail.label,\r\n            sentBy: user.displayName,\r\n            subject: selectedMail.subject,\r\n            isAttachment: true,\r\n            sentAt: '10.30am',\r\n            sentOn: moment().format('llll'),\r\n            isRead: true,\r\n            folderValue: 122,\r\n            senderMailId: user.email,\r\n            ...data,\r\n          };\r\n          onSubmitForwardedMail(mail);\r\n          resetForm();\r\n          setSubmitting(false);\r\n        }}>\r\n        {({isSubmitting, values, handleChange}) => (\r\n          <Form>\r\n            <Box display='flex' alignItems='center'>\r\n              <MyTextField\r\n                fullWidth\r\n                margin='normal'\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment\r\n                      position='start'\r\n                      className={classes.fontBold}>\r\n                      <IntlMessages id='common.to' />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                name='to'\r\n              />\r\n\r\n              <Box\r\n                component='span'\r\n                ml={4}\r\n                className={classes.pointer}\r\n                onClick={onShowCcInput}>\r\n                <IntlMessages id='common.cc' />\r\n              </Box>\r\n            </Box>\r\n\r\n            {isShowCC ? (\r\n              <MyTextField\r\n                placeholder={messages['common.cc']}\r\n                fullWidth\r\n                margin='normal'\r\n                name='cc'\r\n              />\r\n            ) : null}\r\n\r\n            <Box mb={4}>\r\n              <TextField\r\n                className={classes.textareaAutosize}\r\n                rows='7'\r\n                name='content'\r\n                multiline\r\n                value={values.content}\r\n                onChange={handleChange}\r\n              />\r\n            </Box>\r\n\r\n            <Button\r\n              className={classes.btnRoot}\r\n              type='submit'\r\n              disabled={isSubmitting}>\r\n              <IntlMessages id='common.send' />\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MailForward;\r\n\r\nMailForward.prototype = {\r\n  onSubmitForwardedMail: PropTypes.func,\r\n  selectedMail: PropTypes.object.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar/index';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip/index';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory, useLocation, withRouter} from 'react-router-dom';\r\nimport {\r\n  onComposeMail,\r\n  onUpdateSelectedMail,\r\n} from '../../../../../redux/actions';\r\nimport ReplyMail from './ReplyMail';\r\nimport ForwardMail from './ForwardMail';\r\nimport moment from 'moment';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  breakAll: {\r\n    wordBreak: 'break-all',\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst MailDetailBody = (props) => {\r\n  const {selectedMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const [isReply, onReplyMail] = useState(false);\r\n\r\n  const [isForward, onForward] = useState(false);\r\n\r\n  const onReplyToMail = () => {\r\n    onForward(false);\r\n    onReplyMail(true);\r\n  };\r\n\r\n  const onForwardMail = () => {\r\n    onReplyMail(false);\r\n    onForward(true);\r\n  };\r\n\r\n  const onChangeStarred = () => {\r\n    const mail = selectedMail;\r\n    mail.isStarred = !mail.isStarred;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n  };\r\n\r\n  const onSubmitMail = () => {\r\n    const mail = selectedMail;\r\n    mail.folderValue = 122;\r\n    mail.isReplied = true;\r\n    dispatch(onUpdateSelectedMail(mail));\r\n    onReplyMail(false);\r\n    history.goBack();\r\n  };\r\n\r\n  const onSubmitForwardedMail = (mail) => {\r\n    dispatch(onComposeMail(mail, pathname));\r\n    history.goBack();\r\n  };\r\n\r\n  const onGetMailDate = (date) => {\r\n    return moment(date).format('ddd, MMM DD, YYYY');\r\n  };\r\n\r\n  const onGetMailTime = (date) => {\r\n    return moment(date).format('LT');\r\n  };\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box px={6} py={8}>\r\n      {selectedMail ? (\r\n        <Box color='text.secondary'>\r\n          <Box\r\n            mb={{xs: 4, sm: 6}}\r\n            display='flex'\r\n            flexDirection={{xs: 'column', sm: 'row'}}\r\n            alignItems={{sm: 'center'}}>\r\n            <Box display='flex' alignItems='center'>\r\n              <Avatar className={classes.avatar} />\r\n              <Box ml={4}>\r\n                <Box\r\n                  mb={0.5}\r\n                  color='primary.main'\r\n                  fontWeight={Fonts.MEDIUM}\r\n                  fontSize={16}>\r\n                  {selectedMail.sentBy}\r\n                </Box>\r\n                <Box component='span' className={classes.breakAll}>\r\n                  {selectedMail.senderMailId}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              ml={{sm: 'auto'}}\r\n              mt={{xs: 3, sm: 0}}\r\n              display='flex'\r\n              flexDirection={{xs: 'row', sm: 'column'}}\r\n              alignItems={{xs: 'center', sm: 'flex-end'}}>\r\n              <Box mb={0.5}>{onGetMailDate(selectedMail.sentOn)}</Box>\r\n              <Box ml={{xs: 3, sm: 0}}>\r\n                {onGetMailTime(selectedMail.sentOn)}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            mb={{xs: 3, sm: 5}}\r\n            display='flex'\r\n            flexDirection={{xs: 'column', sm: 'row'}}\r\n            alignItems={{sm: 'center'}}>\r\n            <Box color='text.primary' component='h5' fontWeight={Fonts.LIGHT}>\r\n              {selectedMail.subject ? selectedMail.subject : null}\r\n            </Box>\r\n\r\n            <Box\r\n              ml={{sm: 'auto'}}\r\n              mt={{xs: 3, sm: 0}}\r\n              display='flex'\r\n              alignItems='center'>\r\n              <Tooltip title={<IntlMessages id='common.reply' />}>\r\n                <Box component='span' color='text.secondary'>\r\n                  <ReplyIcon\r\n                    className={classes.pointer}\r\n                    onClick={onReplyToMail}\r\n                  />\r\n                </Box>\r\n              </Tooltip>\r\n\r\n              <Tooltip title={<IntlMessages id='common.starred' />}>\r\n                <Box component='span' color='text.secondary' ml={3}>\r\n                  <Checkbox\r\n                    icon={<StarBorderIcon />}\r\n                    checkedIcon={<StarIcon />}\r\n                    checked={selectedMail.isStarred}\r\n                    onChange={(event) => onChangeStarred(event)}\r\n                  />\r\n                </Box>\r\n              </Tooltip>\r\n\r\n              <Tooltip title={<IntlMessages id='common.forward' />}>\r\n                <Box component='span' color='text.secondary' ml={3}>\r\n                  <ForwardIcon\r\n                    className={classes.pointer}\r\n                    onClick={onForwardMail}\r\n                  />\r\n                </Box>\r\n              </Tooltip>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box mb={5}>\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              Respected Customer\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              Greetings of the day\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              This mail is to inform you that an amount of Rs 28743 has been\r\n              credited to your account in lieu of the Fixed Deposit that got\r\n              matured last week. We would be thankful to you if you acknowledge\r\n              this mail.\r\n            </Box>\r\n\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              Looking forward to help you in any way.\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              Sincerely\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              color='text.secondary'\r\n              fontSize={{xs: 14, xl: 16}}\r\n              mb={{xs: 3, xl: 5}}>\r\n              {selectedMail.sentBy}\r\n            </Box>\r\n          </Box>\r\n\r\n          {isReply ? (\r\n            <ReplyMail\r\n              selectedMail={selectedMail}\r\n              onSubmitMail={onSubmitMail}\r\n            />\r\n          ) : null}\r\n\r\n          {isForward ? (\r\n            <ForwardMail\r\n              selectedMail={selectedMail}\r\n              onSubmitForwardedMail={onSubmitForwardedMail}\r\n            />\r\n          ) : null}\r\n        </Box>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(MailDetailBody);\r\n\r\nMailDetailBody.prototype = {\r\n  selectedMail: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const MailDetailSkeleton = (props) => (\n  <ContentLoader\n    speed={2}\n    width={400}\n    height={160}\n    viewBox='0 0 400 160'\n    backgroundColor='#d9d9d9'\n    foregroundColor='#ecebeb'\n    {...props}>\n    <rect x='48' y='8' rx='3' ry='3' width='88' height='6' />\n    <rect x='48' y='26' rx='3' ry='3' width='52' height='6' />\n    <rect x='0' y='56' rx='3' ry='3' width='410' height='6' />\n    <rect x='0' y='72' rx='3' ry='3' width='380' height='6' />\n    <rect x='0' y='88' rx='3' ry='3' width='178' height='6' />\n    <circle cx='20' cy='20' r='20' />\n  </ContentLoader>\n);\n","import React, {createRef, useEffect} from 'react';\r\nimport MailDetailHeader from './MailDetailHeader';\r\nimport MailDetailBody from './MailDetailBody';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetSelectedMail, onNullifyMail} from '../../../../redux/actions';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport AppsContent from '../../../../@crema/core/AppsContainer/AppsContent';\r\nimport AppsHeader from '../../../../@crema/core/AppsContainer/AppsHeader';\r\nimport {Box} from '@material-ui/core';\r\nimport AppAnimate from '../../../../@crema/core/AppAnimate';\r\nimport {MailDetailSkeleton} from '../../../../@crema/core/Skeleton/MailDetailSkeleton';\r\n\r\nconst MailDetail = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const contentRef = createRef();\r\n\r\n  const {id} = useParams();\r\n  const selectedMail = useSelector(({mailApp}) => mailApp.selectedMail);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetSelectedMail(id));\r\n    return () => {\r\n      onNullifyMail();\r\n    };\r\n  }, [dispatch, id]);\r\n\r\n  if (!selectedMail) {\r\n    return <MailDetailSkeleton />;\r\n  }\r\n\r\n  return (\r\n    <Box height={1} display='flex' flexDirection='column' ref={contentRef}>\r\n      <AppsHeader>\r\n        <MailDetailHeader history={history} selectedMail={selectedMail} />\r\n      </AppsHeader>\r\n      <AppsContent isDetailView>\r\n        <AppAnimate animatoin='transition.slideUpIn'>\r\n          <MailDetailBody selectedMail={selectedMail} history={history} />\r\n        </AppAnimate>\r\n      </AppsContent>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MailDetail;\r\n","import React, {useState} from 'react';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport Scrollbar from '@crema/core/Scrollbar';\r\nimport {onComposeMail} from '../../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport moment from 'moment';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport {useLocation} from 'react-router-dom';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {useAuthUser} from '../../../../@crema/utility/AppHooks';\r\nimport {InfoView} from '../../../../@crema';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey, red} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport WorkIcon from '@material-ui/core/SvgIcon/SvgIcon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogBox: {\r\n    position: 'relative',\r\n    '& .MuiDialog-paperWidthSm': {\r\n      maxWidth: 600,\r\n      width: '100%',\r\n    },\r\n    '& .MuiTypography-h6': {\r\n      fontWeight: Fonts.LIGHT,\r\n    },\r\n  },\r\n  formRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingTop: 20,\r\n    [theme.breakpoints.up('xl')]: {},\r\n  },\r\n  fontBold: {\r\n    fontWeight: Fonts.MEDIUM,\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  textareaAutosizeRoot: {\r\n    width: '100%',\r\n    border: '0 none',\r\n    fontWeight: Fonts.REGULAR,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  btnRoot: {\r\n    paddingLeft: 32,\r\n    paddingRight: 32,\r\n  },\r\n  scrollRoot: {\r\n    height: 595,\r\n  },\r\n}));\r\nexport const isValidEmail = (value) => {\r\n  return value && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value);\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='down' ref={ref} {...props} />;\r\n});\r\n\r\nconst MyTextField = (props) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  to: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  cc: yup.string().email(<IntlMessages id='validation.emailFormat' />),\r\n  bcc: yup.string().email(<IntlMessages id='validation.emailFormat' />),\r\n});\r\n\r\nconst ComposeMail = (props) => {\r\n  const {isComposeMail, onCloseComposeMail} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const [isShowBcc, onShowBcc] = useState(false);\r\n\r\n  const [isShowCC, onShowCC] = useState(false);\r\n\r\n  const [isShowChip, onShowChip] = useState(false);\r\n\r\n  const handleBlur = (to) => {\r\n    if (to !== '') {\r\n      onShowChip(true);\r\n    }\r\n  };\r\n\r\n  const user = useAuthUser();\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Dialog\r\n      open={isComposeMail}\r\n      onClose={() => onCloseComposeMail(false)}\r\n      aria-labelledby='simple-modal-title'\r\n      TransitionComponent={Transition}\r\n      aria-describedby='simple-modal-description'\r\n      className={classes.dialogBox}>\r\n      <Box\r\n        py={6}\r\n        px={8}\r\n        display='flex'\r\n        flexDirection='row'\r\n        alignItems='center'\r\n        borderBottom={`1px solid ${grey[300]}`}>\r\n        <Box component='h5' mb={0} fontWeight={Fonts.LIGHT}>\r\n          <IntlMessages id='mailApp.compose' />\r\n        </Box>\r\n      </Box>\r\n      <Scrollbar className={classes.scrollRoot}>\r\n        <Formik\r\n          initialValues={{\r\n            to: '',\r\n            cc: '',\r\n            bcc: '',\r\n            subject: '',\r\n            content: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setSubmitting, resetForm}) => {\r\n            const mail = {\r\n              id: Math.floor(Math.random()) * 1000,\r\n              isChecked: false,\r\n              isStarred: false,\r\n              isReplied: false,\r\n              label: {\r\n                id: 211,\r\n                name: 'Crema',\r\n                alias: 'crema',\r\n                color: red[500],\r\n                icon: <WorkIcon />,\r\n              },\r\n              sentBy: user.displayName ? user.displayName : user.email,\r\n              isAttachment: false,\r\n              isRead: true,\r\n              folderValue: 122,\r\n              sentOn: moment().format('llll'),\r\n              senderMailId: user.email,\r\n              ...data,\r\n              subject: data.subject !== '' ? data.subject : 'No Subject',\r\n            };\r\n            dispatch(onComposeMail(mail, pathname));\r\n            onCloseComposeMail();\r\n            resetForm();\r\n            setSubmitting(false);\r\n          }}>\r\n          {({isSubmitting, values, handleChange}) => (\r\n            <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n              <Box px={8} flex={1}>\r\n                <Box display='flex' alignItems='center'>\r\n                  {!isShowChip ? (\r\n                    <MyTextField\r\n                      fullWidth\r\n                      margin='normal'\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment\r\n                            position='start'\r\n                            className={classes.fontBold}>\r\n                            To\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                      name='to'\r\n                      onBlur={() => handleBlur(values.to)}\r\n                    />\r\n                  ) : (\r\n                    <Chip\r\n                      label={values.to}\r\n                      color={isValidEmail(values.to) ? '' : 'secondary'}\r\n                      onDelete={() => onShowChip(false)}\r\n                      variant='outlined'\r\n                    />\r\n                  )}\r\n\r\n                  <Box\r\n                    component='span'\r\n                    ml={4}\r\n                    className={classes.pointer}\r\n                    onClick={() => onShowCC(!isShowCC)}>\r\n                    <IntlMessages id='common.cc' />\r\n                  </Box>\r\n\r\n                  <Box\r\n                    component='span'\r\n                    ml={4}\r\n                    className={classes.pointer}\r\n                    onClick={() => onShowBcc(!isShowBcc)}>\r\n                    <IntlMessages id='common.bcc' />\r\n                  </Box>\r\n                </Box>\r\n\r\n                {isShowCC ? (\r\n                  <Box width='1'>\r\n                    <MyTextField\r\n                      placeholder={messages['common.cc']}\r\n                      fullWidth\r\n                      margin='normal'\r\n                      name='cc'\r\n                    />\r\n                  </Box>\r\n                ) : null}\r\n\r\n                {isShowBcc ? (\r\n                  <Box width='1'>\r\n                    <MyTextField\r\n                      placeholder={messages['common.bcc']}\r\n                      fullWidth\r\n                      margin='normal'\r\n                      name='bcc'\r\n                    />\r\n                  </Box>\r\n                ) : null}\r\n                <Box mb={3}>\r\n                  <MyTextField\r\n                    placeholder={messages['common.subject']}\r\n                    fullWidth\r\n                    margin='normal'\r\n                    name='subject'\r\n                  />\r\n                </Box>\r\n\r\n                <Box mb={3}>\r\n                  <TextField\r\n                    multiline\r\n                    className={classes.textareaAutosizeRoot}\r\n                    rows={15}\r\n                    name='content'\r\n                    placeholder={messages['common.writeContent']}\r\n                    value={values.content}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box px={8} py={4} bgcolor='grey.300'>\r\n                <Button\r\n                  className={classes.btnRoot}\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  type='submit'\r\n                  disabled={isSubmitting}>\r\n                  <IntlMessages id='common.send' />\r\n                </Button>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <InfoView />\r\n      </Scrollbar>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ComposeMail;\r\n\r\nComposeMail.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nComposeMail.prototype = {\r\n  isComposeMail: PropTypes.bool.isRequired,\r\n  onCloseComposeMail: PropTypes.func.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Launcher} from 'react-chat-window';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChatWindow = ({isOpenChat, setOpenChat, connection}) => {\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  const onMessageWasSent = (message) => {\r\n    setMessageList([...messageList, message]);\r\n  };\r\n\r\n  const onFilesSelected = (fileList) => {\r\n    const objectURL = window.URL.createObjectURL(fileList[0]);\r\n    setMessageList([\r\n      messageList,\r\n      {\r\n        type: 'file',\r\n        author: 'me',\r\n        data: {\r\n          url: objectURL,\r\n          fileName: fileList[0].name,\r\n        },\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpenChat(false);\r\n  };\r\n\r\n  return (\r\n    <Launcher\r\n      agentProfile={{\r\n        teamName: connection.name,\r\n        imageUrl: connection.image,\r\n      }}\r\n      onMessageWasSent={onMessageWasSent}\r\n      onFilesSelected={onFilesSelected}\r\n      messageList={messageList}\r\n      handleClick={handleClick}\r\n      isOpen={isOpenChat}\r\n      showEmoji\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n\r\nChatWindow.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nChatWindow.prototype = {\r\n  isOpenChat: PropTypes.bool.isRequired,\r\n  setOpenChat: PropTypes.func.isRequired,\r\n  connection: PropTypes.object,\r\n};\r\n","import React, {useState} from 'react';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChatWindow from './ChatWindow';\r\nimport {Box, makeStyles} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    cursor: 'pointer',\r\n  },\r\n  avatar: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  marginTop0: {\r\n    marginTop: 0,\r\n  },\r\n  marginY: {\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n  },\r\n}));\r\n\r\nconst ConnectionListItem = (props) => {\r\n  const {connection} = props;\r\n  const [isOpenChat, setOpenChat] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        onClick={() => setOpenChat(true)}\r\n        key={connection.id}\r\n        className={classes.listItem}\r\n        alignItems='flex-start'>\r\n        <Box component='span'>\r\n          <ListItemAvatar className={classes.marginTop0}>\r\n            <Avatar\r\n              className={classes.avatar}\r\n              alt='Remy Sharp'\r\n              src={connection.image}\r\n            />\r\n          </ListItemAvatar>\r\n        </Box>\r\n        <ListItemText\r\n          className={classes.marginY}\r\n          primary={\r\n            <Box component='p' mb={0} fontWeight={Fonts.MEDIUM}>\r\n              {connection.name}\r\n            </Box>\r\n          }\r\n          secondary={\r\n            <Box component='span' display='block' color='text.primary'>\r\n              {connection.status}\r\n            </Box>\r\n          }\r\n        />\r\n      </ListItem>\r\n\r\n      {isOpenChat ? (\r\n        <ChatWindow\r\n          setOpenChat={setOpenChat}\r\n          isOpenChat={isOpenChat}\r\n          connection={connection}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConnectionListItem;\r\n\r\nConnectionListItem.defaultProps = {\r\n  connection: null,\r\n};\r\n\r\nConnectionListItem.prototype = {\r\n  connection: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from '../../../../@crema';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItemText: {\r\n    '& .MuiTypography-body1': {\r\n      fontSize: 15,\r\n      fontWeight: Fonts.MEDIUM,\r\n    },\r\n  },\r\n}));\r\n\r\nconst LabelItem = ({label}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ListItem\r\n      key={label.id}\r\n      button\r\n      to={`/apps/mail/label/${label.alias}`}\r\n      component={NavLink}\r\n      activeClassName='active'>\r\n      <Box\r\n        component='span'\r\n        height={12}\r\n        width={12}\r\n        mr={{xs: 4, xl: 5}}\r\n        borderRadius='50%'\r\n        bgcolor={`${label.color}`}\r\n      />\r\n      <Box my={{xl: 1}} clone>\r\n        <ListItemText className={classes.listItemText} primary={label.name} />\r\n      </Box>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default LabelItem;\r\n\r\nLabelItem.prototype = {\r\n  label: PropTypes.object.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Scrollbar from '../../../../@crema/core/Scrollbar';\r\nimport {useSelector} from 'react-redux';\r\nimport ComposeMail from '../ComposeMail';\r\nimport ConnectionListItem from './ConnectionListItem';\r\nimport AppsSideBarFolderItem from '../../../../@crema/core/AppsSideBarFolderItem';\r\nimport LabelItem from './LabelItem';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport AppList from '../../../../@crema/core/AppList';\r\nimport AppAnimate from '../../../../@crema/core/AppAnimate';\r\nimport ListEmptyResult from '../../../../@crema/core/AppList/ListEmptyResult';\r\nimport SidebarPlaceholder from '../../../../@crema/core/Skeleton/SidebarListSkeleton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  btnRoot: {\r\n    width: '100%',\r\n    fontSize: 16,\r\n    textTransform: 'capitalize',\r\n    fontWeight: Fonts.MEDIUM,\r\n  },\r\n  listRoot: {\r\n    marginBottom: 8,\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nconst MailSidebar = (props) => {\r\n  const labelList = useSelector(({mailApp}) => mailApp.labelList);\r\n\r\n  const connectionList = useSelector(({mailApp}) => mailApp.connectionList);\r\n\r\n  const folderList = useSelector(({mailApp}) => mailApp.folderList);\r\n\r\n  const [isComposeMail, setComposeMail] = useState(false);\r\n\r\n  const onOpenComposeMail = () => {\r\n    setComposeMail(true);\r\n  };\r\n\r\n  const onCloseComposeMail = () => {\r\n    setComposeMail(false);\r\n  };\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <>\r\n      {labelList && connectionList && folderList ? (\r\n        <>\r\n          <Box px={{xs: 4, md: 5}} pt={{xs: 4, md: 5}} pb={{xs: 2, xl: 5}}>\r\n            <AppAnimate>\r\n              <Button\r\n                variant='contained'\r\n                color='secondary'\r\n                className={classes.btnRoot}\r\n                onClick={onOpenComposeMail}>\r\n                <IntlMessages id='common.compose' />\r\n              </Button>\r\n            </AppAnimate>\r\n          </Box>\r\n\r\n          <Scrollbar\r\n            className={clsx(classes.scLauncher)}\r\n            style={{\r\n              height: 'calc(100% - 80px)',\r\n            }}>\r\n            <Box\r\n              px={{xs: 4, md: 5, lg: 6, xl: 8}}\r\n              pb={{xs: 4, md: 5, lg: 6, xl: 8}}\r\n              pt={0}>\r\n              <List\r\n                className={classes.listRoot}\r\n                component='nav'\r\n                aria-label='main mailbox folders'>\r\n                <AppList\r\n                  data={folderList}\r\n                  ListEmptyComponent={\r\n                    <ListEmptyResult\r\n                      loading={true}\r\n                      placeholder={<SidebarPlaceholder />}\r\n                    />\r\n                  }\r\n                  renderRow={(item) => (\r\n                    <AppsSideBarFolderItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      classes={classes}\r\n                      path={`/apps/mail/folder/${item.alias}`}\r\n                    />\r\n                  )}\r\n                />\r\n              </List>\r\n\r\n              <Box\r\n                component='h5'\r\n                fontSize={16}\r\n                mt={{xs: 4, xl: 5}}\r\n                fontWeight={Fonts.MEDIUM}>\r\n                <IntlMessages id='common.labels' />\r\n              </Box>\r\n\r\n              <List\r\n                className={classes.listRoot}\r\n                component='nav'\r\n                aria-label='main mailbox folders'>\r\n                <AppList\r\n                  data={labelList}\r\n                  ListEmptyComponent={\r\n                    <ListEmptyResult\r\n                      loading={true}\r\n                      placeholder={<SidebarPlaceholder />}\r\n                    />\r\n                  }\r\n                  renderRow={(label) => (\r\n                    <LabelItem classes={classes} key={label.id} label={label} />\r\n                  )}\r\n                />\r\n              </List>\r\n\r\n              <Box\r\n                component='h5'\r\n                fontSize={16}\r\n                mt={{xs: 4, xl: 5}}\r\n                fontWeight={Fonts.MEDIUM}>\r\n                <IntlMessages id='common.connections' />\r\n              </Box>\r\n\r\n              <List>\r\n                <AppList\r\n                  data={connectionList}\r\n                  ListEmptyComponent={\r\n                    <ListEmptyResult\r\n                      loading={true}\r\n                      placeholder={<SidebarPlaceholder />}\r\n                    />\r\n                  }\r\n                  renderRow={(connection) => (\r\n                    <ConnectionListItem\r\n                      classes={classes}\r\n                      connection={connection}\r\n                      key={connection.id}\r\n                    />\r\n                  )}\r\n                />\r\n              </List>\r\n            </Box>\r\n          </Scrollbar>\r\n        </>\r\n      ) : null}\r\n\r\n      {isComposeMail ? (\r\n        <ComposeMail\r\n          isComposeMail={isComposeMail}\r\n          onCloseComposeMail={onCloseComposeMail}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MailSidebar;\r\n","import React, {useEffect} from 'react';\r\nimport MailsList from './MailsList';\r\nimport MailDetail from './MailDetail';\r\nimport {\r\n  onGetConnectionList,\r\n  onGetFolderList,\r\n  onGetLabelList,\r\n} from '../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AppsContainer from '../../../@crema/core/AppsContainer';\r\nimport MailSidebar from './MailSideBar';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst Mail = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetLabelList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetFolderList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetConnectionList());\r\n  }, [dispatch]);\r\n\r\n  const onGetMainComponent = () => {\r\n    if (props.match.params.id) {\r\n      return <MailDetail />;\r\n    } else {\r\n      return <MailsList />;\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppsContainer\r\n      title={messages['mailApp.mail']}\r\n      sidebarContent={<MailSidebar />}>\r\n      {onGetMainComponent()}\r\n    </AppsContainer>\r\n  );\r\n};\r\n\r\nexport default Mail;\r\n\r\nMail.defaultProps = {\r\n  match: null,\r\n};\r\n\r\nMail.prototype = {\r\n  match: PropTypes.node,\r\n};\r\n"],"sourceRoot":""}