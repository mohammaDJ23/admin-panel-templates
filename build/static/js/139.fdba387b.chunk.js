(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[139],{3160:function(e,n,o){"use strict";o.r(n);var t=o(0),a=o.n(t),r=o(359),m=o(408),s=o(407),i=o(406),l=o(413),p=o(414),c=o(438),d=o(416),h=o(415),g=o(1484),u=window.google,M=Object(g.withGoogleMap)((function(e){return a.a.createElement(g.GoogleMap,{ref:e.onMapMounted,onZoomChanged:e.onZoomChanged,defaultCenter:e.center,zoom:e.zoom},a.a.createElement(g.InfoWindow,{defaultPosition:e.center},a.a.createElement("div",null,e.content)))})),v=function(e){Object(d.a)(o,e);var n=Object(h.a)(o);function o(){var e;Object(l.a)(this,o);for(var t=arguments.length,a=new Array(t),r=0;r<t;r++)a[r]=arguments[r];return(e=n.call.apply(n,[this].concat(a))).state={zoom:15,content:"Change the zoom level"},e.handleMapMounted=e.handleMapMounted.bind(Object(c.a)(e)),e.handleZoomChanged=e.handleZoomChanged.bind(Object(c.a)(e)),e}return Object(p.a)(o,[{key:"handleMapMounted",value:function(e){this._map=e}},{key:"handleZoomChanged",value:function(){var e=this._map.getZoom();e!==this.state.zoom&&this.setState({zoom:e,content:"Zoom: ".concat(e)})}},{key:"render",value:function(){return a.a.createElement(M,{containerElement:a.a.createElement("div",{className:"cr-embed-responsive cr-embed-responsive-21by9"}),mapElement:a.a.createElement("div",{className:"cr-embed-responsive-item"}),onMapMounted:this.handleMapMounted,onZoomChanged:this.handleZoomChanged,center:new u.maps.LatLng(47.646935,-122.303763),zoom:this.state.zoom,content:this.state.content})}}]),o}(t.Component);n.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(s.a,{title:"Event Handler Google Map",refUrl:"http://google-map-react.github.io/google-map-react/map/balderdash/"}),a.a.createElement(i.a,null,a.a.createElement(r.a,{item:!0,xs:12},a.a.createElement(m.a,{title:"Event Handler Map",component:v,source:"import React, {Component} from 'react';\r\nimport {GoogleMap, InfoWindow, withGoogleMap} from 'react-google-maps';\r\n\r\nconst google = window.google;\r\n\r\nconst GettingPropertiesExampleGoogleMap = withGoogleMap((props) => (\r\n  <GoogleMap\r\n    ref={props.onMapMounted}\r\n    onZoomChanged={props.onZoomChanged}\r\n    defaultCenter={props.center}\r\n    zoom={props.zoom}>\r\n    <InfoWindow defaultPosition={props.center}>\r\n      <div>{props.content}</div>\r\n    </InfoWindow>\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\r\n *\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"><\/script> to your HTML to provide google.maps reference\r\n */\r\nexport default class EventHandler extends Component {\r\n  state = {\r\n    zoom: 15,\r\n    content: `Change the zoom level`,\r\n  };\r\n\r\n  handleMapMounted = this.handleMapMounted.bind(this);\r\n  handleZoomChanged = this.handleZoomChanged.bind(this);\r\n\r\n  handleMapMounted(map) {\r\n    this._map = map;\r\n  }\r\n\r\n  handleZoomChanged() {\r\n    const nextZoom = this._map.getZoom();\r\n    if (nextZoom !== this.state.zoom) {\r\n      // Notice: Check zoom equality here,\r\n      // or it will fire zoom_changed event infinitely\r\n      this.setState({\r\n        zoom: nextZoom,\r\n        content: `Zoom: ${nextZoom}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GettingPropertiesExampleGoogleMap\r\n        containerElement={\r\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\r\n        }\r\n        mapElement={<div className='cr-embed-responsive-item' />}\r\n        onMapMounted={this.handleMapMounted}\r\n        onZoomChanged={this.handleZoomChanged}\r\n        center={new google.maps.LatLng(47.646935, -122.303763)}\r\n        zoom={this.state.zoom}\r\n        content={this.state.content}\r\n      />\r\n    );\r\n  }\r\n}\r\n"}))))}}}]);
//# sourceMappingURL=139.fdba387b.chunk.js.map