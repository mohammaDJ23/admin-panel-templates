{"version":3,"sources":["modules/thirdParty/recharts/Composed/Components/data.js","modules/thirdParty/recharts/Composed/Components/LineBarAreaComposedChart.js","modules/thirdParty/recharts/Composed/Components/VerticalComposedChart.js","modules/thirdParty/recharts/Composed/Components/SameDataComposedChart.js","modules/thirdParty/recharts/Composed/Components/ComposedChartWithAxisLabels.js","modules/thirdParty/recharts/Composed/index.js","webpack:///./src/modules/thirdParty/recharts/Composed/Components/LineBarAreaComposedChart.js?dd1d","webpack:///./src/modules/thirdParty/recharts/Composed/Components/VerticalComposedChart.js?18e4","webpack:///./src/modules/thirdParty/recharts/Composed/Components/SameDataComposedChart.js?bfc1","webpack:///./src/modules/thirdParty/recharts/Composed/Components/ComposedChartWithAxisLabels.js?d350"],"names":["data","name","uv","pv","amt","LineBarAreaComposedChart","width","height","margin","top","right","left","bottom","dataKey","stroke","type","fill","barSize","VerticalComposedChart","layout","SameDataComposedChart","ComposedChartWithAxisLabels","ComposedChart","match","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","component","source"],"mappings":"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","file":"static/js/156.d6300d13.chunk.js","sourcesContent":["const data = [\r\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n  {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\r\n  {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n  {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\nexport default data;\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  Bar,\r\n  CartesianGrid,\r\n  ComposedChart,\r\n  Legend,\r\n  Line,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst LineBarAreaComposedChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <ComposedChart\r\n      data={data}\r\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <CartesianGrid stroke='#f5f5f5' />\r\n      <Area type='monotone' dataKey='amt' fill='#F04F47' stroke='#F04F47' />\r\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\r\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\r\n    </ComposedChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default LineBarAreaComposedChart;\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  Bar,\r\n  CartesianGrid,\r\n  ComposedChart,\r\n  Legend,\r\n  Line,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst VerticalComposedChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <ComposedChart\r\n      layout='vertical'\r\n      data={data}\r\n      margin={{top: 10, right: 0, left: -12, bottom: 0}}>\r\n      <XAxis type='number' />\r\n      <YAxis dataKey='name' type='category' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <CartesianGrid stroke='#f5f5f5' />\r\n      <Area dataKey='amt' fill='#F04F47' stroke='#F04F47' />\r\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\r\n      <Line dataKey='uv' stroke='#59AA2B' />\r\n    </ComposedChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default VerticalComposedChart;\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  CartesianGrid,\r\n  ComposedChart,\r\n  Legend,\r\n  Line,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst SameDataComposedChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <ComposedChart\r\n      data={data}\r\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <CartesianGrid stroke='#f5f5f5' />\r\n      <Bar dataKey='uv' barSize={20} fill='#4299E1' />\r\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\r\n    </ComposedChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default SameDataComposedChart;\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  Bar,\r\n  CartesianGrid,\r\n  ComposedChart,\r\n  Legend,\r\n  Line,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst ComposedChartWithAxisLabels = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <ComposedChart\r\n      data={data}\r\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <CartesianGrid stroke='#f5f5f5' />\r\n      <Area type='monotone' dataKey='amt' fill='#F04F47' stroke='#F04F47' />\r\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\r\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\r\n    </ComposedChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default ComposedChartWithAxisLabels;\r\n","import React from 'react';\r\nimport LineBarAreaComposedChart from './Components/LineBarAreaComposedChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport LineBarAreaComposedChartSource from '!raw-loader!./Components/LineBarAreaComposedChart';\r\nimport VerticalComposedChart from './Components/VerticalComposedChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport VerticalComposedChartSource from '!raw-loader!./Components/VerticalComposedChart';\r\nimport SameDataComposedChart from './Components/SameDataComposedChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SameDataComposedChartSource from '!raw-loader!./Components/SameDataComposedChart';\r\nimport ComposedChartWithAxisLabels from './Components/ComposedChartWithAxisLabels';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ComposedChartWithAxisLabelsSource from '!raw-loader!./Components/ComposedChartWithAxisLabels';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nconst ComposedChart = ({match}) => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Composed Chart'\r\n        description='A chart composed of line, area, and bar charts. When you just want to draw a chart of a single type like line, then LineChart is recommended.'\r\n        refUrl='http://recharts.org/en-US/api/ComposedChart/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Line Bar Area Composed Chart'\r\n            component={LineBarAreaComposedChart}\r\n            source={LineBarAreaComposedChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Line Bar Area Composed Chart'\r\n            component={VerticalComposedChart}\r\n            source={VerticalComposedChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Same Data Composed Chart'\r\n            component={SameDataComposedChart}\r\n            source={SameDataComposedChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Composed Chart With Axis Labels'\r\n            component={ComposedChartWithAxisLabels}\r\n            source={ComposedChartWithAxisLabelsSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComposedChart;\r\n","export default \"import React from 'react';\\r\\nimport {\\r\\n  Area,\\r\\n  Bar,\\r\\n  CartesianGrid,\\r\\n  ComposedChart,\\r\\n  Legend,\\r\\n  Line,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst LineBarAreaComposedChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <ComposedChart\\r\\n      data={data}\\r\\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <CartesianGrid stroke='#f5f5f5' />\\r\\n      <Area type='monotone' dataKey='amt' fill='#F04F47' stroke='#F04F47' />\\r\\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\\r\\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\\r\\n    </ComposedChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default LineBarAreaComposedChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Area,\\r\\n  Bar,\\r\\n  CartesianGrid,\\r\\n  ComposedChart,\\r\\n  Legend,\\r\\n  Line,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst VerticalComposedChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <ComposedChart\\r\\n      layout='vertical'\\r\\n      data={data}\\r\\n      margin={{top: 10, right: 0, left: -12, bottom: 0}}>\\r\\n      <XAxis type='number' />\\r\\n      <YAxis dataKey='name' type='category' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <CartesianGrid stroke='#f5f5f5' />\\r\\n      <Area dataKey='amt' fill='#F04F47' stroke='#F04F47' />\\r\\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\\r\\n      <Line dataKey='uv' stroke='#59AA2B' />\\r\\n    </ComposedChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default VerticalComposedChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Bar,\\r\\n  CartesianGrid,\\r\\n  ComposedChart,\\r\\n  Legend,\\r\\n  Line,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst SameDataComposedChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <ComposedChart\\r\\n      data={data}\\r\\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <CartesianGrid stroke='#f5f5f5' />\\r\\n      <Bar dataKey='uv' barSize={20} fill='#4299E1' />\\r\\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\\r\\n    </ComposedChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default SameDataComposedChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Area,\\r\\n  Bar,\\r\\n  CartesianGrid,\\r\\n  ComposedChart,\\r\\n  Legend,\\r\\n  Line,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst ComposedChartWithAxisLabels = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <ComposedChart\\r\\n      data={data}\\r\\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <CartesianGrid stroke='#f5f5f5' />\\r\\n      <Area type='monotone' dataKey='amt' fill='#F04F47' stroke='#F04F47' />\\r\\n      <Bar dataKey='pv' barSize={20} fill='#4299E1' />\\r\\n      <Line type='monotone' dataKey='uv' stroke='#59AA2B' />\\r\\n    </ComposedChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default ComposedChartWithAxisLabels;\\r\\n\";"],"sourceRoot":""}