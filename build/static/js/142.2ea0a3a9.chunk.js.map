{"version":3,"sources":["modules/thirdParty/googleMap/MapOverlay/Components/MapOverlay.js","modules/thirdParty/googleMap/MapOverlay/index.js","webpack:///./src/modules/thirdParty/googleMap/MapOverlay/Components/MapOverlay.js?5267"],"names":["STYLES","mapContainer","height","overlayView","background","border","padding","getPixelPositionOffset","width","x","y","OverlayViewExampleGoogleMap","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","position","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","style","Button","variant","color","onClick","count","MapOverlay","state","handleClick","bind","this","setState","containerElement","className","mapElement","Component","MapOverlayEx","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","source"],"mappings":"kOAIMA,EAAS,CACbC,aAAc,CACZC,OAAQ,KAEVC,YAAa,CACXC,WAAY,OACZC,OAAQ,iBACRC,QAAS,KAIb,SAASC,EAAuBC,EAAON,GACrC,MAAO,CAACO,GAAKD,EAAQ,EAAIE,GAAKR,EAAS,GAGzC,IAAMS,EAA8BC,yBAAc,SAACC,GAAD,OAChD,kBAAC,YAAD,CACEC,YAAa,GACbC,cAAe,CAACC,IAAK,UAAWC,KAAM,aACtC,kBAAC,cAAD,CACEC,SAAU,CAACF,IAAK,UAAWC,KAAM,YAejCE,YAAaC,cAAYC,qBAKzBd,uBAAwBA,GAKxB,yBAAKe,MAAOtB,EAAOG,aACjB,2CACA,kBAACoB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASb,EAAMa,SAA3D,uBACuBb,EAAMc,MAD7B,QACyD,IAAhBd,EAAMc,MAAN,cAU5BC,E,4MACnBC,MAAQ,CACNF,MAAO,G,EAGTG,YAAc,EAAKA,YAAYC,KAAjB,gB,4DAGZC,KAAKC,SAAS,CAACN,MAAOK,KAAKH,MAAMF,MAAQ,M,+BAIzC,OACE,kBAAChB,EAAD,CACEuB,iBACE,yBAAKC,UAAU,kDAEjBC,WAAY,yBAAKD,UAAU,6BAC3BR,MAAOK,KAAKH,MAAMF,MAClBD,QAASM,KAAKF,kB,GAnBkBO,aC7BzBC,UAtBM,WACnB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,kBACNC,YAAY,2CACZC,OAAO,4FAGT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEP,MAAM,cACNQ,UAAWpB,EACXqB,OCzBG","file":"static/js/142.2ea0a3a9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {GoogleMap, OverlayView, withGoogleMap} from 'react-google-maps';\r\n\r\nconst STYLES = {\r\n  mapContainer: {\r\n    height: 500,\r\n  },\r\n  overlayView: {\r\n    background: '#fff',\r\n    border: '1px solid #ccc',\r\n    padding: 15,\r\n  },\r\n};\r\n\r\nfunction getPixelPositionOffset(width, height) {\r\n  return {x: -(width / 2), y: -(height / 2)};\r\n}\r\n\r\nconst OverlayViewExampleGoogleMap = withGoogleMap((props) => (\r\n  <GoogleMap\r\n    defaultZoom={15}\r\n    defaultCenter={{lat: 47.646935, lng: -122.303763}}>\r\n    <OverlayView\r\n      position={{lat: 47.646935, lng: -122.303763}}\r\n      /*\r\n       * An alternative to specifying position is specifying bounds.\r\n       * bounds can either be an instance of google.maps.LatLngBounds\r\n       * or an object in the following format:\r\n       * bounds={{\r\n       *    ne: { lat: 62.400471, lng: -150.005608 },\r\n       *    sw: { lat: 62.281819, lng: -150.287132 }\r\n       * }}\r\n       */\r\n      /*\r\n       * 1. Specify the pane the OverlayView will be rendered to. For\r\n       *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\r\n       *    Defaults to `OverlayView.OVERLAY_LAYER`.\r\n       */\r\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n      /*\r\n       * 2. Tweak the OverlayView's pixel position. In this case, we're\r\n       *    centering the content.\r\n       */\r\n      getPixelPositionOffset={getPixelPositionOffset}\r\n      /*\r\n       * 3. Create OverlayView content using standard React components.\r\n       */\r\n    >\r\n      <div style={STYLES.overlayView}>\r\n        <h1>OverlayView</h1>\r\n        <Button variant='contained' color='primary' onClick={props.onClick}>\r\n          I have been clicked {props.count} time{props.count === 1 ? `` : `s`}\r\n        </Button>\r\n      </div>\r\n    </OverlayView>\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nexport default class MapOverlay extends Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n\r\n  handleClick = this.handleClick.bind(this);\r\n\r\n  handleClick() {\r\n    this.setState({count: this.state.count + 1});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <OverlayViewExampleGoogleMap\r\n        containerElement={\r\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\r\n        }\r\n        mapElement={<div className='cr-embed-responsive-item' />}\r\n        count={this.state.count}\r\n        onClick={this.handleClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nimport MapOverlay from './Components/MapOverlay';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapOverlaySource from '!raw-loader!./Components/MapOverlay';\r\n\r\nconst MapOverlayEx = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='OverlayView Map'\r\n        description='A wrapper around google.maps.OverlayView'\r\n        refUrl='https://developers.google.com/maps/documentation/javascript/3.exp/reference#OverlayView'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Map Overlay'\r\n            component={MapOverlay}\r\n            source={MapOverlaySource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapOverlayEx;\r\n","export default \"import React, {Component} from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport {GoogleMap, OverlayView, withGoogleMap} from 'react-google-maps';\\r\\n\\r\\nconst STYLES = {\\r\\n  mapContainer: {\\r\\n    height: 500,\\r\\n  },\\r\\n  overlayView: {\\r\\n    background: '#fff',\\r\\n    border: '1px solid #ccc',\\r\\n    padding: 15,\\r\\n  },\\r\\n};\\r\\n\\r\\nfunction getPixelPositionOffset(width, height) {\\r\\n  return {x: -(width / 2), y: -(height / 2)};\\r\\n}\\r\\n\\r\\nconst OverlayViewExampleGoogleMap = withGoogleMap((props) => (\\r\\n  <GoogleMap\\r\\n    defaultZoom={15}\\r\\n    defaultCenter={{lat: 47.646935, lng: -122.303763}}>\\r\\n    <OverlayView\\r\\n      position={{lat: 47.646935, lng: -122.303763}}\\r\\n      /*\\r\\n       * An alternative to specifying position is specifying bounds.\\r\\n       * bounds can either be an instance of google.maps.LatLngBounds\\r\\n       * or an object in the following format:\\r\\n       * bounds={{\\r\\n       *    ne: { lat: 62.400471, lng: -150.005608 },\\r\\n       *    sw: { lat: 62.281819, lng: -150.287132 }\\r\\n       * }}\\r\\n       */\\r\\n      /*\\r\\n       * 1. Specify the pane the OverlayView will be rendered to. For\\r\\n       *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\\r\\n       *    Defaults to `OverlayView.OVERLAY_LAYER`.\\r\\n       */\\r\\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\\r\\n      /*\\r\\n       * 2. Tweak the OverlayView's pixel position. In this case, we're\\r\\n       *    centering the content.\\r\\n       */\\r\\n      getPixelPositionOffset={getPixelPositionOffset}\\r\\n      /*\\r\\n       * 3. Create OverlayView content using standard React components.\\r\\n       */\\r\\n    >\\r\\n      <div style={STYLES.overlayView}>\\r\\n        <h1>OverlayView</h1>\\r\\n        <Button variant='contained' color='primary' onClick={props.onClick}>\\r\\n          I have been clicked {props.count} time{props.count === 1 ? `` : `s`}\\r\\n        </Button>\\r\\n      </div>\\r\\n    </OverlayView>\\r\\n  </GoogleMap>\\r\\n));\\r\\n\\r\\n/*\\r\\n * Add <script src=\\\"https://maps.googleapis.com/maps/api/js\\\"></script> to your HTML to provide google.maps reference\\r\\n */\\r\\nexport default class MapOverlay extends Component {\\r\\n  state = {\\r\\n    count: 0,\\r\\n  };\\r\\n\\r\\n  handleClick = this.handleClick.bind(this);\\r\\n\\r\\n  handleClick() {\\r\\n    this.setState({count: this.state.count + 1});\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <OverlayViewExampleGoogleMap\\r\\n        containerElement={\\r\\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\\r\\n        }\\r\\n        mapElement={<div className='cr-embed-responsive-item' />}\\r\\n        count={this.state.count}\\r\\n        onClick={this.handleClick}\\r\\n      />\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\";"],"sourceRoot":""}