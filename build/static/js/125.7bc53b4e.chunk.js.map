{"version":3,"sources":["modules/muiComponents/inputs/Selects/SimpleSelect.js","webpack:///./src/modules/muiComponents/inputs/Selects/SimpleSelect.js?7291","modules/muiComponents/inputs/Selects/NativeSelect.js","webpack:///./src/modules/muiComponents/inputs/Selects/NativeSelect.js?437e","modules/muiComponents/inputs/Selects/CustomizedSelects.js","webpack:///./src/modules/muiComponents/inputs/Selects/CustomizedSelects.js?79f0","modules/muiComponents/inputs/Selects/MultipleSelect.js","webpack:///./src/modules/muiComponents/inputs/Selects/MultipleSelect.js?57c6","modules/muiComponents/inputs/Selects/ControlledOpenSelect.js","webpack:///./src/modules/muiComponents/inputs/Selects/ControlledOpenSelect.js?8faa","modules/muiComponents/inputs/Selects/WithaDialog.js","modules/muiComponents/inputs/Selects/index.js","webpack:///./src/modules/muiComponents/inputs/Selects/WithaDialog.js?e65d"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","useState","age","name","values","setValues","inputLabel","useRef","labelWidth","setLabelWidth","handleChange","event","oldValues","target","value","useEffect","current","offsetWidth","className","autoComplete","FormControl","InputLabel","htmlFor","Select","onChange","inputProps","id","MenuItem","FormHelperText","displayEmpty","shrink","disabled","error","renderValue","readOnly","autoWidth","required","variant","ref","NativeSelects","state","setState","native","NativeSelect","label","defaultValue","BootstrapInput","withStyles","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","CustomizedSelects","setAge","maxWidth","chips","chip","noLabel","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","names","getStyles","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","useTheme","setPersonName","multiple","Input","map","key","selected","Checkbox","checked","ListItemText","primary","Chip","clsx","length","options","i","l","push","button","ControlledOpenSelect","open","setOpen","handleOpen","Button","onClick","onClose","onOpen","container","DialogSelect","Number","handleClose","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogActions","color","Selects","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","source","lg","WithaDialog"],"mappings":"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","file":"static/js/125.7bc53b4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setValues((oldValues) => ({\r\n      ...oldValues,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <form className={classes.root} autoComplete='off'>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='age-simple'>Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-simple',\r\n          }}>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='age-helper'>Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-helper',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          name='age'\r\n          className={classes.selectEmpty}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Without label</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor='age-label-placeholder'>\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-label-Skeleton',\r\n          }}\r\n          displayEmpty\r\n          name='age'\r\n          className={classes.selectEmpty}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Label + placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor='name-disabled'>Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'name',\r\n            id: 'name-disabled',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value='hai'>Hai</MenuItem>\r\n          <MenuItem value='olivier'>Olivier</MenuItem>\r\n          <MenuItem value='kevin'>Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor='name-error'>Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          name='name'\r\n          renderValue={(value) => `⚠️  - ${value}`}\r\n          inputProps={{\r\n            id: 'name-error',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value='hai'>Hai</MenuItem>\r\n          <MenuItem value='olivier'>Olivier</MenuItem>\r\n          <MenuItem value='kevin'>Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='name-readonly'>Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'name',\r\n            id: 'name-readonly',\r\n            readOnly: true,\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value='hai'>Hai</MenuItem>\r\n          <MenuItem value='olivier'>Olivier</MenuItem>\r\n          <MenuItem value='kevin'>Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Read only</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='age-auto-width'>Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-auto-width',\r\n          }}\r\n          autoWidth>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Auto width</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          name='age'\r\n          displayEmpty\r\n          className={classes.selectEmpty}>\r\n          <MenuItem value='' disabled>\r\n            Placeholder\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel htmlFor='age-required'>Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          name='age'\r\n          inputProps={{\r\n            id: 'age-required',\r\n          }}\r\n          className={classes.selectEmpty}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      <FormControl variant='outlined' className={classes.formControl}>\r\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-simple'>\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          labelWidth={labelWidth}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'outlined-age-simple',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl variant='filled' className={classes.formControl}>\r\n        <InputLabel htmlFor='filled-age-simple'>Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'filled-age-simple',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport Select from '@material-ui/core/Select';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  formControl: {\\r\\n    margin: theme.spacing(1),\\r\\n    minWidth: 120,\\r\\n  },\\r\\n  selectEmpty: {\\r\\n    marginTop: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SimpleSelect() {\\r\\n  const classes = useStyles();\\r\\n  const [values, setValues] = React.useState({\\r\\n    age: '',\\r\\n    name: 'hai',\\r\\n  });\\r\\n\\r\\n  const inputLabel = React.useRef(null);\\r\\n  const [labelWidth, setLabelWidth] = React.useState(0);\\r\\n  React.useEffect(() => {\\r\\n    setLabelWidth(inputLabel.current.offsetWidth);\\r\\n  }, []);\\r\\n\\r\\n  function handleChange(event) {\\r\\n    setValues((oldValues) => ({\\r\\n      ...oldValues,\\r\\n      [event.target.name]: event.target.value,\\r\\n    }));\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <form className={classes.root} autoComplete='off'>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor='age-simple'>Age</InputLabel>\\r\\n        <Select\\r\\n          value={values.age}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'age-simple',\\r\\n          }}>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor='age-helper'>Age</InputLabel>\\r\\n        <Select\\r\\n          value={values.age}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'age-helper',\\r\\n          }}>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Some important helper text</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <Select\\r\\n          value={values.age}\\r\\n          onChange={handleChange}\\r\\n          displayEmpty\\r\\n          name='age'\\r\\n          className={classes.selectEmpty}>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Without label</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel shrink htmlFor='age-label-placeholder'>\\r\\n          Age\\r\\n        </InputLabel>\\r\\n        <Select\\r\\n          value={values.age}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'age-label-Skeleton',\\r\\n          }}\\r\\n          displayEmpty\\r\\n          name='age'\\r\\n          className={classes.selectEmpty}>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Label + placeholder</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl} disabled>\\r\\n        <InputLabel htmlFor='name-disabled'>Name</InputLabel>\\r\\n        <Select\\r\\n          value={values.name}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'name',\\r\\n            id: 'name-disabled',\\r\\n          }}>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value='hai'>Hai</MenuItem>\\r\\n          <MenuItem value='olivier'>Olivier</MenuItem>\\r\\n          <MenuItem value='kevin'>Kevin</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Disabled</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl} error>\\r\\n        <InputLabel htmlFor='name-error'>Name</InputLabel>\\r\\n        <Select\\r\\n          value={values.name}\\r\\n          onChange={handleChange}\\r\\n          name='name'\\r\\n          renderValue={(value) => `⚠️  - ${value}`}\\r\\n          inputProps={{\\r\\n            id: 'name-error',\\r\\n          }}>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value='hai'>Hai</MenuItem>\\r\\n          <MenuItem value='olivier'>Olivier</MenuItem>\\r\\n          <MenuItem value='kevin'>Kevin</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Error</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor='name-readonly'>Name</InputLabel>\\r\\n        <Select\\r\\n          value={values.name}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'name',\\r\\n            id: 'name-readonly',\\r\\n            readOnly: true,\\r\\n          }}>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value='hai'>Hai</MenuItem>\\r\\n          <MenuItem value='olivier'>Olivier</MenuItem>\\r\\n          <MenuItem value='kevin'>Kevin</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Read only</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor='age-auto-width'>Age</InputLabel>\\r\\n        <Select\\r\\n          value={values.age}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'age-auto-width',\\r\\n          }}\\r\\n          autoWidth>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Auto width</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <Select\\r\\n          value={values.age}\\r\\n          onChange={handleChange}\\r\\n          name='age'\\r\\n          displayEmpty\\r\\n          className={classes.selectEmpty}>\\r\\n          <MenuItem value='' disabled>\\r\\n            Placeholder\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Placeholder</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl required className={classes.formControl}>\\r\\n        <InputLabel htmlFor='age-required'>Age</InputLabel>\\r\\n        <Select\\r\\n          value={values.age}\\r\\n          onChange={handleChange}\\r\\n          name='age'\\r\\n          inputProps={{\\r\\n            id: 'age-required',\\r\\n          }}\\r\\n          className={classes.selectEmpty}>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n        <FormHelperText>Required</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl variant='outlined' className={classes.formControl}>\\r\\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-simple'>\\r\\n          Age\\r\\n        </InputLabel>\\r\\n        <Select\\r\\n          value={values.age}\\r\\n          onChange={handleChange}\\r\\n          labelWidth={labelWidth}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'outlined-age-simple',\\r\\n          }}>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl variant='filled' className={classes.formControl}>\\r\\n        <InputLabel htmlFor='filled-age-simple'>Age</InputLabel>\\r\\n        <Select\\r\\n          value={values.age}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'filled-age-simple',\\r\\n          }}>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function NativeSelects() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-simple',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='age-native-helper'>Age</InputLabel>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-helper',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          name='age'\r\n          className={classes.selectEmpty}\r\n          inputProps={{'aria-label': 'age'}}>\r\n          <option value=''>None</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>With visually hidden label</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor='age-native-label-placeholder'>\r\n          Age\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-label-Skeleton',\r\n          }}>\r\n          <option value=''>None</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Label + placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor='name-native-disabled'>Name</InputLabel>\r\n        <NativeSelect\r\n          value={state.name}\r\n          onChange={handleChange('name')}\r\n          inputProps={{\r\n            name: 'name',\r\n            id: 'name-native-disabled',\r\n          }}>\r\n          <option value='' />\r\n          <optgroup label='Author'>\r\n            <option value='hai'>Hai</option>\r\n          </optgroup>\r\n          <optgroup label='Contributors'>\r\n            <option value='olivier'>Olivier</option>\r\n            <option value='kevin'>Kevin</option>\r\n          </optgroup>\r\n        </NativeSelect>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor='name-native-error'>Name</InputLabel>\r\n        <NativeSelect\r\n          value={state.name}\r\n          onChange={handleChange('name')}\r\n          name='name'\r\n          inputProps={{\r\n            id: 'name-native-error',\r\n          }}>\r\n          <option value='' />\r\n          <optgroup label='Author'>\r\n            <option value='hai'>Hai</option>\r\n          </optgroup>\r\n          <optgroup label='Contributors'>\r\n            <option value='olivier'>Olivier</option>\r\n            <option value='kevin'>Kevin</option>\r\n          </optgroup>\r\n        </NativeSelect>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='uncontrolled-native'>Name</InputLabel>\r\n        <NativeSelect\r\n          defaultValue={30}\r\n          inputProps={{\r\n            name: 'name',\r\n            id: 'uncontrolled-native',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Uncontrolled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <NativeSelect\r\n          className={classes.selectEmpty}\r\n          value={state.age}\r\n          name='age'\r\n          onChange={handleChange('age')}\r\n          inputProps={{'aria-label': 'age'}}>\r\n          <option value='' disabled>\r\n            Placeholder\r\n          </option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel htmlFor='age-native-required'>Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          name='age'\r\n          inputProps={{\r\n            id: 'age-native-required',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      <FormControl variant='outlined' className={classes.formControl}>\r\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-native-simple'>\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          labelWidth={labelWidth}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'outlined-age-native-simple',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl variant='filled' className={classes.formControl}>\r\n        <InputLabel htmlFor='filled-age-native-simple'>Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'filled-age-native-simple',\r\n          }}>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport NativeSelect from '@material-ui/core/NativeSelect';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  formControl: {\\r\\n    margin: theme.spacing(1),\\r\\n    minWidth: 120,\\r\\n  },\\r\\n  selectEmpty: {\\r\\n    marginTop: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function NativeSelects() {\\r\\n  const classes = useStyles();\\r\\n  const [state, setState] = React.useState({\\r\\n    age: '',\\r\\n    name: 'hai',\\r\\n  });\\r\\n\\r\\n  const inputLabel = React.useRef(null);\\r\\n  const [labelWidth, setLabelWidth] = React.useState(0);\\r\\n  React.useEffect(() => {\\r\\n    setLabelWidth(inputLabel.current.offsetWidth);\\r\\n  }, []);\\r\\n\\r\\n  const handleChange = (name) => (event) => {\\r\\n    setState({\\r\\n      ...state,\\r\\n      [name]: event.target.value,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\\r\\n        <Select\\r\\n          native\\r\\n          value={state.age}\\r\\n          onChange={handleChange('age')}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'age-native-simple',\\r\\n          }}>\\r\\n          <option value='' />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor='age-native-helper'>Age</InputLabel>\\r\\n        <NativeSelect\\r\\n          value={state.age}\\r\\n          onChange={handleChange('age')}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'age-native-helper',\\r\\n          }}>\\r\\n          <option value='' />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Some important helper text</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <NativeSelect\\r\\n          value={state.age}\\r\\n          onChange={handleChange('age')}\\r\\n          name='age'\\r\\n          className={classes.selectEmpty}\\r\\n          inputProps={{'aria-label': 'age'}}>\\r\\n          <option value=''>None</option>\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>With visually hidden label</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel shrink htmlFor='age-native-label-placeholder'>\\r\\n          Age\\r\\n        </InputLabel>\\r\\n        <NativeSelect\\r\\n          value={state.age}\\r\\n          onChange={handleChange('age')}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'age-native-label-Skeleton',\\r\\n          }}>\\r\\n          <option value=''>None</option>\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Label + placeholder</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl} disabled>\\r\\n        <InputLabel htmlFor='name-native-disabled'>Name</InputLabel>\\r\\n        <NativeSelect\\r\\n          value={state.name}\\r\\n          onChange={handleChange('name')}\\r\\n          inputProps={{\\r\\n            name: 'name',\\r\\n            id: 'name-native-disabled',\\r\\n          }}>\\r\\n          <option value='' />\\r\\n          <optgroup label='Author'>\\r\\n            <option value='hai'>Hai</option>\\r\\n          </optgroup>\\r\\n          <optgroup label='Contributors'>\\r\\n            <option value='olivier'>Olivier</option>\\r\\n            <option value='kevin'>Kevin</option>\\r\\n          </optgroup>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Disabled</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl} error>\\r\\n        <InputLabel htmlFor='name-native-error'>Name</InputLabel>\\r\\n        <NativeSelect\\r\\n          value={state.name}\\r\\n          onChange={handleChange('name')}\\r\\n          name='name'\\r\\n          inputProps={{\\r\\n            id: 'name-native-error',\\r\\n          }}>\\r\\n          <option value='' />\\r\\n          <optgroup label='Author'>\\r\\n            <option value='hai'>Hai</option>\\r\\n          </optgroup>\\r\\n          <optgroup label='Contributors'>\\r\\n            <option value='olivier'>Olivier</option>\\r\\n            <option value='kevin'>Kevin</option>\\r\\n          </optgroup>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Error</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor='uncontrolled-native'>Name</InputLabel>\\r\\n        <NativeSelect\\r\\n          defaultValue={30}\\r\\n          inputProps={{\\r\\n            name: 'name',\\r\\n            id: 'uncontrolled-native',\\r\\n          }}>\\r\\n          <option value='' />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Uncontrolled</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <NativeSelect\\r\\n          className={classes.selectEmpty}\\r\\n          value={state.age}\\r\\n          name='age'\\r\\n          onChange={handleChange('age')}\\r\\n          inputProps={{'aria-label': 'age'}}>\\r\\n          <option value='' disabled>\\r\\n            Placeholder\\r\\n          </option>\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n        <FormHelperText>Placeholder</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl required className={classes.formControl}>\\r\\n        <InputLabel htmlFor='age-native-required'>Age</InputLabel>\\r\\n        <Select\\r\\n          native\\r\\n          value={state.age}\\r\\n          onChange={handleChange('age')}\\r\\n          name='age'\\r\\n          inputProps={{\\r\\n            id: 'age-native-required',\\r\\n          }}>\\r\\n          <option value='' />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </Select>\\r\\n        <FormHelperText>Required</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl variant='outlined' className={classes.formControl}>\\r\\n        <InputLabel ref={inputLabel} htmlFor='outlined-age-native-simple'>\\r\\n          Age\\r\\n        </InputLabel>\\r\\n        <Select\\r\\n          native\\r\\n          value={state.age}\\r\\n          onChange={handleChange('age')}\\r\\n          labelWidth={labelWidth}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'outlined-age-native-simple',\\r\\n          }}>\\r\\n          <option value='' />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl variant='filled' className={classes.formControl}>\\r\\n        <InputLabel htmlFor='filled-age-native-simple'>Age</InputLabel>\\r\\n        <Select\\r\\n          native\\r\\n          value={state.age}\\r\\n          onChange={handleChange('age')}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'filled-age-native-simple',\\r\\n          }}>\\r\\n          <option value='' />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSelects() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n  return (\r\n    <form className={classes.root} autoComplete='off'>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor='age-customized-input'>Age</InputLabel>\r\n        <BootstrapInput id='age-customized-input' />\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor='age-customized-select'>Age</InputLabel>\r\n        <Select\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={<BootstrapInput name='age' id='age-customized-select' />}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor='age-customized-native-simple'>Age</InputLabel>\r\n        <NativeSelect\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={\r\n            <BootstrapInput name='age' id='age-customized-native-simple' />\r\n          }>\r\n          <option value='' />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport NativeSelect from '@material-ui/core/NativeSelect';\\r\\nimport InputBase from '@material-ui/core/InputBase';\\r\\n\\r\\nconst BootstrapInput = withStyles((theme) => ({\\r\\n  root: {\\r\\n    'label + &': {\\r\\n      marginTop: theme.spacing(3),\\r\\n    },\\r\\n  },\\r\\n  input: {\\r\\n    borderRadius: 4,\\r\\n    position: 'relative',\\r\\n    backgroundColor: theme.palette.background.paper,\\r\\n    border: '1px solid #ced4da',\\r\\n    fontSize: 16,\\r\\n    padding: '10px 26px 10px 12px',\\r\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\r\\n    // Use the system font instead of the default Roboto font.\\r\\n    fontFamily: [\\r\\n      '-apple-system',\\r\\n      'BlinkMacSystemFont',\\r\\n      '\\\"Segoe UI\\\"',\\r\\n      'Roboto',\\r\\n      '\\\"Helvetica Neue\\\"',\\r\\n      'Arial',\\r\\n      'sans-serif',\\r\\n      '\\\"Apple Color Emoji\\\"',\\r\\n      '\\\"Segoe UI Emoji\\\"',\\r\\n      '\\\"Segoe UI Symbol\\\"',\\r\\n    ].join(','),\\r\\n    '&:focus': {\\r\\n      borderRadius: 4,\\r\\n      borderColor: '#80bdff',\\r\\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\\r\\n    },\\r\\n  },\\r\\n}))(InputBase);\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  margin: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CustomizedSelects() {\\r\\n  const classes = useStyles();\\r\\n  const [age, setAge] = React.useState('');\\r\\n  const handleChange = (event) => {\\r\\n    setAge(event.target.value);\\r\\n  };\\r\\n  return (\\r\\n    <form className={classes.root} autoComplete='off'>\\r\\n      <FormControl className={classes.margin}>\\r\\n        <InputLabel htmlFor='age-customized-input'>Age</InputLabel>\\r\\n        <BootstrapInput id='age-customized-input' />\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.margin}>\\r\\n        <InputLabel htmlFor='age-customized-select'>Age</InputLabel>\\r\\n        <Select\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          input={<BootstrapInput name='age' id='age-customized-select' />}>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.margin}>\\r\\n        <InputLabel htmlFor='age-customized-native-simple'>Age</InputLabel>\\r\\n        <NativeSelect\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          input={\\r\\n            <BootstrapInput name='age' id='age-customized-native-simple' />\\r\\n          }>\\r\\n          <option value='' />\\r\\n          <option value={10}>Ten</option>\\r\\n          <option value={20}>Twenty</option>\\r\\n          <option value={30}>Thirty</option>\\r\\n        </NativeSelect>\\r\\n      </FormControl>\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  function handleChange(event) {\r\n    setPersonName(event.target.value);\r\n  }\r\n\r\n  function handleChangeMultiple(event) {\r\n    const {options} = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='select-multiple'>Name</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id='select-multiple' />}\r\n          MenuProps={MenuProps}>\r\n          {names.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='select-multiple-checkbox'>Tag</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id='select-multiple-checkbox' />}\r\n          renderValue={(selected) => selected.join(', ')}\r\n          MenuProps={MenuProps}>\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={personName.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='select-multiple-chip'>Chip</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id='select-multiple-chip' />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}>\r\n          {names.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id='select-multiple-placeholder' />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>Placeholder</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}>\r\n          <MenuItem disabled value=''>\r\n            <em>Placeholder</em>\r\n          </MenuItem>\r\n          {names.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor='select-multiple-native'>\r\n          Native\r\n        </InputLabel>\r\n        <Select\r\n          multiple\r\n          native\r\n          value={personName}\r\n          onChange={handleChangeMultiple}\r\n          inputProps={{\r\n            id: 'select-multiple-native',\r\n          }}>\r\n          {names.map((name) => (\r\n            <option key={name} value={name}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport clsx from 'clsx';\\r\\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\\r\\nimport Input from '@material-ui/core/Input';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport Checkbox from '@material-ui/core/Checkbox';\\r\\nimport Chip from '@material-ui/core/Chip';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  formControl: {\\r\\n    margin: theme.spacing(1),\\r\\n    minWidth: 120,\\r\\n    maxWidth: 300,\\r\\n  },\\r\\n  chips: {\\r\\n    display: 'flex',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  chip: {\\r\\n    margin: 2,\\r\\n  },\\r\\n  noLabel: {\\r\\n    marginTop: theme.spacing(3),\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst ITEM_HEIGHT = 48;\\r\\nconst ITEM_PADDING_TOP = 8;\\r\\nconst MenuProps = {\\r\\n  PaperProps: {\\r\\n    style: {\\r\\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\\r\\n      width: 250,\\r\\n    },\\r\\n  },\\r\\n};\\r\\n\\r\\nconst names = [\\r\\n  'Oliver Hansen',\\r\\n  'Van Henry',\\r\\n  'April Tucker',\\r\\n  'Ralph Hubbard',\\r\\n  'Omar Alexander',\\r\\n  'Carlos Abbott',\\r\\n  'Miriam Wagner',\\r\\n  'Bradley Wilkerson',\\r\\n  'Virginia Andrews',\\r\\n  'Kelly Snyder',\\r\\n];\\r\\n\\r\\nfunction getStyles(name, personName, theme) {\\r\\n  return {\\r\\n    fontWeight:\\r\\n      personName.indexOf(name) === -1\\r\\n        ? theme.typography.fontWeightRegular\\r\\n        : theme.typography.fontWeightMedium,\\r\\n  };\\r\\n}\\r\\n\\r\\nexport default function MultipleSelect() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [personName, setPersonName] = React.useState([]);\\r\\n\\r\\n  function handleChange(event) {\\r\\n    setPersonName(event.target.value);\\r\\n  }\\r\\n\\r\\n  function handleChangeMultiple(event) {\\r\\n    const {options} = event.target;\\r\\n    const value = [];\\r\\n    for (let i = 0, l = options.length; i < l; i += 1) {\\r\\n      if (options[i].selected) {\\r\\n        value.push(options[i].value);\\r\\n      }\\r\\n    }\\r\\n    setPersonName(value);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor='select-multiple'>Name</InputLabel>\\r\\n        <Select\\r\\n          multiple\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<Input id='select-multiple' />}\\r\\n          MenuProps={MenuProps}>\\r\\n          {names.map((name) => (\\r\\n            <MenuItem\\r\\n              key={name}\\r\\n              value={name}\\r\\n              style={getStyles(name, personName, theme)}>\\r\\n              {name}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor='select-multiple-checkbox'>Tag</InputLabel>\\r\\n        <Select\\r\\n          multiple\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<Input id='select-multiple-checkbox' />}\\r\\n          renderValue={(selected) => selected.join(', ')}\\r\\n          MenuProps={MenuProps}>\\r\\n          {names.map((name) => (\\r\\n            <MenuItem key={name} value={name}>\\r\\n              <Checkbox checked={personName.indexOf(name) > -1} />\\r\\n              <ListItemText primary={name} />\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor='select-multiple-chip'>Chip</InputLabel>\\r\\n        <Select\\r\\n          multiple\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<Input id='select-multiple-chip' />}\\r\\n          renderValue={(selected) => (\\r\\n            <div className={classes.chips}>\\r\\n              {selected.map((value) => (\\r\\n                <Chip key={value} label={value} className={classes.chip} />\\r\\n              ))}\\r\\n            </div>\\r\\n          )}\\r\\n          MenuProps={MenuProps}>\\r\\n          {names.map((name) => (\\r\\n            <MenuItem\\r\\n              key={name}\\r\\n              value={name}\\r\\n              style={getStyles(name, personName, theme)}>\\r\\n              {name}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\\r\\n        <Select\\r\\n          multiple\\r\\n          displayEmpty\\r\\n          value={personName}\\r\\n          onChange={handleChange}\\r\\n          input={<Input id='select-multiple-placeholder' />}\\r\\n          renderValue={(selected) => {\\r\\n            if (selected.length === 0) {\\r\\n              return <em>Placeholder</em>;\\r\\n            }\\r\\n\\r\\n            return selected.join(', ');\\r\\n          }}\\r\\n          MenuProps={MenuProps}>\\r\\n          <MenuItem disabled value=''>\\r\\n            <em>Placeholder</em>\\r\\n          </MenuItem>\\r\\n          {names.map((name) => (\\r\\n            <MenuItem\\r\\n              key={name}\\r\\n              value={name}\\r\\n              style={getStyles(name, personName, theme)}>\\r\\n              {name}\\r\\n            </MenuItem>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel shrink htmlFor='select-multiple-native'>\\r\\n          Native\\r\\n        </InputLabel>\\r\\n        <Select\\r\\n          multiple\\r\\n          native\\r\\n          value={personName}\\r\\n          onChange={handleChangeMultiple}\\r\\n          inputProps={{\\r\\n            id: 'select-multiple-native',\\r\\n          }}>\\r\\n          {names.map((name) => (\\r\\n            <option key={name} value={name}>\\r\\n              {name}\\r\\n            </option>\\r\\n          ))}\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function ControlledOpenSelect() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleChange(event) {\r\n    setAge(event.target.value);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <form autoComplete='off'>\r\n      <Button className={classes.button} onClick={handleOpen}>\r\n        Open the select\r\n      </Button>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor='demo-controlled-open-select'>Age</InputLabel>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'demo-controlled-open-select',\r\n          }}>\r\n          <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport Select from '@material-ui/core/Select';\\r\\nimport Button from '@material-ui/core/Button';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  button: {\\r\\n    display: 'block',\\r\\n    marginTop: theme.spacing(2),\\r\\n  },\\r\\n  formControl: {\\r\\n    margin: theme.spacing(1),\\r\\n    minWidth: 120,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function ControlledOpenSelect() {\\r\\n  const classes = useStyles();\\r\\n  const [age, setAge] = React.useState('');\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  function handleChange(event) {\\r\\n    setAge(event.target.value);\\r\\n  }\\r\\n\\r\\n  function handleClose() {\\r\\n    setOpen(false);\\r\\n  }\\r\\n\\r\\n  function handleOpen() {\\r\\n    setOpen(true);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <form autoComplete='off'>\\r\\n      <Button className={classes.button} onClick={handleOpen}>\\r\\n        Open the select\\r\\n      </Button>\\r\\n      <FormControl className={classes.formControl}>\\r\\n        <InputLabel htmlFor='demo-controlled-open-select'>Age</InputLabel>\\r\\n        <Select\\r\\n          open={open}\\r\\n          onClose={handleClose}\\r\\n          onOpen={handleOpen}\\r\\n          value={age}\\r\\n          onChange={handleChange}\\r\\n          inputProps={{\\r\\n            name: 'age',\\r\\n            id: 'demo-controlled-open-select',\\r\\n          }}>\\r\\n          <MenuItem value=''>\\r\\n            <em>None</em>\\r\\n          </MenuItem>\\r\\n          <MenuItem value={10}>Ten</MenuItem>\\r\\n          <MenuItem value={20}>Twenty</MenuItem>\\r\\n          <MenuItem value={30}>Thirty</MenuItem>\\r\\n        </Select>\\r\\n      </FormControl>\\r\\n    </form>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function DialogSelect() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    age: '',\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({...state, [name]: Number(event.target.value)});\r\n  };\r\n\r\n  function handleClickOpen() {\r\n    setState({...state, open: true});\r\n  }\r\n\r\n  function handleClose() {\r\n    setState({...state, open: false});\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        open={state.open}\r\n        onClose={handleClose}>\r\n        <DialogTitle>Fill the form</DialogTitle>\r\n        <DialogContent>\r\n          <form className={classes.container}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange('age')}\r\n                input={<Input id='age-native-simple' />}>\r\n                <option value='' />\r\n                <option value={10}>Ten</option>\r\n                <option value={20}>Twenty</option>\r\n                <option value={30}>Thirty</option>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor='age-simple'>Age</InputLabel>\r\n              <Select\r\n                value={state.age}\r\n                onChange={handleChange('age')}\r\n                input={<Input id='age-simple' />}>\r\n                <MenuItem value=''>\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={10}>Ten</MenuItem>\r\n                <MenuItem value={20}>Twenty</MenuItem>\r\n                <MenuItem value={30}>Thirty</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\nimport SimpleSelect from './SimpleSelect';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SimpleSelectSource from '!raw-loader!./SimpleSelect';\r\nimport NativeSelect from './NativeSelect';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport NativeSelectSource from '!raw-loader!./NativeSelect';\r\nimport CustomizedSelects from './CustomizedSelects';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport CustomizedSelectsSource from '!raw-loader!./CustomizedSelects';\r\nimport MultipleSelect from './MultipleSelect';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MultipleSelectSource from '!raw-loader!./MultipleSelect';\r\nimport ControlledOpenSelect from './ControlledOpenSelect';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ControlledOpenSelectSource from '!raw-loader!./ControlledOpenSelect';\r\nimport WithaDialog from './WithaDialog';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport WithaDialogSource from '!raw-loader!./WithaDialog';\r\n\r\nconst Selects = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Selects'\r\n        description='Select components are used for collecting user provided information from a list of options'\r\n        refUrl='https://material-ui.com/components/selects/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Simple Select'\r\n            component={SimpleSelect}\r\n            source={SimpleSelectSource}\r\n            description='Menus are positioned over their emitting elements such that the currently selected menu item appears on top of the emitting element'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Native Select'\r\n            component={NativeSelect}\r\n            source={NativeSelectSource}\r\n            description='As the user experience can be improved on mobile using the native select of the platform, we allow such pattern.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Customized selects'\r\n            component={CustomizedSelects}\r\n            source={CustomizedSelectsSource}\r\n            description=\"The first step is to style the InputBase component. Once it's styled, you can either use it directly as a text field or provide it to the select input property to have a select field..\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Multiple Select'\r\n            component={MultipleSelect}\r\n            source={MultipleSelectSource}\r\n            description=\"The Select component can handle multiple selections. It's enabled with the multiple property.\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Controlled Open Select'\r\n            component={ControlledOpenSelect}\r\n            source={ControlledOpenSelectSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='With a Dialog'\r\n            component={WithaDialog}\r\n            source={WithaDialogSource}\r\n            description=\"While it's discouraged by the Material Design specification, you can use a select inside a dialog.\"\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Selects;\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Dialog from '@material-ui/core/Dialog';\\r\\nimport DialogActions from '@material-ui/core/DialogActions';\\r\\nimport DialogContent from '@material-ui/core/DialogContent';\\r\\nimport DialogTitle from '@material-ui/core/DialogTitle';\\r\\nimport InputLabel from '@material-ui/core/InputLabel';\\r\\nimport Input from '@material-ui/core/Input';\\r\\nimport MenuItem from '@material-ui/core/MenuItem';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport Select from '@material-ui/core/Select';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  container: {\\r\\n    display: 'flex',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  formControl: {\\r\\n    margin: theme.spacing(1),\\r\\n    minWidth: 120,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function DialogSelect() {\\r\\n  const classes = useStyles();\\r\\n  const [state, setState] = React.useState({\\r\\n    open: false,\\r\\n    age: '',\\r\\n  });\\r\\n\\r\\n  const handleChange = (name) => (event) => {\\r\\n    setState({...state, [name]: Number(event.target.value)});\\r\\n  };\\r\\n\\r\\n  function handleClickOpen() {\\r\\n    setState({...state, open: true});\\r\\n  }\\r\\n\\r\\n  function handleClose() {\\r\\n    setState({...state, open: false});\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\\r\\n      <Dialog\\r\\n        disableBackdropClick\\r\\n        disableEscapeKeyDown\\r\\n        open={state.open}\\r\\n        onClose={handleClose}>\\r\\n        <DialogTitle>Fill the form</DialogTitle>\\r\\n        <DialogContent>\\r\\n          <form className={classes.container}>\\r\\n            <FormControl className={classes.formControl}>\\r\\n              <InputLabel htmlFor='age-native-simple'>Age</InputLabel>\\r\\n              <Select\\r\\n                native\\r\\n                value={state.age}\\r\\n                onChange={handleChange('age')}\\r\\n                input={<Input id='age-native-simple' />}>\\r\\n                <option value='' />\\r\\n                <option value={10}>Ten</option>\\r\\n                <option value={20}>Twenty</option>\\r\\n                <option value={30}>Thirty</option>\\r\\n              </Select>\\r\\n            </FormControl>\\r\\n            <FormControl className={classes.formControl}>\\r\\n              <InputLabel htmlFor='age-simple'>Age</InputLabel>\\r\\n              <Select\\r\\n                value={state.age}\\r\\n                onChange={handleChange('age')}\\r\\n                input={<Input id='age-simple' />}>\\r\\n                <MenuItem value=''>\\r\\n                  <em>None</em>\\r\\n                </MenuItem>\\r\\n                <MenuItem value={10}>Ten</MenuItem>\\r\\n                <MenuItem value={20}>Twenty</MenuItem>\\r\\n                <MenuItem value={30}>Thirty</MenuItem>\\r\\n              </Select>\\r\\n            </FormControl>\\r\\n          </form>\\r\\n        </DialogContent>\\r\\n        <DialogActions>\\r\\n          <Button onClick={handleClose} color='primary'>\\r\\n            Cancel\\r\\n          </Button>\\r\\n          <Button onClick={handleClose} color='primary'>\\r\\n            Ok\\r\\n          </Button>\\r\\n        </DialogActions>\\r\\n      </Dialog>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}