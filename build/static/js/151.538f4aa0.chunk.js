(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[151],{3099:function(n,r,t){"use strict";t.r(r);var e=t(0),a=t.n(e),o=t(359),i=t(408),c=t(407),m=t(406),l=t(1558),s=t.n(l),u=t(270),d=["top-left","top-right","top-center","bottom-left","bottom-right","bottom-center"],p=["success","danger","warning","default","info","awesome"],f=["All your db has been successfully updated","Your meeting has been successfully attended","Document has been successfully updated"],y=["You have no access rights","An error occurred while saving","Document has been permanently removed"],g=["Your connection is not private","Your local datetime is not in sync with server's date","You've already done this action"],B=["All your messages have been logged","A new issue has been reported by Office Desk"],h=["A new appointment has been created in your agenda","You have an appointment at 4PM today"],x=["Custom types can be used as well. Pretty cool, huh!?","Types are easily configurable. Nice, huh?!"],C=function(){return d[Math.floor(Math.random()*d.length)]},E=function(){var n=Math.floor(Math.random()*p.length);return p[n]},v=function(n){switch(n){case"success":return"Success";case"danger":return"Error";case"warning":return"Warning";case"info":return;case"default":case"awesome":default:return}},b=function(n){switch(n){case"success":return f[Math.floor(Math.random()*f.length)];case"danger":return y[Math.floor(Math.random()*y.length)];case"warning":return g[Math.floor(Math.random()*g.length)];case"info":return h[Math.floor(Math.random()*h.length)];case"default":return B[Math.floor(Math.random()*B.length)];case"awesome":return x[Math.floor(Math.random()*x.length)];default:return B[Math.floor(Math.random()*B.length)]}},k={title:"Awesomeness",message:"Awesome Notifications!",type:"success",container:"top-right",insert:"top",animationIn:["animated","fadeIn"],animationOut:["animated","faster","fadeOut"],slidingEnter:{duration:300,timingFunction:"linear",delay:0},slidingExit:{duration:300,timingFunction:"linear",delay:0},touchRevert:{duration:600,timingFunction:"linear",delay:0},touchSlidingExit:{swipe:{duration:600,timingFunction:"linear",delay:0},fade:{duration:300,timingFunction:"linear",delay:0}},dismiss:{duration:5e3,onScreen:!1,pauseOnHover:!0,waitForAnimation:!1,showIcon:!0,click:!0,touch:!0}},w=t(68),O=function(){var n=function(n){var r=E();return l.store.addNotification(Object.assign({},k,{animationIn:n,container:C(),message:b(r),type:r}))};return a.a.createElement(w.a,{display:"flex",flexWrap:"wrap"},a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated bounceIn"])}},"Bounce In")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated fadeIn"])}},"Fade In")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated flipInX"])}},"Flip In X")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated flipInY"])}},"Flip In Y")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated zoomIn"])}},"Zoom In")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated flash"])}},"Flash")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated jackInTheBox"])}},"Jack In The Box")))},I=function(){var n=function(n){var r=E();return l.store.addNotification(Object.assign({},k,{slidingExit:{delay:300},animationOut:n,container:C(),message:b(r),type:r}))};return a.a.createElement(w.a,{display:"flex",flexWrap:"wrap"},a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated bounceOut"])}},"Bounce Out")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated fadeOut"])}},"Fade Out")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated flipOutX"])}},"Flip Out X")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated flipOutY"])}},"Flip Out Y")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n(["animated zoomOut"])}},"Zoom Out")))},T=t(167),N=function(n){var r=function(n){var r=E();return l.store.addNotification(Object.assign({},k,{type:r,insert:n,message:b(r),title:v(r)}))},t=Object(T.a)((function(n){return{btnRoot:{marginBottom:4,marginTop:4,marginLeft:8,marginRight:8}}}))(n);return a.a.createElement(w.a,null,a.a.createElement(u.a,{className:t.btnRoot,color:"primary",variant:"contained",onClick:function(){return r("top")}},"Top"),a.a.createElement(u.a,{className:t.btnRoot,color:"primary",variant:"contained",onClick:function(){return r("bottom")}},"Bottom"))},M=t(413),j=t(414),R=t(416),A=t(415),F=function(n){Object(R.a)(t,n);var r=Object(A.a)(t);function t(){var n;Object(M.a)(this,t);for(var e=arguments.length,a=new Array(e),o=0;o<e;o++)a[o]=arguments[o];return(n=r.call.apply(r,[this].concat(a))).add=function(n){var r=E();return l.store.addNotification(Object.assign({},k,{title:v(r),message:b(r),container:n,type:r}))},n}return Object(j.a)(t,[{key:"render",value:function(){var n=this;return a.a.createElement(w.a,{display:"flex",flexWrap:"wrap"},a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("top-left")}},"Top Left")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("top-right")}},"Top Right")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("top-center")}},"Top Center")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("bottom-left")}},"Bottom Left")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("bottom-right")}},"Bottom Right")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("bottom-center")}},"Bottom Center")))}}]),t}(a.a.Component),W=t(82),Y=function(n){Object(R.a)(t,n);var r=Object(A.a)(t);function t(){var n;Object(M.a)(this,t);for(var e=arguments.length,o=new Array(e),i=0;i<e;i++)o[i]=arguments[i];return(n=r.call.apply(r,[this].concat(o))).addCustomIcon=function(n,r){var t;"success"===n?t="Your agenda has been successfully synced":"warning"===n?t="Warning! All your db will be lost if you proceed":"danger"===n&&(t="Error! You have no update rights"),l.store.addNotification(Object.assign({},k,{width:275,container:C(),content:a.a.createElement(w.a,{className:"notification-custom-".concat(n)},a.a.createElement(w.a,{className:"notification-custom-icon"},a.a.createElement("i",{className:r})),a.a.createElement(w.a,{className:"notification-custom-content"},a.a.createElement(W.a,{className:"notification-message"},t)))}))},n.add=function(){l.store.addNotification(Object.assign({},k,{width:325,container:C(),content:a.a.createElement(w.a,{display:"flex",flexDirection:"row",className:"custom-image-content"},a.a.createElement("img",{src:"/assets/images/logo.png",alt:""}),a.a.createElement(w.a,{component:"span",px:8,py:2},"Crema Admin"))}))},n}return Object(j.a)(t,[{key:"render",value:function(){var n=this;return a.a.createElement(w.a,{display:"flex",flexWrap:"wrap"},a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:this.add},"Custom Image Content")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{variant:"contained",color:"primary",onClick:function(){return n.addCustomIcon("success","fas fa-check-circle")}},"Success with Icon")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{variant:"contained",color:"primary",onClick:function(){return n.addCustomIcon("danger","fas fa-exclamation-circle")}},"Danger with Icon")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.addCustomIcon("warning","fas fa-exclamation-triangle")}},"Warning with Icon")))}}]),t}(a.a.Component),S=function(n){Object(R.a)(t,n);var r=Object(A.a)(t);function t(){var n;Object(M.a)(this,t);for(var e=arguments.length,a=new Array(e),o=0;o<e;o++)a[o]=arguments[o];return(n=r.call.apply(r,[this].concat(a))).add=function(n){return l.store.addNotification(Object.assign({},k,{type:n,title:v(n),message:b(n),container:C()}))},n}return Object(j.a)(t,[{key:"render",value:function(){var n=this;return a.a.createElement(w.a,{display:"flex",flexWrap:"wrap"},a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("success")}},"Success")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("default")}},"Default")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("warning")}},"Warning")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("info")}},"Info")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("danger")}},"Danger")),a.a.createElement(w.a,{mr:2,my:1},a.a.createElement(u.a,{color:"primary",variant:"contained",onClick:function(){return n.add("awesome")}},"Custom")))}}]),t}(a.a.Component);r.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(c.a,{title:"React Notifications",description:"Delightful and highly customisable React Component to notify your users.",refUrl:"https://teodosii.github.io/react-notifications-component//"}),a.a.createElement(s.a,{types:[{htmlClasses:["notification-awesome"],name:"awesome"}],isMobile:!0}),a.a.createElement(m.a,null,a.a.createElement(o.a,{item:!0,xs:12},a.a.createElement(i.a,{title:"Animation Entrance",description:"Entrance animation can be customised by specifying CSS classes",component:O,source:"import React from 'react';\r\nimport {store} from 'react-notifications-component';\r\nimport Button from '@material-ui/core/Button';\r\nimport {getContainer, getMessage, getType} from '../helpers/randomize';\r\nimport notification from '../helpers/notification';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst AnimationEntrance = () => {\r\n  const add = (htmlClasses) => {\r\n    const type = getType();\r\n    return store.addNotification(\r\n      Object.assign({}, notification, {\r\n        animationIn: htmlClasses,\r\n        container: getContainer(),\r\n        message: getMessage(type),\r\n        type,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box display='flex' flexWrap='wrap'>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated bounceIn'])}>\r\n          Bounce In\r\n        </Button>\r\n      </Box>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated fadeIn'])}>\r\n          Fade In\r\n        </Button>\r\n      </Box>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated flipInX'])}>\r\n          Flip In X\r\n        </Button>\r\n      </Box>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated flipInY'])}>\r\n          Flip In Y\r\n        </Button>\r\n      </Box>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated zoomIn'])}>\r\n          Zoom In\r\n        </Button>\r\n      </Box>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated flash'])}>\r\n          Flash\r\n        </Button>\r\n      </Box>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated jackInTheBox'])}>\r\n          Jack In The Box\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default AnimationEntrance;\r\n"})),a.a.createElement(o.a,{item:!0,xs:12},a.a.createElement(i.a,{title:"Animation Exit",description:"Exit animation can be customised by specifying CSS classes",component:I,source:"import React from 'react';\r\nimport {store} from 'react-notifications-component';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {getContainer, getMessage, getType} from '../helpers/randomize';\r\nimport notification from '../helpers/notification';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst AnimationExit = () => {\r\n  const add = (htmlClasses) => {\r\n    const type = getType();\r\n    return store.addNotification(\r\n      Object.assign({}, notification, {\r\n        slidingExit: {delay: 300},\r\n        animationOut: htmlClasses,\r\n        container: getContainer(),\r\n        message: getMessage(type),\r\n        type,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box display='flex' flexWrap='wrap'>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated bounceOut'])}>\r\n          Bounce Out\r\n        </Button>\r\n      </Box>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated fadeOut'])}>\r\n          Fade Out\r\n        </Button>\r\n      </Box>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated flipOutX'])}>\r\n          Flip Out X\r\n        </Button>\r\n      </Box>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated flipOutY'])}>\r\n          Flip Out Y\r\n        </Button>\r\n      </Box>\r\n      <Box mr={2} my={1}>\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={() => add(['animated zoomOut'])}>\r\n          Zoom Out\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default AnimationExit;\r\n"})),a.a.createElement(o.a,{item:!0,xs:12},a.a.createElement(i.a,{title:"Container",description:"Container can be set from predefined values top-left, top-right, top-center, bottom-left, bottom-right, bottom-center",component:F,source:"import React from 'react';\r\nimport {store} from 'react-notifications-component';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport notification from '../helpers/notification';\r\nimport {getMessage, getTitle, getType} from '../helpers/randomize';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default class ContainerExample extends React.Component {\r\n  add = (container) => {\r\n    const type = getType();\r\n\r\n    return store.addNotification(\r\n      Object.assign({}, notification, {\r\n        title: getTitle(type),\r\n        message: getMessage(type),\r\n        container,\r\n        type,\r\n      }),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Box display='flex' flexWrap='wrap'>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('top-left')}>\r\n            Top Left\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('top-right')}>\r\n            Top Right\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('top-center')}>\r\n            Top Center\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('bottom-left')}>\r\n            Bottom Left\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('bottom-right')}>\r\n            Bottom Right\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('bottom-center')}>\r\n            Bottom Center\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n"})),a.a.createElement(o.a,{item:!0,xs:12},a.a.createElement(i.a,{title:"Custom Content",description:"With react-notifications-component notification's content can be customised to suit your needs.",component:Y,source:"import React from 'react';\r\nimport {store} from 'react-notifications-component';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport notification from '../helpers/notification';\r\nimport {getContainer} from '../helpers/randomize';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class CustomContentExample extends React.Component {\r\n  addCustomIcon = (type, iconClassName) => {\r\n    let message;\r\n    if (type === 'success') {\r\n      message = 'Your agenda has been successfully synced';\r\n    } else if (type === 'warning') {\r\n      message = 'Warning! All your db will be lost if you proceed';\r\n    } else if (type === 'danger') {\r\n      message = 'Error! You have no update rights';\r\n    }\r\n\r\n    store.addNotification(\r\n      Object.assign({}, notification, {\r\n        width: 275,\r\n        container: getContainer(),\r\n        content: (\r\n          <Box className={`notification-custom-${type}`}>\r\n            <Box className='notification-custom-icon'>\r\n              <i className={iconClassName} />\r\n            </Box>\r\n            <Box className='notification-custom-content'>\r\n              <Typography className='notification-message'>\r\n                {message}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        ),\r\n      }),\r\n    );\r\n  };\r\n\r\n  add = () => {\r\n    store.addNotification(\r\n      Object.assign({}, notification, {\r\n        width: 325,\r\n        container: getContainer(),\r\n        content: (\r\n          <Box\r\n            display='flex'\r\n            flexDirection='row'\r\n            className='custom-image-content'>\r\n            <img src='/assets/images/logo.png' alt='' />\r\n            <Box component='span' px={8} py={2}>\r\n              Crema Admin\r\n            </Box>\r\n          </Box>\r\n        ),\r\n      }),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Box display='flex' flexWrap='wrap'>\r\n        <Box mr={2} my={1}>\r\n          <Button color='primary' variant='contained' onClick={this.add}>\r\n            Custom Image Content\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={() =>\r\n              this.addCustomIcon('success', 'fas fa-check-circle')\r\n            }>\r\n            Success with Icon\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={() =>\r\n              this.addCustomIcon('danger', 'fas fa-exclamation-circle')\r\n            }>\r\n            Danger with Icon\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() =>\r\n              this.addCustomIcon('warning', 'fas fa-exclamation-triangle')\r\n            }>\r\n            Warning with Icon\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n"})),a.a.createElement(o.a,{item:!0,xs:12},a.a.createElement(i.a,{title:"Insert",description:"Insertion in react-notifications can be done either at the top or at the bottom of the container",component:N,source:"import React from 'react';\r\nimport {store} from 'react-notifications-component';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport notification from '../helpers/notification';\r\nimport {getMessage, getTitle, getType} from '../helpers/randomize';\r\nimport Box from '@material-ui/core/Box';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst InsertExample = (props) => {\r\n  const add = (insert) => {\r\n    const type = getType();\r\n    return store.addNotification(\r\n      Object.assign({}, notification, {\r\n        type,\r\n        insert,\r\n        message: getMessage(type),\r\n        title: getTitle(type),\r\n      }),\r\n    );\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    btnRoot: {\r\n      marginBottom: 4,\r\n      marginTop: 4,\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n    },\r\n  }));\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box>\r\n      <Button\r\n        className={classes.btnRoot}\r\n        color='primary'\r\n        variant='contained'\r\n        onClick={() => add('top')}>\r\n        Top\r\n      </Button>\r\n      <Button\r\n        className={classes.btnRoot}\r\n        color='primary'\r\n        variant='contained'\r\n        onClick={() => add('bottom')}>\r\n        Bottom\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\nexport default InsertExample;\r\n"})),a.a.createElement(o.a,{item:!0,xs:12},a.a.createElement(i.a,{title:"Type",description:"Type can be set from predefined values success, default, warning, info, danger or custom to suit your needs",component:S,source:"import React from 'react';\r\nimport {store} from 'react-notifications-component';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport notification from '../helpers/notification';\r\nimport {getContainer, getMessage, getTitle} from '../helpers/randomize';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default class TypeExample extends React.Component {\r\n  add = (type) => {\r\n    return store.addNotification(\r\n      Object.assign({}, notification, {\r\n        type,\r\n        title: getTitle(type),\r\n        message: getMessage(type),\r\n        container: getContainer(),\r\n      }),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Box display='flex' flexWrap='wrap'>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('success')}>\r\n            Success\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('default')}>\r\n            Default\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('warning')}>\r\n            Warning\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('info')}>\r\n            Info\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('danger')}>\r\n            Danger\r\n          </Button>\r\n        </Box>\r\n        <Box mr={2} my={1}>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={() => this.add('awesome')}>\r\n            Custom\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n"}))))}}}]);
//# sourceMappingURL=151.538f4aa0.chunk.js.map