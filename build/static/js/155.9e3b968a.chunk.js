(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[155],{3098:function(e,a,t){"use strict";t.r(a);var r=t(0),n=t.n(r),i=t(1406),o=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:3e3,pv:1398,amt:2210},{name:"Page C",uv:2e3,pv:9800,amt:2290},{name:"Page D",uv:2780,pv:3908,amt:2e3},{name:"Page E",uv:1890,pv:4800,amt:2181},{name:"Page F",uv:2390,pv:3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],l=function(){return n.a.createElement(i.y,{width:"100%",height:200},n.a.createElement(i.d,{data:o,margin:{top:10,right:0,left:-25,bottom:0}},n.a.createElement(i.E,{dataKey:"name"}),n.a.createElement(i.F,null),n.a.createElement(i.f,{strokeDasharray:"3 3"}),n.a.createElement(i.C,null),n.a.createElement(i.l,null),n.a.createElement(i.c,{dataKey:"pv",fill:"#4299E1"}),n.a.createElement(i.c,{dataKey:"uv",fill:"#F04F47"})))},m=function(){return n.a.createElement(i.y,{width:"100%",height:200},n.a.createElement(i.d,{data:o,margin:{top:10,right:0,left:-25,bottom:0}},n.a.createElement(i.E,{dataKey:"name"}),n.a.createElement(i.F,null),n.a.createElement(i.f,{strokeDasharray:"3 3"}),n.a.createElement(i.C,null),n.a.createElement(i.l,null),n.a.createElement(i.c,{dataKey:"pv",stackId:"a",fill:"#4299E1"}),n.a.createElement(i.c,{dataKey:"uv",stackId:"a",fill:"#F04F47"})))},c=function(){return n.a.createElement(i.y,{width:"100%",height:200},n.a.createElement(i.d,{data:o,margin:{top:10,right:0,left:-25,bottom:0}},n.a.createElement(i.E,{dataKey:"name"}),n.a.createElement(i.F,null),n.a.createElement(i.f,{strokeDasharray:"3 3"}),n.a.createElement(i.C,null),n.a.createElement(i.l,null),n.a.createElement(i.c,{dataKey:"amt",stackId:"a",fill:"#4299E1"}),n.a.createElement(i.c,{dataKey:"pv",stackId:"a",fill:"#F04F47"}),n.a.createElement(i.c,{dataKey:"uv",fill:"#F04F47"})))},s=function(e,a,t,r){return"M".concat(e,",").concat(a+r,"\n          C").concat(e+t/3,",").concat(a+r," ").concat(e+t/2,",").concat(a+r/3," ").concat(e+t/2,", ").concat(a,"\n          C").concat(e+t/2,",").concat(a+r/3," ").concat(e+2*t/3,",").concat(a+r," ").concat(e+t,", ").concat(a+r,"\n          Z")},d=function(e){var a=e.fill,t=e.x,r=e.y,i=e.width,o=e.height;return n.a.createElement("path",{d:s(t,r,i,o),stroke:"none",fill:a})},h=function(){return n.a.createElement(i.y,{width:"100%",height:200},n.a.createElement(i.d,{data:o,margin:{top:10,right:0,left:-25,bottom:0}},n.a.createElement(i.E,{dataKey:"name"}),n.a.createElement(i.F,null),n.a.createElement(i.f,{strokeDasharray:"3 3"}),n.a.createElement(i.c,{dataKey:"uv",fill:"#4299E1",shape:n.a.createElement(d,null),label:!0})))},p=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:-3e3,pv:1398,amt:2210},{name:"Page C",uv:-2e3,pv:-9800,amt:2290},{name:"Page D",uv:2780,pv:3908,amt:2e3},{name:"Page E",uv:-1890,pv:4800,amt:2181},{name:"Page F",uv:2390,pv:-3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],g=function(){return n.a.createElement(i.y,{width:"100%",height:200},n.a.createElement(i.d,{data:p,margin:{top:10,right:0,left:-25,bottom:0}},n.a.createElement(i.E,{dataKey:"name"}),n.a.createElement(i.F,null),n.a.createElement(i.f,{strokeDasharray:"3 3"}),n.a.createElement(i.C,null),n.a.createElement(i.l,null),n.a.createElement(i.x,{y:0,stroke:"#000"}),n.a.createElement(i.c,{dataKey:"pv",fill:"#4299E1"}),n.a.createElement(i.c,{dataKey:"uv",fill:"#F04F47"})))},v=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:-3e3,pv:1398,amt:2210},{name:"Page C",uv:-2e3,pv:-9800,amt:2290},{name:"Page D",uv:2780,pv:3908,amt:2e3},{name:"Page E",uv:-1890,pv:4800,amt:2181},{name:"Page F",uv:2390,pv:-3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],u=function(){return n.a.createElement(i.y,{width:"100%",height:200},n.a.createElement(i.d,{data:v,stackOffset:"sign",margin:{top:10,right:0,left:-25,bottom:0}},n.a.createElement(i.E,{dataKey:"name"}),n.a.createElement(i.F,null),n.a.createElement(i.f,{strokeDasharray:"3 3"}),n.a.createElement(i.C,null),n.a.createElement(i.l,null),n.a.createElement(i.x,{y:0,stroke:"#000"}),n.a.createElement(i.c,{dataKey:"pv",fill:"#4299E1",stackId:"stack"}),n.a.createElement(i.c,{dataKey:"uv",fill:"#F04F47",stackId:"stack"})))},f=function(){return n.a.createElement(i.y,{width:"100%",height:200},n.a.createElement(i.d,{data:o,margin:{top:10,right:0,left:-25,bottom:0}},n.a.createElement(i.E,{dataKey:"name"}),n.a.createElement(i.F,{yAxisId:"left",orientation:"left",stroke:"#03275b"}),n.a.createElement(i.F,{yAxisId:"right",orientation:"right",stroke:"#F04F47"}),n.a.createElement(i.f,{strokeDasharray:"3 3"}),n.a.createElement(i.C,null),n.a.createElement(i.l,null),n.a.createElement(i.c,{yAxisId:"left",dataKey:"pv",fill:"#4299E1"}),n.a.createElement(i.c,{yAxisId:"right",dataKey:"uv",fill:"#F04F47"})))},E=t(359),y=t(408),C=t(407),B=t(406);a.default=function(e){e.match;return n.a.createElement(n.a.Fragment,null,n.a.createElement(C.a,{title:"Bar Chart",description:"All svg elements can be added into the BarChart component, such as defs, linearGradient, etc.",refUrl:"http://recharts.org/en-US/api/BarChart/"}),n.a.createElement(B.a,null,n.a.createElement(E.a,{item:!0,xs:12,lg:6},n.a.createElement(y.a,{title:"Tiny Bar Chart",component:l,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst TinyBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey='pv' fill='#4299E1' />\r\n      <Bar dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default TinyBarChart;\r\n"})),n.a.createElement(E.a,{item:!0,xs:12,lg:6},n.a.createElement(y.a,{title:"Stacked Bar Chart",component:m,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst StackedBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey='pv' stackId='a' fill='#4299E1' />\r\n      <Bar dataKey='uv' stackId='a' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default StackedBarChart;\r\n"})),n.a.createElement(E.a,{item:!0,xs:12,lg:6},n.a.createElement(y.a,{title:"Mix Bar Chart",component:c,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst MixBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey='amt' stackId='a' fill='#4299E1' />\r\n      <Bar dataKey='pv' stackId='a' fill='#F04F47' />\r\n      <Bar dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default MixBarChart;\r\n"})),n.a.createElement(E.a,{item:!0,xs:12,lg:6},n.a.createElement(y.a,{title:"Custom Shape Bar Chart",component:h,source:"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst getPath = (x, y, width, height) => {\r\n  return `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${\r\n    x + width / 2\r\n  }, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${\r\n    y + height\r\n  } ${x + width}, ${y + height}\r\n          Z`;\r\n};\r\n\r\nconst TriangleBar = (props) => {\r\n  const {fill, x, y, width, height} = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke='none' fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\nconst CustomShapeBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Bar dataKey='uv' fill='#4299E1' shape={<TriangleBar />} label />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default CustomShapeBarChart;\r\n"})),n.a.createElement(E.a,{item:!0,xs:12,lg:6},n.a.createElement(y.a,{title:"Positive And Negative Bar Chart",component:g,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\r\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\n\r\nconst PositiveAndNegativeBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <ReferenceLine y={0} stroke='#000' />\r\n      <Bar dataKey='pv' fill='#4299E1' />\r\n      <Bar dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default PositiveAndNegativeBarChart;\r\n"})),n.a.createElement(E.a,{item:!0,xs:12,lg:6},n.a.createElement(y.a,{title:"Bar Chart Stacked By Sign",component:u,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\r\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\n\r\nconst BarChartStackedBySign = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart\r\n      data={data}\r\n      stackOffset='sign'\r\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <ReferenceLine y={0} stroke='#000' />\r\n      <Bar dataKey='pv' fill='#4299E1' stackId='stack' />\r\n      <Bar dataKey='uv' fill='#F04F47' stackId='stack' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default BarChartStackedBySign;\r\n"})),n.a.createElement(E.a,{item:!0,xs:12,lg:6},n.a.createElement(y.a,{title:"Biaxial Bar Chart",component:f,source:"import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst BiaxialBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis yAxisId='left' orientation='left' stroke='#03275b' />\r\n      <YAxis yAxisId='right' orientation='right' stroke='#F04F47' />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar yAxisId='left' dataKey='pv' fill='#4299E1' />\r\n      <Bar yAxisId='right' dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default BiaxialBarChart;\r\n"}))))}}}]);
//# sourceMappingURL=155.9e3b968a.chunk.js.map