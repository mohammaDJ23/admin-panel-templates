{"version":3,"sources":["../node_modules/@material-ui/icons/ChevronRight.js","../node_modules/@material-ui/lab/esm/TreeView/TreeViewContext.js","../node_modules/@material-ui/lab/esm/TreeView/TreeView.js","../node_modules/@material-ui/lab/esm/TreeItem/TreeItem.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","TreeViewContext","React","findNextFirstChar","firstChars","startIndex","char","i","length","defaultExpandedDefault","defaultSelectedDefault","TreeView","props","ref","children","classes","className","defaultCollapseIcon","defaultEndIcon","_props$defaultExpande","defaultExpanded","defaultExpandIcon","defaultParentIcon","_props$defaultSelecte","defaultSelected","_props$disableSelecti","disableSelection","_props$multiSelect","multiSelect","expandedProp","expanded","onNodeSelect","onNodeToggle","selectedProp","selected","other","_objectWithoutProperties","_React$useState","tabbable","setTabbable","_React$useState2","focusedNodeId","setFocusedNodeId","nodeMap","firstCharMap","visibleNodes","_useControlled","useControlled","controlled","name","state","_useControlled2","_slicedToArray","setExpandedState","_useControlled3","_useControlled4","setSelectedState","isExpanded","id","Array","isArray","indexOf","isSelected","getNextNode","nodeIndex","current","getPreviousNode","getLastNode","getFirstNode","focus","lastSelectedNode","lastSelectionWasRange","currentRangeSelection","handleRangeArrowSelect","event","nodes","base","start","next","filter","push","handleRangeSelect","end","range","a","b","aIndex","bIndex","Math","min","max","slice","getNodesInRange","newSelected","concat","handleMultipleSelect","handleSingleSelect","selectRange","stacked","arguments","undefined","_nodes$start","getNodesToRemove","map","forEach","node","cleanUpFirstCharMap","newMap","_extends","removeNodeFromNodeMap","parent","parentMap","parentChildren","c","oldFocusedNodeId","prevChildIds","_React$useState3","childrenCalculated","setChildrenCalculated","childIds","child","nodeId","arr1","arr2","arrayDiff","index","buildVisible","list","item","childs","noopSelection","Provider","icons","focusFirstNode","focusLastNode","focusNextNode","focusPreviousNode","focusByFirstCharacter","lowercaseChar","toLowerCase","firstCharIds","keys","firstChar","expandAllSiblings","diff","newExpanded","toggleExpansion","oldTabbable","isFocused","selectNode","multiple","selectNextNode","selectPreviousNode","rangeSelectToFirst","rangeSelectToLast","selectAllNodes","isTabbable","getParent","mapFirstChar","addNodeToNodeMap","childrenIds","currentMap","childId","currentChildMap","role","clsx","root","withStyles","padding","margin","listStyle","TreeItem","collapseIcon","endIcon","expandIcon","iconProp","icon","label","onClick","onLabelClick","onIconClick","onFocus","onKeyDown","onMouseDown","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","_React$useContext","contextIcons","nodeRef","contentRef","handleRef","useForkRef","expandable","Boolean","focused","theme","useTheme","ariaSelected","handleNextArrow","handlePreviousArrow","textContent","substring","flag","key","altKey","currentTarget","target","str","ctrlPressed","ctrlKey","metaKey","shiftKey","stopPropagation","direction","match","preventDefault","tabIndex","content","defaultPrevented","iconContainer","Typography","component","unmountOnExit","group","in","outline","WebkitTapHighlightColor","backgroundColor","palette","action","hover","fade","primary","main","selectedOpacity","hoverOpacity","marginLeft","width","display","alignItems","cursor","marginRight","flexShrink","justifyContent","fontSize","paddingLeft","position"],"mappings":"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","file":"static/js/17.3eef5976.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');\n\nexports.default = _default;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TreeViewContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}\n\nexport default TreeViewContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useControlled } from '@material-ui/core/utils';\nimport TreeViewContext from './TreeViewContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = /*#__PURE__*/React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\n   * Status Helpers\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = expanded.concat(diff);\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(selected);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.concat(map.children);\n        map.children.forEach(function (node) {\n          nodes.concat(getNodesToRemove(node));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var cleanUpFirstCharMap = React.useCallback(function (nodes) {\n    var newMap = _extends({}, firstCharMap.current);\n\n    nodes.forEach(function (node) {\n      if (newMap[node]) {\n        delete newMap[node];\n      }\n    });\n    firstCharMap.current = newMap;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n    cleanUpFirstCharMap(nodes);\n\n    var newMap = _extends({}, nodeMap.current);\n\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = _extends({}, parentMap, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove, cleanUpFirstCharMap]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids. (Uncontrolled)\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * If `true` selection is disabled.\n   */\n  disableSelection: PropTypes.bool,\n\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   */\n  multiSelect: PropTypes.bool,\n\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {object} event The event source of the callback\n   * @param {(array|string)} value of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { fade, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onLabelClick = props.onLabelClick,\n      onIconClick = props.onIconClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `onClick` handler for the icon container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onIconClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * `onClick` handler for the label container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onLabelClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);"],"sourceRoot":""}