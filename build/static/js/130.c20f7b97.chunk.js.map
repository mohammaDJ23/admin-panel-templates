{"version":3,"sources":["modules/muiComponents/navigation/Steppers/HorizontalStepper.js","webpack:///./src/modules/muiComponents/navigation/Steppers/HorizontalStepper.js?523d","modules/muiComponents/navigation/Steppers/LinearAlternativeLabel.js","webpack:///./src/modules/muiComponents/navigation/Steppers/LinearAlternativeLabel.js?50ba","modules/muiComponents/navigation/Steppers/CustomizedStepper.js","webpack:///./src/modules/muiComponents/navigation/Steppers/CustomizedStepper.js?98a1","modules/muiComponents/navigation/Steppers/NonLinear.js","webpack:///./src/modules/muiComponents/navigation/Steppers/NonLinear.js?d2ce","modules/muiComponents/navigation/Steppers/NonLinearAlternativeLabel.js","webpack:///./src/modules/muiComponents/navigation/Steppers/NonLinearAlternativeLabel.js?440f","modules/muiComponents/navigation/Steppers/NonLinearErrorStepSelect.js","webpack:///./src/modules/muiComponents/navigation/Steppers/NonLinearErrorStepSelect.js?4197","modules/muiComponents/navigation/Steppers/VerticalStepper.js","webpack:///./src/modules/muiComponents/navigation/Steppers/VerticalStepper.js?d8aa","modules/muiComponents/navigation/Steppers/MobileStepper.js","webpack:///./src/modules/muiComponents/navigation/Steppers/MobileStepper.js?bc09","modules/muiComponents/navigation/Steppers/TextWithCarouselEffect.js","modules/muiComponents/navigation/Steppers/MobileStepperDots.js","webpack:///./src/modules/muiComponents/navigation/Steppers/MobileStepperDots.js?f104","modules/muiComponents/navigation/Steppers/MobileStepperProgress.js","modules/muiComponents/navigation/Steppers/index.js","webpack:///./src/modules/muiComponents/navigation/Steppers/TextWithCarouselEffect.js?4d46","webpack:///./src/modules/muiComponents/navigation/Steppers/MobileStepperProgress.js?59d0"],"names":["useStyles","makeStyles","theme","root","width","breakpoints","up","down","alignItems","flexDirection","paddingTop","paddingBottom","button","marginRight","spacing","instructions","marginTop","marginBottom","HorizontalLinearStepper","classes","React","useState","activeStep","setActiveStep","Set","skipped","setSkipped","steps","isStepOptional","step","isStepSkipped","has","className","Stepper","map","label","index","stepProps","labelProps","optional","Typography","variant","completed","Step","key","StepLabel","length","Button","onClick","getStepContent","disabled","prevActiveStep","color","Error","prevSkipped","newSkipped","values","add","delete","display","backButton","HorizontalLabelPositionBelowStepper","alternativeLabel","stepIndex","QontoConnector","withStyles","top","left","right","active","borderColor","line","borderTopWidth","borderRadius","StepConnector","useQontoStepIconStyles","height","circle","backgroundColor","zIndex","fontSize","QontoStepIcon","props","clsx","ColorlibConnector","backgroundImage","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","icons","1","2","3","String","icon","CustomizedSteppers","connector","StepIconComponent","HorizontalNonLinearStepper","setCompleted","totalSteps","completedSteps","Object","keys","allStepsCompleted","handleNext","newActiveStep","findIndex","i","nonLinear","StepButton","newCompleted","HorizontalNonLinearAlternativeLabelStepper","skippedSteps","size","handleStep","isStepComplete","buttonProps","HorizontalNonLinearStepperWithError","error","actionsContainer","resetContainer","padding","VerticalLinearStepper","handleBack","orientation","StepContent","Paper","square","elevation","tutorialSteps","imgPath","maxWidth","flexGrow","header","paddingLeft","palette","background","default","img","overflow","TextMobileStepper","useTheme","maxSteps","src","alt","MobileStepper","position","nextButton","direction","AutoPlaySwipeableViews","autoPlay","SwipeableViews","SwipeableTextMobileStepper","axis","onChangeIndex","enableMouseEvents","Math","abs","DotsMobileStepper","ProgressMobileStepper","Steppers","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","HorizontalStepper","source","LinearAlternativeLabel","CustomizedStepper","NonLinear","NonLinearAlternativeLabel","NonLinearErrorStepSelect","VerticalStepper","lg","TextWithCarouselEffect","MobileStepperDots","MobileStepperProgress"],"mappings":"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","file":"static/js/130.c20f7b97.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '90%',\r\n    },\r\n    '& .MuiStepper-horizontal': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        alignItems: 'flex-start',\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    '& .MuiStep-horizontal': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        width: '100%',\r\n      },\r\n    },\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  function isStepOptional(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepSkipped(step) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function handleNext() {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleSkip() {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant='caption'>Optional</Typography>\r\n            );\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              {getStepContent(activeStep)}\r\n            </Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  onClick={handleSkip}\r\n                  className={classes.button}>\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={handleNext}\r\n                className={classes.button}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepLabel from '@material-ui/core/StepLabel';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    [theme.breakpoints.up('sm')]: {\\r\\n      width: '90%',\\r\\n    },\\r\\n    '& .MuiStepper-horizontal': {\\r\\n      [theme.breakpoints.down('xs')]: {\\r\\n        alignItems: 'flex-start',\\r\\n        flexDirection: 'column',\\r\\n      },\\r\\n    },\\r\\n    '& .MuiStep-horizontal': {\\r\\n      [theme.breakpoints.down('xs')]: {\\r\\n        paddingTop: 8,\\r\\n        paddingBottom: 8,\\r\\n        width: '100%',\\r\\n      },\\r\\n    },\\r\\n  },\\r\\n  button: {\\r\\n    marginRight: theme.spacing(1),\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(1),\\r\\n    marginBottom: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return 'Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function HorizontalLinearStepper() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const [skipped, setSkipped] = React.useState(new Set());\\r\\n  const steps = getSteps();\\r\\n\\r\\n  function isStepOptional(step) {\\r\\n    return step === 1;\\r\\n  }\\r\\n\\r\\n  function isStepSkipped(step) {\\r\\n    return skipped.has(step);\\r\\n  }\\r\\n\\r\\n  function handleNext() {\\r\\n    let newSkipped = skipped;\\r\\n    if (isStepSkipped(activeStep)) {\\r\\n      newSkipped = new Set(newSkipped.values());\\r\\n      newSkipped.delete(activeStep);\\r\\n    }\\r\\n\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n    setSkipped(newSkipped);\\r\\n  }\\r\\n\\r\\n  function handleBack() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  }\\r\\n\\r\\n  function handleSkip() {\\r\\n    if (!isStepOptional(activeStep)) {\\r\\n      // You probably want to guard against something like this,\\r\\n      // it should never occur unless someone's actively trying to break something.\\r\\n      throw new Error(\\\"You can't skip a step that isn't optional.\\\");\\r\\n    }\\r\\n\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n    setSkipped((prevSkipped) => {\\r\\n      const newSkipped = new Set(prevSkipped.values());\\r\\n      newSkipped.add(activeStep);\\r\\n      return newSkipped;\\r\\n    });\\r\\n  }\\r\\n\\r\\n  function handleReset() {\\r\\n    setActiveStep(0);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Stepper activeStep={activeStep}>\\r\\n        {steps.map((label, index) => {\\r\\n          const stepProps = {};\\r\\n          const labelProps = {};\\r\\n          if (isStepOptional(index)) {\\r\\n            labelProps.optional = (\\r\\n              <Typography variant='caption'>Optional</Typography>\\r\\n            );\\r\\n          }\\r\\n          if (isStepSkipped(index)) {\\r\\n            stepProps.completed = false;\\r\\n          }\\r\\n          return (\\r\\n            <Step key={label} {...stepProps}>\\r\\n              <StepLabel {...labelProps}>{label}</StepLabel>\\r\\n            </Step>\\r\\n          );\\r\\n        })}\\r\\n      </Stepper>\\r\\n      <div>\\r\\n        {activeStep === steps.length ? (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              All steps completed - you&apos;re finished\\r\\n            </Typography>\\r\\n            <Button onClick={handleReset} className={classes.button}>\\r\\n              Reset\\r\\n            </Button>\\r\\n          </div>\\r\\n        ) : (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              {getStepContent(activeStep)}\\r\\n            </Typography>\\r\\n            <div>\\r\\n              <Button\\r\\n                disabled={activeStep === 0}\\r\\n                onClick={handleBack}\\r\\n                className={classes.button}>\\r\\n                Back\\r\\n              </Button>\\r\\n              {isStepOptional(activeStep) && (\\r\\n                <Button\\r\\n                  variant='contained'\\r\\n                  color='primary'\\r\\n                  onClick={handleSkip}\\r\\n                  className={classes.button}>\\r\\n                  Skip\\r\\n                </Button>\\r\\n              )}\\r\\n\\r\\n              <Button\\r\\n                variant='contained'\\r\\n                color='primary'\\r\\n                onClick={handleNext}\\r\\n                className={classes.button}>\\r\\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\r\\n              </Button>\\r\\n            </div>\\r\\n          </div>\\r\\n        )}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '90%',\r\n    },\r\n    '& .MuiStepper-horizontal': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        alignItems: 'flex-start',\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    '& .MuiStep-horizontal': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        width: '100%',\r\n      },\r\n      '& .MuiStepConnector-alternativeLabel': {\r\n        [theme.breakpoints.down('xs')]: {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    'Select master blaster campaign settings',\r\n    'Create an ad group',\r\n    'Create an ad',\r\n  ];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Uknown stepIndex';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              {getStepContent(activeStep)}\r\n            </Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}>\r\n                Back\r\n              </Button>\r\n              <Button variant='contained' color='primary' onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepLabel from '@material-ui/core/StepLabel';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    [theme.breakpoints.up('sm')]: {\\r\\n      width: '90%',\\r\\n    },\\r\\n    '& .MuiStepper-horizontal': {\\r\\n      [theme.breakpoints.down('xs')]: {\\r\\n        alignItems: 'flex-start',\\r\\n        flexDirection: 'column',\\r\\n      },\\r\\n    },\\r\\n    '& .MuiStep-horizontal': {\\r\\n      [theme.breakpoints.down('xs')]: {\\r\\n        paddingTop: 8,\\r\\n        paddingBottom: 8,\\r\\n        width: '100%',\\r\\n      },\\r\\n      '& .MuiStepConnector-alternativeLabel': {\\r\\n        [theme.breakpoints.down('xs')]: {\\r\\n          display: 'none',\\r\\n        },\\r\\n      },\\r\\n    },\\r\\n  },\\r\\n  backButton: {\\r\\n    marginRight: theme.spacing(1),\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(1),\\r\\n    marginBottom: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return [\\r\\n    'Select master blaster campaign settings',\\r\\n    'Create an ad group',\\r\\n    'Create an ad',\\r\\n  ];\\r\\n}\\r\\n\\r\\nfunction getStepContent(stepIndex) {\\r\\n  switch (stepIndex) {\\r\\n    case 0:\\r\\n      return 'Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Uknown stepIndex';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function HorizontalLabelPositionBelowStepper() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const steps = getSteps();\\r\\n\\r\\n  function handleNext() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  }\\r\\n\\r\\n  function handleBack() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  }\\r\\n\\r\\n  function handleReset() {\\r\\n    setActiveStep(0);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Stepper activeStep={activeStep} alternativeLabel>\\r\\n        {steps.map((label) => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel>{label}</StepLabel>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <div>\\r\\n        {activeStep === steps.length ? (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              All steps completed\\r\\n            </Typography>\\r\\n            <Button onClick={handleReset}>Reset</Button>\\r\\n          </div>\\r\\n        ) : (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              {getStepContent(activeStep)}\\r\\n            </Typography>\\r\\n            <div>\\r\\n              <Button\\r\\n                disabled={activeStep === 0}\\r\\n                onClick={handleBack}\\r\\n                className={classes.backButton}>\\r\\n                Back\\r\\n              </Button>\\r\\n              <Button variant='contained' color='primary' onClick={handleNext}>\\r\\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\r\\n              </Button>\\r\\n            </div>\\r\\n          </div>\\r\\n        )}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst QontoConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 10,\r\n    left: 'calc(-50% + 16px)',\r\n    right: 'calc(50% + 16px)',\r\n  },\r\n  active: {\r\n    '& $line': {\r\n      borderColor: '#784af4',\r\n    },\r\n  },\r\n  completed: {\r\n    '& $line': {\r\n      borderColor: '#784af4',\r\n    },\r\n  },\r\n  line: {\r\n    borderColor: '#eaeaf0',\r\n    borderTopWidth: 3,\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: '#eaeaf0',\r\n    display: 'flex',\r\n    height: 22,\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    color: '#784af4',\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: '50%',\r\n    backgroundColor: 'currentColor',\r\n  },\r\n  completed: {\r\n    color: '#784af4',\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n  const classes = useQontoStepIconStyles();\r\n  const {active, completed} = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n      })}>\r\n      {completed ? (\r\n        <Check className={classes.completed} />\r\n      ) : (\r\n        <div className={classes.circle} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  active: PropTypes.bool,\r\n  completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    '& $line': {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  completed: {\r\n    '& $line': {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: '#eaeaf0',\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#ccc',\r\n    zIndex: 1,\r\n    color: '#fff',\r\n    width: 50,\r\n    height: 50,\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n  },\r\n  completed: {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n  },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const {active, completed} = props;\r\n\r\n  const icons = {\r\n    1: <SettingsIcon />,\r\n    2: <GroupAddIcon />,\r\n    3: <VideoLabelIcon />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}>\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  active: PropTypes.bool,\r\n  completed: PropTypes.bool,\r\n  icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '90%',\r\n    },\r\n    '& .MuiStepper-horizontal': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        alignItems: 'flex-start',\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    '& .MuiStep-horizontal': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        width: '100%',\r\n      },\r\n      '& .MuiStepConnector-alternativeLabel': {\r\n        [theme.breakpoints.down('xs')]: {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function CustomizedSteppers() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(1);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper alternativeLabel activeStep={activeStep}>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={activeStep}\r\n        connector={<QontoConnector />}>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={activeStep}\r\n        connector={<ColorlibConnector />}>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              {getStepContent(activeStep)}\r\n            </Typography>\r\n            <div className='mb-2'>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={handleNext}\r\n                className={classes.button}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\\r\\nimport clsx from 'clsx';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepLabel from '@material-ui/core/StepLabel';\\r\\nimport Check from '@material-ui/icons/Check';\\r\\nimport SettingsIcon from '@material-ui/icons/Settings';\\r\\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\\r\\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\\r\\nimport StepConnector from '@material-ui/core/StepConnector';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\n\\r\\nconst QontoConnector = withStyles({\\r\\n  alternativeLabel: {\\r\\n    top: 10,\\r\\n    left: 'calc(-50% + 16px)',\\r\\n    right: 'calc(50% + 16px)',\\r\\n  },\\r\\n  active: {\\r\\n    '& $line': {\\r\\n      borderColor: '#784af4',\\r\\n    },\\r\\n  },\\r\\n  completed: {\\r\\n    '& $line': {\\r\\n      borderColor: '#784af4',\\r\\n    },\\r\\n  },\\r\\n  line: {\\r\\n    borderColor: '#eaeaf0',\\r\\n    borderTopWidth: 3,\\r\\n    borderRadius: 1,\\r\\n  },\\r\\n})(StepConnector);\\r\\n\\r\\nconst useQontoStepIconStyles = makeStyles({\\r\\n  root: {\\r\\n    color: '#eaeaf0',\\r\\n    display: 'flex',\\r\\n    height: 22,\\r\\n    alignItems: 'center',\\r\\n  },\\r\\n  active: {\\r\\n    color: '#784af4',\\r\\n  },\\r\\n  circle: {\\r\\n    width: 8,\\r\\n    height: 8,\\r\\n    borderRadius: '50%',\\r\\n    backgroundColor: 'currentColor',\\r\\n  },\\r\\n  completed: {\\r\\n    color: '#784af4',\\r\\n    zIndex: 1,\\r\\n    fontSize: 18,\\r\\n  },\\r\\n});\\r\\n\\r\\nfunction QontoStepIcon(props) {\\r\\n  const classes = useQontoStepIconStyles();\\r\\n  const {active, completed} = props;\\r\\n\\r\\n  return (\\r\\n    <div\\r\\n      className={clsx(classes.root, {\\r\\n        [classes.active]: active,\\r\\n      })}>\\r\\n      {completed ? (\\r\\n        <Check className={classes.completed} />\\r\\n      ) : (\\r\\n        <div className={classes.circle} />\\r\\n      )}\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nQontoStepIcon.propTypes = {\\r\\n  active: PropTypes.bool,\\r\\n  completed: PropTypes.bool,\\r\\n};\\r\\n\\r\\nconst ColorlibConnector = withStyles({\\r\\n  alternativeLabel: {\\r\\n    top: 22,\\r\\n  },\\r\\n  active: {\\r\\n    '& $line': {\\r\\n      backgroundImage:\\r\\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\\r\\n    },\\r\\n  },\\r\\n  completed: {\\r\\n    '& $line': {\\r\\n      backgroundImage:\\r\\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\\r\\n    },\\r\\n  },\\r\\n  line: {\\r\\n    height: 3,\\r\\n    border: 0,\\r\\n    backgroundColor: '#eaeaf0',\\r\\n    borderRadius: 1,\\r\\n  },\\r\\n})(StepConnector);\\r\\n\\r\\nconst useColorlibStepIconStyles = makeStyles({\\r\\n  root: {\\r\\n    backgroundColor: '#ccc',\\r\\n    zIndex: 1,\\r\\n    color: '#fff',\\r\\n    width: 50,\\r\\n    height: 50,\\r\\n    display: 'flex',\\r\\n    borderRadius: '50%',\\r\\n    justifyContent: 'center',\\r\\n    alignItems: 'center',\\r\\n  },\\r\\n  active: {\\r\\n    backgroundImage:\\r\\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\\r\\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\\r\\n  },\\r\\n  completed: {\\r\\n    backgroundImage:\\r\\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\\r\\n  },\\r\\n});\\r\\n\\r\\nfunction ColorlibStepIcon(props) {\\r\\n  const classes = useColorlibStepIconStyles();\\r\\n  const {active, completed} = props;\\r\\n\\r\\n  const icons = {\\r\\n    1: <SettingsIcon />,\\r\\n    2: <GroupAddIcon />,\\r\\n    3: <VideoLabelIcon />,\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div\\r\\n      className={clsx(classes.root, {\\r\\n        [classes.active]: active,\\r\\n        [classes.completed]: completed,\\r\\n      })}>\\r\\n      {icons[String(props.icon)]}\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nColorlibStepIcon.propTypes = {\\r\\n  active: PropTypes.bool,\\r\\n  completed: PropTypes.bool,\\r\\n  icon: PropTypes.node,\\r\\n};\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    [theme.breakpoints.up('sm')]: {\\r\\n      width: '90%',\\r\\n    },\\r\\n    '& .MuiStepper-horizontal': {\\r\\n      [theme.breakpoints.down('xs')]: {\\r\\n        alignItems: 'flex-start',\\r\\n        flexDirection: 'column',\\r\\n      },\\r\\n    },\\r\\n    '& .MuiStep-horizontal': {\\r\\n      [theme.breakpoints.down('xs')]: {\\r\\n        paddingTop: 8,\\r\\n        paddingBottom: 8,\\r\\n        width: '100%',\\r\\n      },\\r\\n      '& .MuiStepConnector-alternativeLabel': {\\r\\n        [theme.breakpoints.down('xs')]: {\\r\\n          display: 'none',\\r\\n        },\\r\\n      },\\r\\n    },\\r\\n  },\\r\\n  button: {\\r\\n    marginRight: theme.spacing(1),\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(1),\\r\\n    marginBottom: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return 'Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function CustomizedSteppers() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(1);\\r\\n  const steps = getSteps();\\r\\n\\r\\n  function handleNext() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  }\\r\\n\\r\\n  function handleBack() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  }\\r\\n\\r\\n  function handleReset() {\\r\\n    setActiveStep(0);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Stepper alternativeLabel activeStep={activeStep}>\\r\\n        {steps.map((label) => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel>{label}</StepLabel>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <Stepper\\r\\n        alternativeLabel\\r\\n        activeStep={activeStep}\\r\\n        connector={<QontoConnector />}>\\r\\n        {steps.map((label) => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <Stepper\\r\\n        alternativeLabel\\r\\n        activeStep={activeStep}\\r\\n        connector={<ColorlibConnector />}>\\r\\n        {steps.map((label) => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <div>\\r\\n        {activeStep === steps.length ? (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              All steps completed - you&apos;re finished\\r\\n            </Typography>\\r\\n            <Button onClick={handleReset} className={classes.button}>\\r\\n              Reset\\r\\n            </Button>\\r\\n          </div>\\r\\n        ) : (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              {getStepContent(activeStep)}\\r\\n            </Typography>\\r\\n            <div className='mb-2'>\\r\\n              <Button\\r\\n                disabled={activeStep === 0}\\r\\n                onClick={handleBack}\\r\\n                className={classes.button}>\\r\\n                Back\\r\\n              </Button>\\r\\n              <Button\\r\\n                variant='contained'\\r\\n                color='primary'\\r\\n                onClick={handleNext}\\r\\n                className={classes.button}>\\r\\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\r\\n              </Button>\\r\\n            </div>\\r\\n          </div>\\r\\n        )}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '90%',\r\n    },\r\n    '& .MuiStepper-horizontal': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        alignItems: 'flex-start',\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    '& .MuiStep-horizontal': {\r\n      paddingTop: 8,\r\n      paddingBottom: 8,\r\n      width: '100%',\r\n    },\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Step 1: Select campaign settings...';\r\n    case 1:\r\n      return 'Step 2: What is an ad group anyways?';\r\n    case 2:\r\n      return 'Step 3: This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n  const steps = getSteps();\r\n\r\n  function totalSteps() {\r\n    return steps.length;\r\n  }\r\n\r\n  function completedSteps() {\r\n    return Object.keys(completed).length;\r\n  }\r\n\r\n  function isLastStep() {\r\n    return activeStep === totalSteps() - 1;\r\n  }\r\n\r\n  function allStepsCompleted() {\r\n    return completedSteps() === totalSteps();\r\n  }\r\n\r\n  function handleNext() {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  }\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  function handleComplete() {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepButton\r\n              onClick={handleStep(index)}\r\n              completed={completed[index]}>\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              {getStepContent(activeStep)}\r\n            </Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={handleNext}\r\n                className={classes.button}>\r\n                Next\r\n              </Button>\r\n              {activeStep !== steps.length &&\r\n                (completed[activeStep] ? (\r\n                  <Typography variant='caption' className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button\r\n                    className={classes.button}\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1\r\n                      ? 'Finish'\r\n                      : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepButton from '@material-ui/core/StepButton';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    [theme.breakpoints.up('sm')]: {\\r\\n      width: '90%',\\r\\n    },\\r\\n    '& .MuiStepper-horizontal': {\\r\\n      [theme.breakpoints.down('xs')]: {\\r\\n        alignItems: 'flex-start',\\r\\n        flexDirection: 'column',\\r\\n      },\\r\\n    },\\r\\n    '& .MuiStep-horizontal': {\\r\\n      paddingTop: 8,\\r\\n      paddingBottom: 8,\\r\\n      width: '100%',\\r\\n    },\\r\\n  },\\r\\n  button: {\\r\\n    marginRight: theme.spacing(1),\\r\\n    marginBottom: theme.spacing(1),\\r\\n  },\\r\\n  completed: {\\r\\n    display: 'inline-block',\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(1),\\r\\n    marginBottom: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return 'Step 1: Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'Step 2: What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'Step 3: This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function HorizontalNonLinearStepper() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const [completed, setCompleted] = React.useState({});\\r\\n  const steps = getSteps();\\r\\n\\r\\n  function totalSteps() {\\r\\n    return steps.length;\\r\\n  }\\r\\n\\r\\n  function completedSteps() {\\r\\n    return Object.keys(completed).length;\\r\\n  }\\r\\n\\r\\n  function isLastStep() {\\r\\n    return activeStep === totalSteps() - 1;\\r\\n  }\\r\\n\\r\\n  function allStepsCompleted() {\\r\\n    return completedSteps() === totalSteps();\\r\\n  }\\r\\n\\r\\n  function handleNext() {\\r\\n    const newActiveStep =\\r\\n      isLastStep() && !allStepsCompleted()\\r\\n        ? // It's the last step, but not all steps have been completed,\\r\\n          // find the first step that has been completed\\r\\n          steps.findIndex((step, i) => !(i in completed))\\r\\n        : activeStep + 1;\\r\\n    setActiveStep(newActiveStep);\\r\\n  }\\r\\n\\r\\n  function handleBack() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  }\\r\\n\\r\\n  const handleStep = (step) => () => {\\r\\n    setActiveStep(step);\\r\\n  };\\r\\n\\r\\n  function handleComplete() {\\r\\n    const newCompleted = completed;\\r\\n    newCompleted[activeStep] = true;\\r\\n    setCompleted(newCompleted);\\r\\n    handleNext();\\r\\n  }\\r\\n\\r\\n  function handleReset() {\\r\\n    setActiveStep(0);\\r\\n    setCompleted({});\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Stepper nonLinear activeStep={activeStep}>\\r\\n        {steps.map((label, index) => (\\r\\n          <Step key={label}>\\r\\n            <StepButton\\r\\n              onClick={handleStep(index)}\\r\\n              completed={completed[index]}>\\r\\n              {label}\\r\\n            </StepButton>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      <div>\\r\\n        {allStepsCompleted() ? (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              All steps completed - you&apos;re finished\\r\\n            </Typography>\\r\\n            <Button onClick={handleReset}>Reset</Button>\\r\\n          </div>\\r\\n        ) : (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              {getStepContent(activeStep)}\\r\\n            </Typography>\\r\\n            <div>\\r\\n              <Button\\r\\n                disabled={activeStep === 0}\\r\\n                onClick={handleBack}\\r\\n                className={classes.button}>\\r\\n                Back\\r\\n              </Button>\\r\\n              <Button\\r\\n                variant='contained'\\r\\n                color='primary'\\r\\n                onClick={handleNext}\\r\\n                className={classes.button}>\\r\\n                Next\\r\\n              </Button>\\r\\n              {activeStep !== steps.length &&\\r\\n                (completed[activeStep] ? (\\r\\n                  <Typography variant='caption' className={classes.completed}>\\r\\n                    Step {activeStep + 1} already completed\\r\\n                  </Typography>\\r\\n                ) : (\\r\\n                  <Button\\r\\n                    className={classes.button}\\r\\n                    variant='contained'\\r\\n                    color='primary'\\r\\n                    onClick={handleComplete}>\\r\\n                    {completedSteps() === totalSteps() - 1\\r\\n                      ? 'Finish'\\r\\n                      : 'Complete Step'}\\r\\n                  </Button>\\r\\n                ))}\\r\\n            </div>\\r\\n          </div>\\r\\n        )}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '90%',\r\n    },\r\n    '& .MuiStepper-horizontal': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        alignItems: 'flex-start',\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    '& .MuiStep-horizontal': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        width: '100%',\r\n      },\r\n      '& .MuiStepConnector-alternativeLabel': {\r\n        [theme.breakpoints.down('xs')]: {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Step 1: Select campaign settings...';\r\n    case 1:\r\n      return 'Step 2: What is an ad group anyways?';\r\n    case 2:\r\n      return 'Step 3: This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState(new Set());\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  function totalSteps() {\r\n    return getSteps().length;\r\n  }\r\n\r\n  function isStepOptional(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function handleSkip() {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  }\r\n\r\n  function skippedSteps() {\r\n    return skipped.size;\r\n  }\r\n\r\n  function completedSteps() {\r\n    return completed.size;\r\n  }\r\n\r\n  function allStepsCompleted() {\r\n    return completedSteps() === totalSteps() - skippedSteps();\r\n  }\r\n\r\n  function isLastStep() {\r\n    return activeStep === totalSteps() - 1;\r\n  }\r\n\r\n  function handleNext() {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !completed.has(i))\r\n        : activeStep + 1;\r\n\r\n    setActiveStep(newActiveStep);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  }\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  function handleComplete() {\r\n    const newCompleted = new Set(completed);\r\n    newCompleted.add(activeStep);\r\n    setCompleted(newCompleted);\r\n\r\n    /**\r\n     * Sigh... it would be much nicer to replace the following if conditional with\r\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\r\n     * thus we have to resort to not being very DRY.\r\n     */\r\n    if (completed.size !== totalSteps() - skippedSteps()) {\r\n      handleNext();\r\n    }\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n    setCompleted(new Set());\r\n    setSkipped(new Set());\r\n  }\r\n\r\n  function isStepSkipped(step) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function isStepComplete(step) {\r\n    return completed.has(step);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const buttonProps = {};\r\n          if (isStepOptional(index)) {\r\n            buttonProps.optional = (\r\n              <Typography variant='caption'>Optional</Typography>\r\n            );\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepButton\r\n                onClick={handleStep(index)}\r\n                completed={isStepComplete(index)}\r\n                {...buttonProps}>\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              {getStepContent(activeStep)}\r\n            </Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={handleNext}\r\n                className={classes.button}>\r\n                Next\r\n              </Button>\r\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  onClick={handleSkip}\r\n                  className={classes.button}>\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              {activeStep !== steps.length &&\r\n                (completed.has(activeStep) ? (\r\n                  <Typography variant='caption' className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button\r\n                    className={classes.button}\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1\r\n                      ? 'Finish'\r\n                      : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepButton from '@material-ui/core/StepButton';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    [theme.breakpoints.up('sm')]: {\\r\\n      width: '90%',\\r\\n    },\\r\\n    '& .MuiStepper-horizontal': {\\r\\n      [theme.breakpoints.down('xs')]: {\\r\\n        alignItems: 'flex-start',\\r\\n        flexDirection: 'column',\\r\\n      },\\r\\n    },\\r\\n    '& .MuiStep-horizontal': {\\r\\n      [theme.breakpoints.down('xs')]: {\\r\\n        paddingTop: 8,\\r\\n        paddingBottom: 8,\\r\\n        width: '100%',\\r\\n      },\\r\\n      '& .MuiStepConnector-alternativeLabel': {\\r\\n        [theme.breakpoints.down('xs')]: {\\r\\n          display: 'none',\\r\\n        },\\r\\n      },\\r\\n    },\\r\\n  },\\r\\n  button: {\\r\\n    marginRight: theme.spacing(1),\\r\\n    marginBottom: theme.spacing(1),\\r\\n  },\\r\\n  backButton: {\\r\\n    marginRight: theme.spacing(1),\\r\\n  },\\r\\n  completed: {\\r\\n    display: 'inline-block',\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(1),\\r\\n    marginBottom: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return 'Step 1: Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'Step 2: What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'Step 3: This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const [completed, setCompleted] = React.useState(new Set());\\r\\n  const [skipped, setSkipped] = React.useState(new Set());\\r\\n  const steps = getSteps();\\r\\n\\r\\n  function totalSteps() {\\r\\n    return getSteps().length;\\r\\n  }\\r\\n\\r\\n  function isStepOptional(step) {\\r\\n    return step === 1;\\r\\n  }\\r\\n\\r\\n  function handleSkip() {\\r\\n    if (!isStepOptional(activeStep)) {\\r\\n      // You probably want to guard against something like this\\r\\n      // it should never occur unless someone's actively trying to break something.\\r\\n      throw new Error(\\\"You can't skip a step that isn't optional.\\\");\\r\\n    }\\r\\n\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n    setSkipped((prevSkipped) => {\\r\\n      const newSkipped = new Set(prevSkipped.values());\\r\\n      newSkipped.add(activeStep);\\r\\n      return newSkipped;\\r\\n    });\\r\\n  }\\r\\n\\r\\n  function skippedSteps() {\\r\\n    return skipped.size;\\r\\n  }\\r\\n\\r\\n  function completedSteps() {\\r\\n    return completed.size;\\r\\n  }\\r\\n\\r\\n  function allStepsCompleted() {\\r\\n    return completedSteps() === totalSteps() - skippedSteps();\\r\\n  }\\r\\n\\r\\n  function isLastStep() {\\r\\n    return activeStep === totalSteps() - 1;\\r\\n  }\\r\\n\\r\\n  function handleNext() {\\r\\n    const newActiveStep =\\r\\n      isLastStep() && !allStepsCompleted()\\r\\n        ? // It's the last step, but not all steps have been completed\\r\\n          // find the first step that has been completed\\r\\n          steps.findIndex((step, i) => !completed.has(i))\\r\\n        : activeStep + 1;\\r\\n\\r\\n    setActiveStep(newActiveStep);\\r\\n  }\\r\\n\\r\\n  function handleBack() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  }\\r\\n\\r\\n  const handleStep = (step) => () => {\\r\\n    setActiveStep(step);\\r\\n  };\\r\\n\\r\\n  function handleComplete() {\\r\\n    const newCompleted = new Set(completed);\\r\\n    newCompleted.add(activeStep);\\r\\n    setCompleted(newCompleted);\\r\\n\\r\\n    /**\\r\\n     * Sigh... it would be much nicer to replace the following if conditional with\\r\\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\\r\\n     * thus we have to resort to not being very DRY.\\r\\n     */\\r\\n    if (completed.size !== totalSteps() - skippedSteps()) {\\r\\n      handleNext();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function handleReset() {\\r\\n    setActiveStep(0);\\r\\n    setCompleted(new Set());\\r\\n    setSkipped(new Set());\\r\\n  }\\r\\n\\r\\n  function isStepSkipped(step) {\\r\\n    return skipped.has(step);\\r\\n  }\\r\\n\\r\\n  function isStepComplete(step) {\\r\\n    return completed.has(step);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\\r\\n        {steps.map((label, index) => {\\r\\n          const stepProps = {};\\r\\n          const buttonProps = {};\\r\\n          if (isStepOptional(index)) {\\r\\n            buttonProps.optional = (\\r\\n              <Typography variant='caption'>Optional</Typography>\\r\\n            );\\r\\n          }\\r\\n          if (isStepSkipped(index)) {\\r\\n            stepProps.completed = false;\\r\\n          }\\r\\n          return (\\r\\n            <Step key={label} {...stepProps}>\\r\\n              <StepButton\\r\\n                onClick={handleStep(index)}\\r\\n                completed={isStepComplete(index)}\\r\\n                {...buttonProps}>\\r\\n                {label}\\r\\n              </StepButton>\\r\\n            </Step>\\r\\n          );\\r\\n        })}\\r\\n      </Stepper>\\r\\n      <div>\\r\\n        {allStepsCompleted() ? (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              All steps completed - you&apos;re finished\\r\\n            </Typography>\\r\\n            <Button onClick={handleReset}>Reset</Button>\\r\\n          </div>\\r\\n        ) : (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              {getStepContent(activeStep)}\\r\\n            </Typography>\\r\\n            <div>\\r\\n              <Button\\r\\n                disabled={activeStep === 0}\\r\\n                onClick={handleBack}\\r\\n                className={classes.button}>\\r\\n                Back\\r\\n              </Button>\\r\\n              <Button\\r\\n                variant='contained'\\r\\n                color='primary'\\r\\n                onClick={handleNext}\\r\\n                className={classes.button}>\\r\\n                Next\\r\\n              </Button>\\r\\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\\r\\n                <Button\\r\\n                  variant='contained'\\r\\n                  color='primary'\\r\\n                  onClick={handleSkip}\\r\\n                  className={classes.button}>\\r\\n                  Skip\\r\\n                </Button>\\r\\n              )}\\r\\n\\r\\n              {activeStep !== steps.length &&\\r\\n                (completed.has(activeStep) ? (\\r\\n                  <Typography variant='caption' className={classes.completed}>\\r\\n                    Step {activeStep + 1} already completed\\r\\n                  </Typography>\\r\\n                ) : (\\r\\n                  <Button\\r\\n                    className={classes.button}\\r\\n                    variant='contained'\\r\\n                    color='primary'\\r\\n                    onClick={handleComplete}>\\r\\n                    {completedSteps() === totalSteps() - 1\\r\\n                      ? 'Finish'\\r\\n                      : 'Complete Step'}\\r\\n                  </Button>\\r\\n                ))}\\r\\n            </div>\\r\\n          </div>\\r\\n        )}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '90%',\r\n    },\r\n    '& .MuiStepper-horizontal': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        alignItems: 'flex-start',\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    '& .MuiStep-horizontal': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        width: '100%',\r\n      },\r\n      '& .MuiStepConnector-alternativeLabel': {\r\n        [theme.breakpoints.down('xs')]: {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearStepperWithError() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  function isStepOptional(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepFailed(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepSkipped(step) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function handleNext() {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(skipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleSkip() {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant='caption' color='error'>\r\n                Alert message\r\n              </Typography>\r\n            );\r\n          }\r\n          if (isStepFailed(index)) {\r\n            labelProps.error = true;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              {getStepContent(activeStep)}\r\n            </Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  onClick={handleSkip}\r\n                  className={classes.button}>\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={handleNext}\r\n                className={classes.button}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepLabel from '@material-ui/core/StepLabel';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    [theme.breakpoints.up('sm')]: {\\r\\n      width: '90%',\\r\\n    },\\r\\n    '& .MuiStepper-horizontal': {\\r\\n      [theme.breakpoints.down('xs')]: {\\r\\n        alignItems: 'flex-start',\\r\\n        flexDirection: 'column',\\r\\n      },\\r\\n    },\\r\\n    '& .MuiStep-horizontal': {\\r\\n      [theme.breakpoints.down('xs')]: {\\r\\n        paddingTop: 8,\\r\\n        paddingBottom: 8,\\r\\n        width: '100%',\\r\\n      },\\r\\n      '& .MuiStepConnector-alternativeLabel': {\\r\\n        [theme.breakpoints.down('xs')]: {\\r\\n          display: 'none',\\r\\n        },\\r\\n      },\\r\\n    },\\r\\n  },\\r\\n  button: {\\r\\n    marginRight: theme.spacing(1),\\r\\n  },\\r\\n  instructions: {\\r\\n    marginTop: theme.spacing(1),\\r\\n    marginBottom: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return 'Select campaign settings...';\\r\\n    case 1:\\r\\n      return 'What is an ad group anyways?';\\r\\n    case 2:\\r\\n      return 'This is the bit I really care about!';\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function HorizontalNonLinearStepperWithError() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const [skipped, setSkipped] = React.useState(new Set());\\r\\n  const steps = getSteps();\\r\\n\\r\\n  function isStepOptional(step) {\\r\\n    return step === 1;\\r\\n  }\\r\\n\\r\\n  function isStepFailed(step) {\\r\\n    return step === 1;\\r\\n  }\\r\\n\\r\\n  function isStepSkipped(step) {\\r\\n    return skipped.has(step);\\r\\n  }\\r\\n\\r\\n  function handleNext() {\\r\\n    let newSkipped = skipped;\\r\\n    if (isStepSkipped(activeStep)) {\\r\\n      newSkipped = new Set(skipped.values());\\r\\n      newSkipped.delete(activeStep);\\r\\n    }\\r\\n\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n    setSkipped(newSkipped);\\r\\n  }\\r\\n\\r\\n  function handleBack() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  }\\r\\n\\r\\n  function handleSkip() {\\r\\n    if (!isStepOptional(activeStep)) {\\r\\n      // You probably want to guard against something like this,\\r\\n      // it should never occur unless someone's actively trying to break something.\\r\\n      throw new Error(\\\"You can't skip a step that isn't optional.\\\");\\r\\n    }\\r\\n\\r\\n    setSkipped((prevSkipped) => {\\r\\n      const newSkipped = new Set(prevSkipped.values());\\r\\n      newSkipped.add(activeStep);\\r\\n      return newSkipped;\\r\\n    });\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  }\\r\\n\\r\\n  function handleReset() {\\r\\n    setActiveStep(0);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Stepper activeStep={activeStep}>\\r\\n        {steps.map((label, index) => {\\r\\n          const stepProps = {};\\r\\n          const labelProps = {};\\r\\n          if (isStepOptional(index)) {\\r\\n            labelProps.optional = (\\r\\n              <Typography variant='caption' color='error'>\\r\\n                Alert message\\r\\n              </Typography>\\r\\n            );\\r\\n          }\\r\\n          if (isStepFailed(index)) {\\r\\n            labelProps.error = true;\\r\\n          }\\r\\n          if (isStepSkipped(index)) {\\r\\n            stepProps.completed = false;\\r\\n          }\\r\\n          return (\\r\\n            <Step key={label} {...stepProps}>\\r\\n              <StepLabel {...labelProps}>{label}</StepLabel>\\r\\n            </Step>\\r\\n          );\\r\\n        })}\\r\\n      </Stepper>\\r\\n      <div>\\r\\n        {activeStep === steps.length ? (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              All steps completed - you&apos;re finished\\r\\n            </Typography>\\r\\n            <Button onClick={handleReset} className={classes.button}>\\r\\n              Reset\\r\\n            </Button>\\r\\n          </div>\\r\\n        ) : (\\r\\n          <div>\\r\\n            <Typography className={classes.instructions}>\\r\\n              {getStepContent(activeStep)}\\r\\n            </Typography>\\r\\n            <div>\\r\\n              <Button\\r\\n                disabled={activeStep === 0}\\r\\n                onClick={handleBack}\\r\\n                className={classes.button}>\\r\\n                Back\\r\\n              </Button>\\r\\n              {isStepOptional(activeStep) && (\\r\\n                <Button\\r\\n                  variant='contained'\\r\\n                  color='primary'\\r\\n                  onClick={handleSkip}\\r\\n                  className={classes.button}>\\r\\n                  Skip\\r\\n                </Button>\\r\\n              )}\\r\\n\\r\\n              <Button\\r\\n                variant='contained'\\r\\n                color='primary'\\r\\n                onClick={handleNext}\\r\\n                className={classes.button}>\\r\\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\r\\n              </Button>\\r\\n            </div>\\r\\n          </div>\\r\\n        )}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `For each ad campaign that you create, you can control how much\r\n              you're willing to spend on clicks and conversions, which networks\r\n              and geographical locations you want your ads to show on, and more.`;\r\n    case 1:\r\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\r\n    case 2:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function VerticalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} orientation='vertical'>\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              <Typography>{getStepContent(index)}</Typography>\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                    disabled={activeStep === 0}\r\n                    onClick={handleBack}\r\n                    className={classes.button}>\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={handleNext}\r\n                    className={classes.button}>\r\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} className={classes.resetContainer}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n          <Button onClick={handleReset} className={classes.button}>\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Stepper from '@material-ui/core/Stepper';\\r\\nimport Step from '@material-ui/core/Step';\\r\\nimport StepLabel from '@material-ui/core/StepLabel';\\r\\nimport StepContent from '@material-ui/core/StepContent';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '90%',\\r\\n  },\\r\\n  button: {\\r\\n    marginTop: theme.spacing(1),\\r\\n    marginRight: theme.spacing(1),\\r\\n  },\\r\\n  actionsContainer: {\\r\\n    marginBottom: theme.spacing(2),\\r\\n  },\\r\\n  resetContainer: {\\r\\n    padding: theme.spacing(3),\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction getSteps() {\\r\\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\\r\\n}\\r\\n\\r\\nfunction getStepContent(step) {\\r\\n  switch (step) {\\r\\n    case 0:\\r\\n      return `For each ad campaign that you create, you can control how much\\r\\n              you're willing to spend on clicks and conversions, which networks\\r\\n              and geographical locations you want your ads to show on, and more.`;\\r\\n    case 1:\\r\\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\\r\\n    case 2:\\r\\n      return `Try out different ad text to see what brings in the most customers,\\r\\n              and learn how to enhance your ads using features like ad extensions.\\r\\n              If you run into any problems with your ads, find out how to tell if\\r\\n              they're running and how to resolve approval issues.`;\\r\\n    default:\\r\\n      return 'Unknown step';\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default function VerticalLinearStepper() {\\r\\n  const classes = useStyles();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const steps = getSteps();\\r\\n\\r\\n  function handleNext() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  }\\r\\n\\r\\n  function handleBack() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  }\\r\\n\\r\\n  function handleReset() {\\r\\n    setActiveStep(0);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Stepper activeStep={activeStep} orientation='vertical'>\\r\\n        {steps.map((label, index) => (\\r\\n          <Step key={label}>\\r\\n            <StepLabel>{label}</StepLabel>\\r\\n            <StepContent>\\r\\n              <Typography>{getStepContent(index)}</Typography>\\r\\n              <div className={classes.actionsContainer}>\\r\\n                <div>\\r\\n                  <Button\\r\\n                    disabled={activeStep === 0}\\r\\n                    onClick={handleBack}\\r\\n                    className={classes.button}>\\r\\n                    Back\\r\\n                  </Button>\\r\\n                  <Button\\r\\n                    variant='contained'\\r\\n                    color='primary'\\r\\n                    onClick={handleNext}\\r\\n                    className={classes.button}>\\r\\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\\r\\n                  </Button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </StepContent>\\r\\n          </Step>\\r\\n        ))}\\r\\n      </Stepper>\\r\\n      {activeStep === steps.length && (\\r\\n        <Paper square elevation={0} className={classes.resetContainer}>\\r\\n          <Typography>All steps completed - you&apos;re finished</Typography>\\r\\n          <Button onClick={handleReset} className={classes.button}>\\r\\n            Reset\\r\\n          </Button>\\r\\n        </Paper>\\r\\n      )}\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'San Francisco – Oakland Bay Bridge, United States',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bird',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bali, Indonesia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\r\n  },\r\n  {\r\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Goč, Serbia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: 255,\r\n    maxWidth: 400,\r\n    overflow: 'hidden',\r\n    display: 'block',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport default function TextMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  function handleNext() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper square elevation={0} className={classes.header}>\r\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\r\n      </Paper>\r\n      <img\r\n        className={classes.img}\r\n        src={tutorialSteps[activeStep].imgPath}\r\n        alt={tutorialSteps[activeStep].label}\r\n      />\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position='static'\r\n        variant='text'\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button\r\n            size='small'\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}>\r\n            Next\r\n            {theme.direction === 'rtl' ? (\r\n              <KeyboardArrowLeft />\r\n            ) : (\r\n              <KeyboardArrowRight />\r\n            )}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? (\r\n              <KeyboardArrowRight />\r\n            ) : (\r\n              <KeyboardArrowLeft />\r\n            )}\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\\r\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\r\\n\\r\\nconst tutorialSteps = [\\r\\n  {\\r\\n    label: 'San Francisco – Oakland Bay Bridge, United States',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\\r\\n  },\\r\\n  {\\r\\n    label: 'Bird',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\\r\\n  },\\r\\n  {\\r\\n    label: 'Bali, Indonesia',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\\r\\n  },\\r\\n  {\\r\\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\\r\\n  },\\r\\n  {\\r\\n    label: 'Goč, Serbia',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\\r\\n  },\\r\\n];\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    maxWidth: 400,\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n  header: {\\r\\n    display: 'flex',\\r\\n    alignItems: 'center',\\r\\n    height: 50,\\r\\n    paddingLeft: theme.spacing(4),\\r\\n    backgroundColor: theme.palette.background.default,\\r\\n  },\\r\\n  img: {\\r\\n    height: 255,\\r\\n    maxWidth: 400,\\r\\n    overflow: 'hidden',\\r\\n    display: 'block',\\r\\n    width: '100%',\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function TextMobileStepper() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const maxSteps = tutorialSteps.length;\\r\\n\\r\\n  function handleNext() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  }\\r\\n\\r\\n  function handleBack() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Paper square elevation={0} className={classes.header}>\\r\\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\\r\\n      </Paper>\\r\\n      <img\\r\\n        className={classes.img}\\r\\n        src={tutorialSteps[activeStep].imgPath}\\r\\n        alt={tutorialSteps[activeStep].label}\\r\\n      />\\r\\n      <MobileStepper\\r\\n        steps={maxSteps}\\r\\n        position='static'\\r\\n        variant='text'\\r\\n        activeStep={activeStep}\\r\\n        nextButton={\\r\\n          <Button\\r\\n            size='small'\\r\\n            onClick={handleNext}\\r\\n            disabled={activeStep === maxSteps - 1}>\\r\\n            Next\\r\\n            {theme.direction === 'rtl' ? (\\r\\n              <KeyboardArrowLeft />\\r\\n            ) : (\\r\\n              <KeyboardArrowRight />\\r\\n            )}\\r\\n          </Button>\\r\\n        }\\r\\n        backButton={\\r\\n          <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\\r\\n            {theme.direction === 'rtl' ? (\\r\\n              <KeyboardArrowRight />\\r\\n            ) : (\\r\\n              <KeyboardArrowLeft />\\r\\n            )}\\r\\n            Back\\r\\n          </Button>\\r\\n        }\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport {autoPlay} from 'react-swipeable-views-utils';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'San Francisco – Oakland Bay Bridge, United States',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bird',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bali, Indonesia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\r\n  },\r\n  {\r\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Goč, Serbia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: 255,\r\n    display: 'block',\r\n    maxWidth: 400,\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nfunction SwipeableTextMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  function handleNext() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleStepChange(step) {\r\n    setActiveStep(step);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper square elevation={0} className={classes.header}>\r\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\r\n      </Paper>\r\n      <AutoPlaySwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents>\r\n        {tutorialSteps.map((step, index) => (\r\n          <div key={step.label}>\r\n            {Math.abs(activeStep - index) <= 2 ? (\r\n              <img\r\n                className={classes.img}\r\n                src={step.imgPath}\r\n                alt={step.label}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </AutoPlaySwipeableViews>\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position='static'\r\n        variant='text'\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button\r\n            size='small'\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}>\r\n            Next\r\n            {theme.direction === 'rtl' ? (\r\n              <KeyboardArrowLeft />\r\n            ) : (\r\n              <KeyboardArrowRight />\r\n            )}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? (\r\n              <KeyboardArrowRight />\r\n            ) : (\r\n              <KeyboardArrowLeft />\r\n            )}\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n","import React from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function DotsMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  function handleNext() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  }\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant='dots'\r\n      steps={6}\r\n      position='static'\r\n      activeStep={activeStep}\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size='small' onClick={handleNext} disabled={activeStep === 5}>\r\n          Next\r\n          {theme.direction === 'rtl' ? (\r\n            <KeyboardArrowLeft />\r\n          ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? (\r\n            <KeyboardArrowRight />\r\n          ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\\r\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\r\\n\\r\\nconst useStyles = makeStyles({\\r\\n  root: {\\r\\n    maxWidth: 400,\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function DotsMobileStepper() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n\\r\\n  function handleNext() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  }\\r\\n\\r\\n  function handleBack() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <MobileStepper\\r\\n      variant='dots'\\r\\n      steps={6}\\r\\n      position='static'\\r\\n      activeStep={activeStep}\\r\\n      className={classes.root}\\r\\n      nextButton={\\r\\n        <Button size='small' onClick={handleNext} disabled={activeStep === 5}>\\r\\n          Next\\r\\n          {theme.direction === 'rtl' ? (\\r\\n            <KeyboardArrowLeft />\\r\\n          ) : (\\r\\n            <KeyboardArrowRight />\\r\\n          )}\\r\\n        </Button>\\r\\n      }\\r\\n      backButton={\\r\\n        <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\\r\\n          {theme.direction === 'rtl' ? (\\r\\n            <KeyboardArrowRight />\\r\\n          ) : (\\r\\n            <KeyboardArrowLeft />\\r\\n          )}\\r\\n          Back\\r\\n        </Button>\\r\\n      }\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function ProgressMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  function handleNext() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  }\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant='progress'\r\n      steps={6}\r\n      position='static'\r\n      activeStep={activeStep}\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size='' onClick={handleNext} disabled={activeStep === 5}>\r\n          Next\r\n          {theme.direction === 'rtl' ? (\r\n            <KeyboardArrowLeft />\r\n          ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size='' onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? (\r\n            <KeyboardArrowRight />\r\n          ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\nimport HorizontalStepper from './HorizontalStepper';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport HorizontalStepperSource from '!raw-loader!./HorizontalStepper';\r\nimport LinearAlternativeLabel from './LinearAlternativeLabel';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport LinearAlternativeLabelSource from '!raw-loader!./LinearAlternativeLabel';\r\nimport CustomizedStepper from './CustomizedStepper';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport CustomizedStepperSource from '!raw-loader!./CustomizedStepper';\r\nimport NonLinear from './NonLinear';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport NonLinearSource from '!raw-loader!./NonLinear';\r\nimport NonLinearAlternativeLabel from './NonLinearAlternativeLabel';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport NonLinearAlternativeLabelSource from '!raw-loader!./NonLinearAlternativeLabel';\r\nimport NonLinearErrorStepSelect from './NonLinearErrorStepSelect';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport NonLinearErrorStepSelectSource from '!raw-loader!./NonLinearErrorStepSelect';\r\nimport VerticalStepper from './VerticalStepper';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport VerticalStepperSource from '!raw-loader!./VerticalStepper';\r\nimport MobileStepper from './MobileStepper';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MobileStepperSource from '!raw-loader!./MobileStepper';\r\nimport TextWithCarouselEffect from './TextWithCarouselEffect';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport TextWithCarouselEffectSource from '!raw-loader!./TextWithCarouselEffect';\r\nimport MobileStepperDots from './MobileStepperDots';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MobileStepperDotsSource from '!raw-loader!./MobileStepperDots';\r\nimport MobileStepperProgress from './MobileStepperProgress';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MobileStepperProgressSource from '!raw-loader!./MobileStepperProgress';\r\n\r\nconst Steppers = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Steppers'\r\n        description='Steppers convey progress through numbered steps. It provides a wizard-like workflow.'\r\n        refUrl='https://material-ui.com/components/steppers/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Horizontal Stepper Linear'\r\n            component={HorizontalStepper}\r\n            source={HorizontalStepperSource}\r\n            description='The Stepper can be controlled by passing the current step index (zero-based) as the activeStep property. Stepper orientation is set using the orientation property.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Linear - Alternative Label'\r\n            component={LinearAlternativeLabel}\r\n            source={LinearAlternativeLabelSource}\r\n            description='Labels can be placed below the step icon by setting the alternativeLabel prop on the Stepper component.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Customized Stepper'\r\n            component={CustomizedStepper}\r\n            source={CustomizedStepperSource}\r\n            description='Here is an example of customizing the component. You can learn more about this in the overrides documentation page.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Non-linear'\r\n            component={NonLinear}\r\n            source={NonLinearSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Non Linear - Alternative Label'\r\n            component={NonLinearAlternativeLabel}\r\n            source={NonLinearAlternativeLabelSource}\r\n            description='Labels can be placed below the step icon by setting the alternativeLabel prop on the Stepper component.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Non Linear - Error Step Select'\r\n            component={NonLinearErrorStepSelect}\r\n            source={NonLinearErrorStepSelectSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Vertical Stepper'\r\n            component={VerticalStepper}\r\n            source={VerticalStepperSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Mobile Stepper'\r\n            component={MobileStepper}\r\n            source={MobileStepperSource}\r\n            description='This component implements a compact stepper suitable for a mobile device. See mobile steps for its inspiration.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Text with Carousel effect'\r\n            component={TextWithCarouselEffect}\r\n            source={TextWithCarouselEffectSource}\r\n            description='This demo is very similar to the previous, the difference is the usage of react-swipeable-views to make the transition of steps.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Mobile Stepper Dots'\r\n            component={MobileStepperDots}\r\n            source={MobileStepperDotsSource}\r\n            description='Use dots when the number of steps isn’t large'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Mobile Stepper Progress'\r\n            component={MobileStepperProgress}\r\n            source={MobileStepperProgressSource}\r\n            description='Use a progress bar when there are many steps, or if there are steps that need to be inserted during the process (based on responses to earlier steps).'\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Steppers;\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\\r\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\r\\nimport SwipeableViews from 'react-swipeable-views';\\r\\nimport {autoPlay} from 'react-swipeable-views-utils';\\r\\n\\r\\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\\r\\n\\r\\nconst tutorialSteps = [\\r\\n  {\\r\\n    label: 'San Francisco – Oakland Bay Bridge, United States',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\\r\\n  },\\r\\n  {\\r\\n    label: 'Bird',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\\r\\n  },\\r\\n  {\\r\\n    label: 'Bali, Indonesia',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\\r\\n  },\\r\\n  {\\r\\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\\r\\n  },\\r\\n  {\\r\\n    label: 'Goč, Serbia',\\r\\n    imgPath:\\r\\n      'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\\r\\n  },\\r\\n];\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    maxWidth: 400,\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n  header: {\\r\\n    display: 'flex',\\r\\n    alignItems: 'center',\\r\\n    height: 50,\\r\\n    paddingLeft: theme.spacing(4),\\r\\n    backgroundColor: theme.palette.background.default,\\r\\n  },\\r\\n  img: {\\r\\n    height: 255,\\r\\n    display: 'block',\\r\\n    maxWidth: 400,\\r\\n    overflow: 'hidden',\\r\\n    width: '100%',\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction SwipeableTextMobileStepper() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n  const maxSteps = tutorialSteps.length;\\r\\n\\r\\n  function handleNext() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  }\\r\\n\\r\\n  function handleBack() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  }\\r\\n\\r\\n  function handleStepChange(step) {\\r\\n    setActiveStep(step);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Paper square elevation={0} className={classes.header}>\\r\\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\\r\\n      </Paper>\\r\\n      <AutoPlaySwipeableViews\\r\\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\\r\\n        index={activeStep}\\r\\n        onChangeIndex={handleStepChange}\\r\\n        enableMouseEvents>\\r\\n        {tutorialSteps.map((step, index) => (\\r\\n          <div key={step.label}>\\r\\n            {Math.abs(activeStep - index) <= 2 ? (\\r\\n              <img\\r\\n                className={classes.img}\\r\\n                src={step.imgPath}\\r\\n                alt={step.label}\\r\\n              />\\r\\n            ) : null}\\r\\n          </div>\\r\\n        ))}\\r\\n      </AutoPlaySwipeableViews>\\r\\n      <MobileStepper\\r\\n        steps={maxSteps}\\r\\n        position='static'\\r\\n        variant='text'\\r\\n        activeStep={activeStep}\\r\\n        nextButton={\\r\\n          <Button\\r\\n            size='small'\\r\\n            onClick={handleNext}\\r\\n            disabled={activeStep === maxSteps - 1}>\\r\\n            Next\\r\\n            {theme.direction === 'rtl' ? (\\r\\n              <KeyboardArrowLeft />\\r\\n            ) : (\\r\\n              <KeyboardArrowRight />\\r\\n            )}\\r\\n          </Button>\\r\\n        }\\r\\n        backButton={\\r\\n          <Button size='small' onClick={handleBack} disabled={activeStep === 0}>\\r\\n            {theme.direction === 'rtl' ? (\\r\\n              <KeyboardArrowRight />\\r\\n            ) : (\\r\\n              <KeyboardArrowLeft />\\r\\n            )}\\r\\n            Back\\r\\n          </Button>\\r\\n        }\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default SwipeableTextMobileStepper;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\\r\\nimport MobileStepper from '@material-ui/core/MobileStepper';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\\r\\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\\r\\n\\r\\nconst useStyles = makeStyles({\\r\\n  root: {\\r\\n    maxWidth: 400,\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function ProgressMobileStepper() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [activeStep, setActiveStep] = React.useState(0);\\r\\n\\r\\n  function handleNext() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\\r\\n  }\\r\\n\\r\\n  function handleBack() {\\r\\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <MobileStepper\\r\\n      variant='progress'\\r\\n      steps={6}\\r\\n      position='static'\\r\\n      activeStep={activeStep}\\r\\n      className={classes.root}\\r\\n      nextButton={\\r\\n        <Button size='' onClick={handleNext} disabled={activeStep === 5}>\\r\\n          Next\\r\\n          {theme.direction === 'rtl' ? (\\r\\n            <KeyboardArrowLeft />\\r\\n          ) : (\\r\\n            <KeyboardArrowRight />\\r\\n          )}\\r\\n        </Button>\\r\\n      }\\r\\n      backButton={\\r\\n        <Button size='' onClick={handleBack} disabled={activeStep === 0}>\\r\\n          {theme.direction === 'rtl' ? (\\r\\n            <KeyboardArrowRight />\\r\\n          ) : (\\r\\n            <KeyboardArrowLeft />\\r\\n          )}\\r\\n          Back\\r\\n        </Button>\\r\\n      }\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}