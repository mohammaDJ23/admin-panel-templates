{"version":3,"sources":["../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/KeyboardArrowLeft.js","../node_modules/@material-ui/icons/KeyboardArrowRight.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@material-ui/icons/FilterList.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@material-ui/icons/LastPage.js","../node_modules/@material-ui/icons/FirstPage.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","window","document","size","scrollbarSize","recalc","canUseDOM","scrollDiv","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","createDetectElementResize","nonce","hostWindow","_window","attachEvent","self","global","requestFrame","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","id","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","offsetHeight","scrollListener","e","target","className","indexOf","this","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","forEach","call","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","undefined","animationName","i","length","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","innerHTML","addEventListener","__animationListener__","push","removeResizeListener","detachEvent","splice","removeEventListener","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","key","_ref2","_lastMeasuredIndex","index","Error","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","cachedIndices","callback","indices","keys","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","_class","_temp","request","oRequestAnimationFrame","msRequestAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","source","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","props","_this","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","polyfill","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","prototype","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"mappings":"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","file":"static/js/62.faf8a01b.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\n\nexports.default = _default;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\n\nexports.default = _default;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');\n\nexports.default = _default;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"sourceRoot":""}