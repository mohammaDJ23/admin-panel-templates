{"version":3,"sources":["modules/userPages/UserPages/ForgetPassword.js"],"names":["useStyles","makeStyles","theme","logo","height","card","maxWidth","width","textAlign","padding","overflow","boxShadow","breakpoints","up","form","textField","button","fontWeight","Fonts","BOLD","textTransform","MyTextField","props","useField","field","meta","errorText","error","touched","helperText","validationSchema","yup","email","id","required","ForgetPassword","classes","animation","delay","pb","py","xl","display","flex","flexDirection","alignItems","justifyContent","className","mb","xs","mr","src","alt","fontSize","component","validateOnChange","initialValues","onSubmit","data","setSubmitting","resetForm","isSubmitting","lg","name","label","variant","color","disabled","type"],"mappings":"6OAYMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,KAAM,CACJC,OAAQ,IAEVC,MAAI,GACFC,SAAU,IACVC,MAAO,OACPC,UAAW,SACXC,QAAS,GACTC,SAAU,SACVC,UACE,2EAPA,cAQDT,EAAMU,YAAYC,GAAG,MAAQ,CAC5BJ,QAAS,KATT,cAWDP,EAAMU,YAAYC,GAAG,MAAQ,CAC5BJ,QAAS,cAZT,GAeJK,KAAM,CACJN,UAAW,QAEbO,UAAW,CACTR,MAAO,QAETS,OAAQ,CACNT,MAAO,OACPU,WAAYC,IAAMC,KAClBC,cAAe,aACfhB,OAAQ,QAGNiB,EAAc,SAACC,GAAW,IAAD,EACPC,YAASD,GADF,mBACtBE,EADsB,KACfC,EADe,KAEvBC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACE,kBAAC,IAAD,iBACML,EACAE,EAFN,CAGEK,WAAYH,EACZC,QAASD,MAKTI,EAAmBC,IAAW,CAClCC,MAAOD,MAEJC,MAAM,kBAAC,IAAD,CAAcC,GAAG,4BACvBC,SAAS,kBAAC,IAAD,CAAcD,GAAG,gCA+EhBE,UA5EQ,WACrB,IAAMC,EAAUpC,IAChB,OACE,kBAAC,IAAD,CAAYqC,UAAU,uBAAuBC,MAAO,KAClD,kBAAC,IAAD,CACEC,GAAI,EACJC,GAAI,CAACC,GAAI,GACTC,QAAQ,OACRC,KAAM,EACNC,cAAc,SACdC,WAAW,SACXC,eAAe,UACf,kBAAC,IAAD,CAAMC,UAAWX,EAAQ/B,MACvB,kBAAC,IAAD,CACE2C,GAAI,CAACC,GAAI,EAAGR,GAAI,GAChBC,QAAQ,OACRG,WAAW,SACXC,eAAe,UACf,kBAAC,IAAD,CAAKI,GAAI,GACP,yBACEH,UAAWX,EAAQjC,KACnBgD,IAAK,qCACLC,IAAI,WAGR,kBAAC,IAAD,CAAKJ,GAAI,EAAG/B,WAAYC,IAAMC,KAAMkC,SAAU,IAC5C,kBAAC,IAAD,CAAcpB,GAAG,4BAIrB,kBAAC,IAAD,CAAKe,GAAI,CAACC,GAAI,EAAGR,GAAI,IAAKY,SAAU,IAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcpB,GAAG,kCAEnB,kBAAC,IAAD,CAAYqB,UAAU,KACpB,kBAAC,IAAD,CAAcrB,GAAG,mCAIrB,kBAAC,IAAD,CACEsB,kBAAkB,EAClBC,cAAe,CACbxB,MAAO,IAETF,iBAAkBA,EAClB2B,SAAU,SAACC,EAAD,GAAsC,EAA9BC,eAChBC,EAD8C,EAAfA,gBAGhC,gBAAEC,EAAF,EAAEA,aAAF,OACC,kBAAC,IAAD,CAAMd,UAAWX,EAAQtB,MACvB,kBAAC,IAAD,CAAKkC,GAAI,CAACC,GAAI,EAAGa,GAAI,EAAGrB,GAAI,KAC1B,kBAACpB,EAAD,CACE0C,KAAK,QACLC,MAAO,kBAAC,IAAD,CAAc/B,GAAG,wBACxBc,UAAWX,EAAQrB,UACnBkD,QAAQ,cAIZ,kBAAC,IAAD,CACEA,QAAQ,YACRC,MAAM,UACNC,SAAUN,EACVd,UAAWX,EAAQpB,OACnBoD,KAAK,UACL,kBAAC,IAAD,CAAcnC,GAAG","file":"static/js/167.12e50b83.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport {makeStyles, Typography} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    height: 24,\r\n  },\r\n  card: {\r\n    maxWidth: 576,\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    padding: 32,\r\n    overflow: 'hidden',\r\n    boxShadow:\r\n      '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\r\n    [theme.breakpoints.up('lg')]: {\r\n      padding: 48,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: '48px 64px',\r\n    },\r\n  },\r\n  form: {\r\n    textAlign: 'left',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    fontWeight: Fonts.BOLD,\r\n    textTransform: 'capitalize',\r\n    height: 44,\r\n  },\r\n}));\r\nconst MyTextField = (props) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n});\r\n\r\nconst ForgetPassword = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n      <Box\r\n        pb={6}\r\n        py={{xl: 8}}\r\n        display='flex'\r\n        flex={1}\r\n        flexDirection='column'\r\n        alignItems='center'\r\n        justifyContent='center'>\r\n        <Card className={classes.card}>\r\n          <Box\r\n            mb={{xs: 5, xl: 8}}\r\n            display='flex'\r\n            alignItems='center'\r\n            justifyContent='center'>\r\n            <Box mr={2}>\r\n              <img\r\n                className={classes.logo}\r\n                src={'/assets/images/logo-icon-large.png'}\r\n                alt='crema'\r\n              />\r\n            </Box>\r\n            <Box mb={1} fontWeight={Fonts.BOLD} fontSize={20}>\r\n              <IntlMessages id='common.forgetPassword' />\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box mb={{xs: 6, xl: 12}} fontSize={14}>\r\n            <Typography>\r\n              <IntlMessages id='common.forgetPasswordTextOne' />\r\n            </Typography>\r\n            <Typography component='p'>\r\n              <IntlMessages id='common.forgetPasswordTextTwo' />\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              email: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(data, {setSubmitting, resetForm}) => {\r\n              resetForm();\r\n            }}>\r\n            {({isSubmitting}) => (\r\n              <Form className={classes.form}>\r\n                <Box mb={{xs: 5, lg: 8, xl: 12}}>\r\n                  <MyTextField\r\n                    name='email'\r\n                    label={<IntlMessages id='common.emailAddress' />}\r\n                    className={classes.textField}\r\n                    variant='outlined'\r\n                  />\r\n                </Box>\r\n\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  disabled={isSubmitting}\r\n                  className={classes.button}\r\n                  type='submit'>\r\n                  <IntlMessages id='common.sendNewPassword' />\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Card>\r\n      </Box>\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n"],"sourceRoot":""}