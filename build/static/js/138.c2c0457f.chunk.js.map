{"version":3,"sources":["modules/thirdParty/googleMap/Directions/Components/MapDirections.js","modules/thirdParty/googleMap/Directions/index.js","webpack:///./src/modules/thirdParty/googleMap/Directions/Components/MapDirections.js?6693"],"names":["google","window","DirectionsExampleGoogleMap","withGoogleMap","props","defaultZoom","defaultCenter","center","directions","MapDirections","state","origin","maps","LatLng","destination","DirectionsService","route","this","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","console","error","containerElement","className","mapElement","Component","Directions","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","source"],"mappings":"gNAGMA,EAASC,OAAOD,OAEhBE,EAA6BC,yBAAc,SAACC,GAAD,OAC/C,kBAAC,YAAD,CAAWC,YAAa,EAAGC,cAAeF,EAAMG,QAC7CH,EAAMI,YAAc,kBAAC,qBAAD,CAAoBA,WAAYJ,EAAMI,iBAO1CC,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,OAAQ,IAAIX,EAAOY,KAAKC,OAAO,UAAW,UAC1CC,YAAa,IAAId,EAAOY,KAAKC,OAAO,UAAW,UAC/CL,WAAY,MALF,E,gEASO,IAAD,QACQ,IAAIR,EAAOY,KAAKG,mBAExBC,MAChB,CACEL,OAAQM,KAAKP,MAAMC,OACnBG,YAAaG,KAAKP,MAAMI,YACxBI,WAAYlB,EAAOY,KAAKO,WAAWC,UAErC,SAACC,EAAQC,GACHA,IAAWtB,EAAOY,KAAKW,iBAAiBC,GAC1C,EAAKC,SAAS,CACZjB,WAAYa,IAGdK,QAAQC,MAAR,oCAA2CN,S,+BAOjD,OACE,kBAACnB,EAAD,CACE0B,iBACE,yBAAKC,UAAU,kDAEjBC,WAAY,yBAAKD,UAAU,6BAC3BtB,OAAQU,KAAKP,MAAMC,OACnBH,WAAYS,KAAKP,MAAMF,iB,GAvCYuB,aCmB5BC,UAtBI,WACjB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,iCACNC,YAAY,kDACZC,OAAO,mGAGT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEP,MAAM,iBACNQ,UAAWjC,EACXkC,OCzBG","file":"static/js/138.c2c0457f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {DirectionsRenderer, GoogleMap, withGoogleMap} from 'react-google-maps';\r\n\r\nconst google = window.google;\r\n\r\nconst DirectionsExampleGoogleMap = withGoogleMap((props) => (\r\n  <GoogleMap defaultZoom={7} defaultCenter={props.center}>\r\n    {props.directions && <DirectionsRenderer directions={props.directions} />}\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nexport default class MapDirections extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      origin: new google.maps.LatLng(41.85073, -87.65126),\r\n      destination: new google.maps.LatLng(41.85258, -87.65141),\r\n      directions: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const DirectionsService = new google.maps.DirectionsService();\r\n\r\n    DirectionsService.route(\r\n      {\r\n        origin: this.state.origin,\r\n        destination: this.state.destination,\r\n        travelMode: google.maps.TravelMode.DRIVING,\r\n      },\r\n      (result, status) => {\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          this.setState({\r\n            directions: result,\r\n          });\r\n        } else {\r\n          console.error(`error fetching directions ${result}`);\r\n        }\r\n      },\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DirectionsExampleGoogleMap\r\n        containerElement={\r\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\r\n        }\r\n        mapElement={<div className='cr-embed-responsive-item' />}\r\n        center={this.state.origin}\r\n        directions={this.state.directions}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nimport MapDirections from './Components/MapDirections';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapDirectionsSource from '!raw-loader!./Components/MapDirections';\r\n\r\nconst Directions = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Directions Renderer Google Map'\r\n        description='A wrapper around google.maps.DirectionsRenderer'\r\n        refUrl='https://developers.google.com/maps/documentation/javascript/3.exp/reference#DirectionsRenderer'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Directions Map'\r\n            component={MapDirections}\r\n            source={MapDirectionsSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Directions;\r\n","export default \"import React, {Component} from 'react';\\r\\nimport {DirectionsRenderer, GoogleMap, withGoogleMap} from 'react-google-maps';\\r\\n\\r\\nconst google = window.google;\\r\\n\\r\\nconst DirectionsExampleGoogleMap = withGoogleMap((props) => (\\r\\n  <GoogleMap defaultZoom={7} defaultCenter={props.center}>\\r\\n    {props.directions && <DirectionsRenderer directions={props.directions} />}\\r\\n  </GoogleMap>\\r\\n));\\r\\n\\r\\n/*\\r\\n * Add <script src=\\\"https://maps.googleapis.com/maps/api/js\\\"></script> to your HTML to provide google.maps reference\\r\\n */\\r\\nexport default class MapDirections extends Component {\\r\\n  constructor() {\\r\\n    super();\\r\\n    this.state = {\\r\\n      origin: new google.maps.LatLng(41.85073, -87.65126),\\r\\n      destination: new google.maps.LatLng(41.85258, -87.65141),\\r\\n      directions: null,\\r\\n    };\\r\\n  }\\r\\n\\r\\n  componentDidMount() {\\r\\n    const DirectionsService = new google.maps.DirectionsService();\\r\\n\\r\\n    DirectionsService.route(\\r\\n      {\\r\\n        origin: this.state.origin,\\r\\n        destination: this.state.destination,\\r\\n        travelMode: google.maps.TravelMode.DRIVING,\\r\\n      },\\r\\n      (result, status) => {\\r\\n        if (status === google.maps.DirectionsStatus.OK) {\\r\\n          this.setState({\\r\\n            directions: result,\\r\\n          });\\r\\n        } else {\\r\\n          console.error(`error fetching directions ${result}`);\\r\\n        }\\r\\n      },\\r\\n    );\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <DirectionsExampleGoogleMap\\r\\n        containerElement={\\r\\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\\r\\n        }\\r\\n        mapElement={<div className='cr-embed-responsive-item' />}\\r\\n        center={this.state.origin}\\r\\n        directions={this.state.directions}\\r\\n      />\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\";"],"sourceRoot":""}