{"version":3,"sources":["modules/thirdParty/reactPhotoGallery/WithImageViewer/index.js","modules/thirdParty/reactPhotoGallery/BasicRow/index.js","modules/thirdParty/reactPhotoGallery/BasicColumn/index.js","modules/thirdParty/reactPhotoGallery/ReactSortableHoc/Photo.js","modules/thirdParty/reactPhotoGallery/ReactSortableHoc/index.js","modules/thirdParty/reactPhotoGallery/CustomImage/SelectedImage.js","modules/thirdParty/reactPhotoGallery/CustomImage/index.js","modules/thirdParty/reactPhotoGallery/index.js","webpack:///./src/modules/thirdParty/reactPhotoGallery/BasicRow/index.js?796d","webpack:///./src/modules/thirdParty/reactPhotoGallery/BasicColumn/index.js?470b","webpack:///./src/modules/thirdParty/reactPhotoGallery/ReactSortableHoc/index.js?62b4","webpack:///./src/modules/thirdParty/reactPhotoGallery/CustomImage/index.js?7e3b","webpack:///./src/modules/thirdParty/reactPhotoGallery/WithImageViewer/index.js?bc69"],"names":["ReactPhotoGallery","props","useState","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","photos","useSelector","gallery","dispatch","useDispatch","useEffect","onGetGalleryPhotos","openLightBox","useCallback","event","photo","index","classes","makeStyles","theme","galleryPhoto","position","borderRadius","overrides","MuiCard","root","objectFit","maxHeight","useStyles","className","onClick","onClose","currentIndex","views","map","x","srcset","srcSet","caption","title","InfoView","Index","columns","imgWithClick","cursor","Photo","margin","direction","top","left","imgStyle","style","alt","SortablePhoto","SortableElement","item","SortableGallery","SortableContainer","items","renderImage","ReactSortableHoc","setItems","length","onSortEnd","oldIndex","newIndex","arrayMove","axis","Checkmark","selected","zIndex","display","fill","width","height","cx","cy","r","d","transition","selectedImgStyle","transform","cont","backgroundColor","overflow","SelectedImage","isSelected","setIsSelected","sx","sy","e","CustomImage","imageRenderer","key","ComponentHeader","description","refUrl","GridContainer","Grid","xs","lg","ComponentCard","component","BasicRow","source","BasicColumn","WithImageViewer"],"mappings":"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","file":"static/js/152.357282f7.chunk.js","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport Gallery from 'react-photo-gallery';\r\nimport Carousel, {Modal, ModalGateway} from 'react-images';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {onGetGalleryPhotos} from '../../../../redux/actions/Gallery';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nconst ReactPhotoGallery = (props) => {\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const photos = useSelector(({gallery}) => gallery.photos);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(onGetGalleryPhotos());\r\n  }, [dispatch]);\r\n\r\n  const openLightBox = useCallback((event, {photo, index}) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    galleryPhoto: {\r\n      position: 'relative',\r\n\r\n      '& img': {\r\n        borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n        objectFit: 'cover',\r\n        maxHeight: 260,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <div className={classes.galleryPhoto}>\r\n      <Gallery photos={photos} onClick={openLightBox} />\r\n      <ModalGateway>\r\n        {viewerIsOpen ? (\r\n          <Modal onClose={closeLightbox}>\r\n            <Carousel\r\n              currentIndex={currentImage}\r\n              views={photos.map((x) => ({\r\n                ...x,\r\n                srcset: x.srcSet,\r\n                caption: x.title,\r\n              }))}\r\n            />\r\n          </Modal>\r\n        ) : null}\r\n      </ModalGateway>\r\n      <InfoView />\r\n    </div>\r\n  );\r\n};\r\nexport default ReactPhotoGallery;\r\n","import React, {useEffect} from 'react';\r\nimport Gallery from 'react-photo-gallery';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {onGetGalleryPhotos} from '../../../../redux/actions/Gallery';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nconst Index = (props) => {\r\n  const photos = useSelector(({gallery}) => gallery.photos);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(onGetGalleryPhotos());\r\n  }, [dispatch]);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    galleryPhoto: {\r\n      position: 'relative',\r\n\r\n      '& img': {\r\n        borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n        objectFit: 'cover',\r\n        maxHeight: 260,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <div className={classes.galleryPhoto}>\r\n      <Gallery photos={photos} />\r\n      <InfoView />\r\n    </div>\r\n  );\r\n};\r\nexport default Index;\r\n","import React, {useEffect} from 'react';\r\nimport Gallery from 'react-photo-gallery';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {onGetGalleryPhotos} from '../../../../redux/actions/Gallery';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nconst Index = (props) => {\r\n  const photos = useSelector(({gallery}) => gallery.photos);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(onGetGalleryPhotos());\r\n  }, [dispatch]);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    galleryPhoto: {\r\n      position: 'relative',\r\n\r\n      '& img': {\r\n        borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n        objectFit: 'cover',\r\n        maxHeight: 260,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <div className={classes.galleryPhoto}>\r\n      <Gallery photos={photos} /*direction=\"column\"*/ columns={4} />\r\n      <InfoView />\r\n    </div>\r\n  );\r\n};\r\nexport default Index;\r\n","import React from 'react';\r\n\r\nconst imgWithClick = {cursor: 'pointer'};\r\n\r\nconst Photo = ({index, onClick, photo, margin, direction, top, left}) => {\r\n  const imgStyle = {margin: margin};\r\n  if (direction === 'column') {\r\n    imgStyle.position = 'absolute';\r\n    imgStyle.left = left;\r\n    imgStyle.top = top;\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    onClick(event, {photo, index});\r\n  };\r\n\r\n  return (\r\n    <img\r\n      style={onClick ? {...imgStyle, ...imgWithClick} : imgStyle}\r\n      {...photo}\r\n      onClick={onClick ? handleClick : null}\r\n      alt='img'\r\n    />\r\n  );\r\n};\r\n\r\nexport default Photo;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Gallery from 'react-photo-gallery';\r\nimport arrayMove from 'array-move';\r\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nimport Photo from './Photo';\r\nimport {onGetGalleryPhotos} from '../../../../redux/actions/Gallery';\r\nimport InfoView from '@crema/core/InfoView';\r\n\r\n/* popout the browser and maximize to see more rows! -> */\r\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\r\nconst SortableGallery = SortableContainer(({items}) => (\r\n  <Gallery\r\n    photos={items}\r\n    renderImage={(props) => <SortablePhoto {...props} />}\r\n  />\r\n));\r\n\r\nconst ReactSortableHoc = (props) => {\r\n  const dispatch = useDispatch();\r\n  const photos = useSelector(({gallery}) => gallery.photos);\r\n  const [items, setItems] = useState(photos);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetGalleryPhotos());\r\n    if (photos.length > 0) {\r\n      setItems(photos);\r\n    }\r\n  }, [dispatch, photos]);\r\n\r\n  const onSortEnd = ({oldIndex, newIndex}) => {\r\n    setItems(arrayMove(items, oldIndex, newIndex));\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    galleryPhoto: {\r\n      position: 'relative',\r\n\r\n      '& img': {\r\n        borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n        objectFit: 'cover',\r\n        maxHeight: 260,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <div className={classes.galleryPhoto}>\r\n      <SortableGallery items={items} onSortEnd={onSortEnd} axis={'xy'} />\r\n      <InfoView />\r\n    </div>\r\n  );\r\n};\r\nexport default ReactSortableHoc;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nconst Checkmark = ({selected}) => (\r\n  <div\r\n    style={\r\n      selected\r\n        ? {left: '4px', top: '4px', position: 'absolute', zIndex: '1'}\r\n        : {display: 'none'}\r\n    }>\r\n    <svg\r\n      style={{fill: 'white', position: 'absolute'}}\r\n      width='24px'\r\n      height='24px'>\r\n      <circle cx='12.5' cy='12.2' r='8.292' />\r\n    </svg>\r\n    <svg\r\n      style={{fill: '#06befa', position: 'absolute'}}\r\n      width='24px'\r\n      height='24px'>\r\n      <path d='M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z' />\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nconst imgStyle = {\r\n  transition: 'transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s',\r\n};\r\nconst selectedImgStyle = {\r\n  transform: 'translateZ(0px) scale3d(0.9, 0.9, 1)',\r\n  transition: 'transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s',\r\n};\r\nconst cont = {\r\n  backgroundColor: '#eee',\r\n  cursor: 'pointer',\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n};\r\n\r\nconst SelectedImage = ({\r\n  index,\r\n  photo,\r\n  margin,\r\n  direction,\r\n  top,\r\n  left,\r\n  selected,\r\n}) => {\r\n  const [isSelected, setIsSelected] = useState(selected);\r\n  //calculate x,y scale\r\n  const sx = (100 - (30 / photo.width) * 100) / 100;\r\n  const sy = (100 - (30 / photo.height) * 100) / 100;\r\n  selectedImgStyle.transform = `translateZ(0px) scale3d(${sx}, ${sy}, 1)`;\r\n\r\n  if (direction === 'column') {\r\n    cont.position = 'absolute';\r\n    cont.left = left;\r\n    cont.top = top;\r\n  }\r\n\r\n  const handleOnClick = (e) => {\r\n    setIsSelected(!isSelected);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsSelected(selected);\r\n  }, [selected]);\r\n\r\n  return (\r\n    <div\r\n      style={{margin, height: photo.height, width: photo.width, ...cont}}\r\n      className={!isSelected ? 'not-selected' : ''}>\r\n      <Checkmark selected={isSelected ? true : false} />\r\n      <img\r\n        alt={photo.title}\r\n        style={isSelected ? {...imgStyle, ...selectedImgStyle} : {...imgStyle}}\r\n        {...photo}\r\n        onClick={handleOnClick}\r\n      />\r\n      <style>{`.not-selected:hover{outline:2px solid #06befa}`}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedImage;\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport Gallery from 'react-photo-gallery';\r\nimport SelectedImage from './SelectedImage';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetGalleryPhotos} from '../../../../redux/actions/Gallery';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nconst CustomImage = (props) => {\r\n  const photos = useSelector(({gallery}) => gallery.photos);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(onGetGalleryPhotos());\r\n  }, [dispatch]);\r\n\r\n  const imageRenderer = useCallback(\r\n    ({index, left, top, key, photo}) => (\r\n      <SelectedImage\r\n        key={key}\r\n        margin={'2px'}\r\n        index={index}\r\n        photo={photo}\r\n        left={left}\r\n        top={top}\r\n      />\r\n    ),\r\n    [],\r\n  );\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    galleryPhoto: {\r\n      position: 'relative',\r\n\r\n      '& img': {\r\n        borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n        objectFit: 'cover',\r\n        maxHeight: 260,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <div className={classes.galleryPhoto}>\r\n      <Gallery photos={photos} renderImage={imageRenderer} />\r\n      <InfoView />\r\n    </div>\r\n  );\r\n};\r\nexport default CustomImage;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\nimport WithImageViewer from './WithImageViewer';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport WithImageViewerSource from '!raw-loader!./WithImageViewer';\r\n\r\nimport BasicRow from './BasicRow';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport BasicRowSource from '!raw-loader!./BasicRow';\r\nimport BasicColumn from './BasicColumn';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport BasicColumnSource from '!raw-loader!./BasicColumn';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ReactSortableHoc from './ReactSortableHoc';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ReactSortableHocSource from '!raw-loader!./ReactSortableHoc';\r\nimport CustomImage from './CustomImage';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport CustomImageSource from '!raw-loader!./CustomImage';\r\n\r\nconst ReactPhotoGallery = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='React Photo Gallery'\r\n        description='esponsive, accessible, composable, and customizable image gallery component'\r\n        refUrl='http://neptunian.github.io/react-photo-gallery/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Basic Row'\r\n            component={BasicRow}\r\n            source={BasicRowSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Basic Column'\r\n            component={BasicColumn}\r\n            source={BasicColumnSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='React Sortable Hoc'\r\n            component={ReactSortableHoc}\r\n            source={ReactSortableHocSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Selection with custom ImageComponent'\r\n            description=\"You can pass in your own component to the gallery via the ImageComponent prop. This would give you full control of what each individual image looks like in the Gallery. Here is an example of giving your gallery 'Selection' capability.\"\r\n            component={CustomImage}\r\n            source={CustomImageSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='With Image Viewer'\r\n            component={WithImageViewer}\r\n            source={WithImageViewerSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReactPhotoGallery;\r\n","export default \"import React, {useEffect} from 'react';\\r\\nimport Gallery from 'react-photo-gallery';\\r\\nimport {useDispatch, useSelector} from 'react-redux';\\r\\n\\r\\nimport {onGetGalleryPhotos} from '../../../../redux/actions/Gallery';\\r\\nimport InfoView from '@crema/core/InfoView';\\r\\nimport {makeStyles} from '@material-ui/core';\\r\\n\\r\\nconst Index = (props) => {\\r\\n  const photos = useSelector(({gallery}) => gallery.photos);\\r\\n  const dispatch = useDispatch();\\r\\n  useEffect(() => {\\r\\n    dispatch(onGetGalleryPhotos());\\r\\n  }, [dispatch]);\\r\\n\\r\\n  const useStyles = makeStyles((theme) => ({\\r\\n    galleryPhoto: {\\r\\n      position: 'relative',\\r\\n\\r\\n      '& img': {\\r\\n        borderRadius: theme.overrides.MuiCard.root.borderRadius,\\r\\n        objectFit: 'cover',\\r\\n        maxHeight: 260,\\r\\n      },\\r\\n    },\\r\\n  }));\\r\\n\\r\\n  const classes = useStyles(props);\\r\\n\\r\\n  return (\\r\\n    <div className={classes.galleryPhoto}>\\r\\n      <Gallery photos={photos} />\\r\\n      <InfoView />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\nexport default Index;\\r\\n\";","export default \"import React, {useEffect} from 'react';\\r\\nimport Gallery from 'react-photo-gallery';\\r\\nimport {useDispatch, useSelector} from 'react-redux';\\r\\n\\r\\nimport {onGetGalleryPhotos} from '../../../../redux/actions/Gallery';\\r\\nimport InfoView from '@crema/core/InfoView';\\r\\nimport {makeStyles} from '@material-ui/core';\\r\\n\\r\\nconst Index = (props) => {\\r\\n  const photos = useSelector(({gallery}) => gallery.photos);\\r\\n  const dispatch = useDispatch();\\r\\n  useEffect(() => {\\r\\n    dispatch(onGetGalleryPhotos());\\r\\n  }, [dispatch]);\\r\\n\\r\\n  const useStyles = makeStyles((theme) => ({\\r\\n    galleryPhoto: {\\r\\n      position: 'relative',\\r\\n\\r\\n      '& img': {\\r\\n        borderRadius: theme.overrides.MuiCard.root.borderRadius,\\r\\n        objectFit: 'cover',\\r\\n        maxHeight: 260,\\r\\n      },\\r\\n    },\\r\\n  }));\\r\\n\\r\\n  const classes = useStyles(props);\\r\\n\\r\\n  return (\\r\\n    <div className={classes.galleryPhoto}>\\r\\n      <Gallery photos={photos} /*direction=\\\"column\\\"*/ columns={4} />\\r\\n      <InfoView />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\nexport default Index;\\r\\n\";","export default \"import React, {useEffect, useState} from 'react';\\r\\nimport Gallery from 'react-photo-gallery';\\r\\nimport arrayMove from 'array-move';\\r\\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\\r\\nimport {useDispatch, useSelector} from 'react-redux';\\r\\nimport {makeStyles} from '@material-ui/core';\\r\\n\\r\\nimport Photo from './Photo';\\r\\nimport {onGetGalleryPhotos} from '../../../../redux/actions/Gallery';\\r\\nimport InfoView from '@crema/core/InfoView';\\r\\n\\r\\n/* popout the browser and maximize to see more rows! -> */\\r\\nconst SortablePhoto = SortableElement((item) => <Photo {...item} />);\\r\\nconst SortableGallery = SortableContainer(({items}) => (\\r\\n  <Gallery\\r\\n    photos={items}\\r\\n    renderImage={(props) => <SortablePhoto {...props} />}\\r\\n  />\\r\\n));\\r\\n\\r\\nconst ReactSortableHoc = (props) => {\\r\\n  const dispatch = useDispatch();\\r\\n  const photos = useSelector(({gallery}) => gallery.photos);\\r\\n  const [items, setItems] = useState(photos);\\r\\n\\r\\n  useEffect(() => {\\r\\n    dispatch(onGetGalleryPhotos());\\r\\n    if (photos.length > 0) {\\r\\n      setItems(photos);\\r\\n    }\\r\\n  }, [dispatch, photos]);\\r\\n\\r\\n  const onSortEnd = ({oldIndex, newIndex}) => {\\r\\n    setItems(arrayMove(items, oldIndex, newIndex));\\r\\n  };\\r\\n\\r\\n  const useStyles = makeStyles((theme) => ({\\r\\n    galleryPhoto: {\\r\\n      position: 'relative',\\r\\n\\r\\n      '& img': {\\r\\n        borderRadius: theme.overrides.MuiCard.root.borderRadius,\\r\\n        objectFit: 'cover',\\r\\n        maxHeight: 260,\\r\\n      },\\r\\n    },\\r\\n  }));\\r\\n\\r\\n  const classes = useStyles(props);\\r\\n\\r\\n  return (\\r\\n    <div className={classes.galleryPhoto}>\\r\\n      <SortableGallery items={items} onSortEnd={onSortEnd} axis={'xy'} />\\r\\n      <InfoView />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\nexport default ReactSortableHoc;\\r\\n\";","export default \"import React, {useCallback, useEffect} from 'react';\\r\\nimport Gallery from 'react-photo-gallery';\\r\\nimport SelectedImage from './SelectedImage';\\r\\nimport {useDispatch, useSelector} from 'react-redux';\\r\\nimport {onGetGalleryPhotos} from '../../../../redux/actions/Gallery';\\r\\nimport InfoView from '@crema/core/InfoView';\\r\\nimport {makeStyles} from '@material-ui/core';\\r\\n\\r\\nconst CustomImage = (props) => {\\r\\n  const photos = useSelector(({gallery}) => gallery.photos);\\r\\n  const dispatch = useDispatch();\\r\\n  useEffect(() => {\\r\\n    dispatch(onGetGalleryPhotos());\\r\\n  }, [dispatch]);\\r\\n\\r\\n  const imageRenderer = useCallback(\\r\\n    ({index, left, top, key, photo}) => (\\r\\n      <SelectedImage\\r\\n        key={key}\\r\\n        margin={'2px'}\\r\\n        index={index}\\r\\n        photo={photo}\\r\\n        left={left}\\r\\n        top={top}\\r\\n      />\\r\\n    ),\\r\\n    [],\\r\\n  );\\r\\n\\r\\n  const useStyles = makeStyles((theme) => ({\\r\\n    galleryPhoto: {\\r\\n      position: 'relative',\\r\\n\\r\\n      '& img': {\\r\\n        borderRadius: theme.overrides.MuiCard.root.borderRadius,\\r\\n        objectFit: 'cover',\\r\\n        maxHeight: 260,\\r\\n      },\\r\\n    },\\r\\n  }));\\r\\n\\r\\n  const classes = useStyles(props);\\r\\n\\r\\n  return (\\r\\n    <div className={classes.galleryPhoto}>\\r\\n      <Gallery photos={photos} renderImage={imageRenderer} />\\r\\n      <InfoView />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\nexport default CustomImage;\\r\\n\";","export default \"import React, {useCallback, useEffect, useState} from 'react';\\r\\nimport Gallery from 'react-photo-gallery';\\r\\nimport Carousel, {Modal, ModalGateway} from 'react-images';\\r\\nimport {useDispatch, useSelector} from 'react-redux';\\r\\n\\r\\nimport {onGetGalleryPhotos} from '../../../../redux/actions/Gallery';\\r\\nimport InfoView from '@crema/core/InfoView';\\r\\nimport {makeStyles} from '@material-ui/core';\\r\\n\\r\\nconst ReactPhotoGallery = (props) => {\\r\\n  const [currentImage, setCurrentImage] = useState(0);\\r\\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\\r\\n  const photos = useSelector(({gallery}) => gallery.photos);\\r\\n\\r\\n  const dispatch = useDispatch();\\r\\n  useEffect(() => {\\r\\n    dispatch(onGetGalleryPhotos());\\r\\n  }, [dispatch]);\\r\\n\\r\\n  const openLightBox = useCallback((event, {photo, index}) => {\\r\\n    setCurrentImage(index);\\r\\n    setViewerIsOpen(true);\\r\\n  }, []);\\r\\n\\r\\n  const closeLightbox = () => {\\r\\n    setCurrentImage(0);\\r\\n    setViewerIsOpen(false);\\r\\n  };\\r\\n\\r\\n  const useStyles = makeStyles((theme) => ({\\r\\n    galleryPhoto: {\\r\\n      position: 'relative',\\r\\n\\r\\n      '& img': {\\r\\n        borderRadius: theme.overrides.MuiCard.root.borderRadius,\\r\\n        objectFit: 'cover',\\r\\n        maxHeight: 260,\\r\\n      },\\r\\n    },\\r\\n  }));\\r\\n\\r\\n  const classes = useStyles(props);\\r\\n\\r\\n  return (\\r\\n    <div className={classes.galleryPhoto}>\\r\\n      <Gallery photos={photos} onClick={openLightBox} />\\r\\n      <ModalGateway>\\r\\n        {viewerIsOpen ? (\\r\\n          <Modal onClose={closeLightbox}>\\r\\n            <Carousel\\r\\n              currentIndex={currentImage}\\r\\n              views={photos.map((x) => ({\\r\\n                ...x,\\r\\n                srcset: x.srcSet,\\r\\n                caption: x.title,\\r\\n              }))}\\r\\n            />\\r\\n          </Modal>\\r\\n        ) : null}\\r\\n      </ModalGateway>\\r\\n      <InfoView />\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\nexport default ReactPhotoGallery;\\r\\n\";"],"sourceRoot":""}