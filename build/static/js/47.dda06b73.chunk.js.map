{"version":3,"sources":["@crema/core/AppList/ListView.js","@crema/core/AppList/ListFooter.js","@crema/core/AppList/index.js","@crema/core/AppAnimateGroup/index.js","@crema/core/AppsContainer/AppsContent.js","@crema/core/AppsContainer/index.style.js","@crema/core/AppsContainer/AppSidebar.js","@crema/core/AppsContainer/index.js","@crema/core/AppsContainer/AppsHeader.js","@crema/core/AppList/ListEmptyResult.js","@crema/core/AppsPagination/index.js","@crema/core/ConfirmationDialog/index.js","@crema/core/AppsStarredIcon/index.js","@crema/core/AppsContainer/AppsFooter.js","../node_modules/@material-ui/icons/Done.js","@crema/core/AppsSideBarFolderItem/index.js","@crema/core/Skeleton/SidebarListSkeleton.js","../node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ArrowDropDown.js","../node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js","modules/apps/ToDo/AddNewTask/AddTaskForm.js","modules/apps/ToDo/AddNewTask/index.js","modules/apps/ToDo/TaskSideBar/LabelItem.js","modules/apps/ToDo/TaskSideBar/index.js","modules/apps/ToDo/TasksList/TaskContentHeader/SelectTasksDropdown.js","@crema/core/AppsDeleteIcon/index.js","modules/apps/ToDo/TasksList/TaskContentHeader/CheckedTasksActions.js","modules/apps/ToDo/TasksList/TaskContentHeader/index.js","modules/apps/ToDo/TasksList/TaskListItem/Labels.js","modules/apps/ToDo/TasksList/TaskListItem/Priority.js","modules/apps/ToDo/TasksList/TaskListItem/index.js","@crema/core/Skeleton/TodoListSkeleton.js","modules/apps/ToDo/TasksList/index.js","modules/apps/ToDo/TaskDetail/TaskDetailHeader/StatusToggleButton.js","modules/apps/ToDo/TaskDetail/TaskDetailHeader/index.js","modules/apps/ToDo/TaskDetail/TaskDetailBody/ChangeStaff.js","modules/apps/ToDo/TaskDetail/TaskDetailBody/AssignedStaff.js","modules/apps/ToDo/TaskDetail/TaskDetailBody/DatePicker.js","modules/apps/ToDo/TaskDetail/TaskDetailBody/EditButton.js","modules/apps/ToDo/TaskDetail/TaskDetailBody/CommentsList.js","modules/apps/ToDo/TaskDetail/TaskDetailBody/TaskStatus.js","modules/apps/ToDo/TaskDetail/TaskDetailBody/TaskPriority.js","modules/apps/ToDo/TaskDetail/TaskDetailBody/TaskCreatedByInfo.js","modules/apps/ToDo/TaskDetail/TaskDetailBody/index.js","modules/apps/ToDo/TaskDetail/index.js","modules/apps/ToDo/index.js"],"names":["ListView","renderRow","onEndReached","data","animation","delay","duration","containerStyle","border","ListFooterComponent","ListEmptyComponent","rest","ItemSeparatorComponent","theme","useTheme","borderStyle","grey","backgroundColor","palette","background","paper","borderRadius","overflow","style","useBottomScrollListener","AppAnimateGroup","flex","enter","length","map","item","index","React","isValidElement","getEmptyContainer","getFooterContainer","defaultProps","useStyles","makeStyles","listFooterRoot","padding","color","text","secondary","display","justifyContent","listFooterLoaderRoot","width","borderTop","boxSizing","ListFooter","loading","footerText","classes","Box","className","CircularProgress","size","component","ml","clsx","prototype","PropTypes","bool","string","AppList","footerProps","props","enterAnimationDefaults","stagger","visibility","leaveAnimationDefaults","backwards","leave","easing","runOnMount","enterHideStyle","enterShowStyle","memo","useAppsContentStyles","appsContentContainer","flexDirection","height","isDetailView","breakpoints","up","fullView","position","top","left","minWidth","marginLeft","marginRight","maxWidth","overrides","MuiCard","root","fade","AppsContent","children","getHeaderHeight","navStyle","screenSize","NavStyle","HOR_DARK_LAYOUT","HOR_LIGHT_NAV","H_DEFAULT","BIT_BUCKET","appsContainer","footer","appsSidebar","appsMainContent","paddingLeft","menuButton","spacing","menuIcon","appSidebarDrawer","zIndex","scLauncher","primary","main","AppSidebar","isAppDrawerOpen","sidebarContent","dispatch","useDispatch","Hidden","lgUp","Drawer","open","onClose","ev","onToggleAppDrawer","mdDown","Card","AppsContainer","useSelector","common","useContext","AppContext","title","pt","xl","mb","xs","lg","mt","alignItems","IconButton","edge","aria-label","onClick","fontWeight","Fonts","BOLD","fontSize","cardStyle","InfoView","appHeader","borderBottom","checkboxRoot","pointer","cursor","AppsHeader","px","py","emptyListContainer","minHeight","textAlign","flexRow","ListEmptyResult","loader","placeholder","actionTitle","content","Fragment","variant","marginTop","id","description","action","func","AppsPagination","count","page","onPageChange","rowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","rowsPerPageOptions","number","isRequired","ConfirmationDialog","onDeny","onConfirm","dialogTitle","btn","MEDIUM","contentText","useStyle","md","pb","autoFocus","AppsStarredIcon","onChange","icon","checkedIcon","checked","isStarred","event","target","paginationRoot","paddingRight","paddingBottom","paddingTop","borderColor","paddingY","AppsFooter","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","listItem","down","marginBottom","listItemIcon","listItemText","fontFamily","WrappedIcon","AppsSideBarFolderItem","path","button","key","to","NavLink","activeClassName","mr","name","SidebarItem","viewBox","x","y","rx","ry","SidebarListSkeleton","stripDiacritics","normalize","replace","createFilterOptions","config","arguments","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","stringify","_config$trim","trim","options","_ref","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","defaultFilterOptions","useAutocomplete","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$debug","debug","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabelProp","_props$getOptionSelec","getOptionSelected","groupBy","_props$handleHomeEndK","handleHomeEndKeys","idProp","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onHighlightChange","onInputChange","onOpen","openProp","_props$openOnFocus","openOnFocus","_props$selectOnFocus","selectOnFocus","valueProp","useId","ignoreFocus","firstFocus","inputRef","listboxRef","_React$useState","anchorEl","setAnchorEl","_React$useState2","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","_useControlled","useControlled","controlled","_useControlled2","_slicedToArray","setValue","_useControlled3","state","_useControlled4","setInputValue","_React$useState3","focused","setFocused","resetInputValue","useEventCallback","newValue","newInputValue","optionLabel","_useControlled5","_useControlled6","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","focusTag","tagToFocus","current","focus","querySelector","concat","setHighlightedIndex","_ref2","_ref2$reason","reason","removeAttribute","setAttribute","prev","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","_ref3","diff","_ref3$direction","direction","_ref3$reason","nextIndex","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","preventDefault","which","stopPropagation","onKeyDown","handleFocus","handleBlur","document","activeElement","handleInputChange","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","_extends","role","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref4","onDelete","getListboxProps","getOptionProps","_ref5","selected","onMouseOver","onTouchStart","createSvgIcon","DisablePortal","_objectWithoutProperties","CloseIcon","ArrowDropDownIcon","Autocomplete","startAdornment","ChipProps","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$disabled","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$fullWidth","fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","_props$limitTags","limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","Paper","_props$PopperComponen","PopperComponent","PopperComponentProp","Popper","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_props$size","_useAutocomplete","getCustomizedTagProps","params","tag","tagSizeSmall","Chip","label","ListSubheader","groupLabel","groupUl","renderListOption","optionProps","hasClearIcon","hasPopupIcon","InputLabelProps","InputProps","inputRoot","endAdornment","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputProps","inputFocused","popper","popperDisablePortal","clientWidth","noOptions","listbox","option2","index2","withStyles","_option","margin","flexWrap","right","flexGrow","textOverflow","opacity","transform","modal","typography","body1","listStyle","maxHeight","outline","WebkitTapHighlightColor","_defineProperty","hover","disabledOpacity","pointerEvents","userControl","crDatePicker","form","textField","LIGHT","field","avatar","formControl","textArea","divider","red","contrastText","inputVariant","selectBox","btnRoot","MyTextField","useField","meta","errorText","error","touched","TextField","helperText","AddTaskForm","values","setFieldValue","isSubmitting","setTaskLabels","taskLabels","labelList","todoApp","useState","labelWidth","setLabelWidth","priorityList","staffList","inputLabel","useRef","useEffect","messages","useIntl","noValidate","IntlMessages","GridContainer","Grid","sm","FormControl","InputLabel","type","as","Select","staff","MenuItem","image","Avatar","src","toUpperCase","clone","autoOk","format","date","priority","multiline","rows","Divider","bgcolor","Button","object","card","scrollRoot","dialogBox","Transition","forwardRef","Slide","validationSchema","yup","required","AddNewTask","isAddTaskOpen","onCloseAddTask","user","useAuthUser","Dialog","aria-labelledby","TransitionComponent","aria-describedby","validateOnChange","initialValues","assignedTo","moment","onSubmit","setSubmitting","resetForm","newTask","floor","random","isAttachment","sentAt","isRead","folderValue","createdBy","displayName","photoURL","schedule","createdOn","status","comments","onCreateTask","LabelItem","ListItem","alias","ListItemText","textTransform","TaskSideBar","folderList","setAddTaskOpen","AppAnimate","Scrollbar","List","SelectTasksDropdown","onSelectTasks","selectedItems","setSelectedItems","disableUnderline","AppsDeleteIcon","deleteAction","deleteTitle","isDeleteDialogOpen","setDeleteDialogOpen","Tooltip","CheckedTasksActions","checkedTasks","setCheckedTasks","useLocation","pathname","split","isLabelOpen","onOpenLabel","onLabelClose","onSelectLabel","labelType","onUpdateTaskLabels","pl","checkedTask","onDeleteSelectedTasks","deleteIcon","labelIcon","Menu","Boolean","pagination","borderLeft","TaskContentHeader","filterText","onSetFilterText","taskList","totalTasks","indeterminate","taskIds","task","ids","idsToCheck","SearchBar","overlap","xsDown","Labels","labels","placement","Priority","truncate","whiteSpace","listItemRoot","listItemLeft","listItemRight","TaskListItem","onChangeCheckedTasks","match","onChangeStarred","history","useHistory","dense","includes","onViewTaskDetail","smDown","withRouter","TodoItem","cx","cy","r","TodoListSkeleton","list","borderTopWidth","TasksList","setPage","onGetTaskList","taskId","selectedIdList","onUpdateTaskStarredStatus","onAction","smUp","StatusToggleButton","selectedTask","onChangeTaskStatus","onUpdateSelectedTask","statusBtn","doneIcon","TaskDetailHeader","verticalAlign","goBack","ChangeStaff","selectedStaff","handleStaffChange","minWidth100","mr12","AssignedStaff","assignedStaff","avtr50","DatePicker","scheduleDate","setScheduleDate","datePicker","EditButton","taskBtn","any","CommentsList","comment","TaskStatus","statusList","onChangeStatus","TaskPriority","setPriority","onChangePriority","TaskCreatedByInfo","TaskDetailBody","authUser","isEdit","setEdit","setContent","setComment","setStaff","find","TaskDetail","useParams","onGetSelectedTask","console","log","ToDo","onGetToDoLabelList","onGetToDoFolderList","onGetToDoPriorityList","onGetToDoStaffList","onGetToDoStatusList"],"mappings":"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","file":"static/js/47.dda06b73.chunk.js","sourcesContent":["import React from 'react';\nimport {useBottomScrollListener} from 'react-bottom-scroll-listener';\nimport PropTypes from 'prop-types';\nimport {useTheme} from '@material-ui/core';\nimport grey from '@material-ui/core/colors/grey';\nimport AppAnimateGroup from '../AppAnimateGroup';\n\nconst getEmptyContainer = (ListEmptyComponent) => {\n  if (ListEmptyComponent)\n    return React.isValidElement(ListEmptyComponent) ? (\n      ListEmptyComponent\n    ) : (\n      <ListEmptyComponent />\n    );\n  return null;\n};\n\nconst getFooterContainer = (ListFooterComponent) => {\n  if (ListFooterComponent)\n    return React.isValidElement(ListFooterComponent) ? (\n      ListFooterComponent\n    ) : (\n      <ListFooterComponent />\n    );\n  return null;\n};\nconst ListView = ({\n  renderRow,\n  onEndReached,\n  data,\n  animation,\n  delay = 0,\n  duration = 200,\n  containerStyle,\n  border,\n  ListFooterComponent,\n  ListEmptyComponent,\n  ItemSeparatorComponent,\n  ...rest\n}) => {\n  const theme = useTheme();\n  const borderStyle = {\n    border: `1px solid ${grey[300]}`,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 4,\n    overflow: 'hidden',\n  };\n\n  if (!onEndReached) {\n    onEndReached = () => {};\n  }\n\n  let style = containerStyle;\n  if (border) {\n    style = {...style, ...borderStyle};\n  }\n  useBottomScrollListener(onEndReached, 200);\n  return (\n    <AppAnimateGroup\n      style={{...style}}\n      {...rest}\n      flex={1}\n      enter={{delay, duration, animation}}>\n      {data.length > 0\n        ? data.map((item, index) => renderRow(item, index))\n        : getEmptyContainer(ListEmptyComponent)}\n      {getFooterContainer(ListFooterComponent)}\n    </AppAnimateGroup>\n  );\n};\n\nexport default ListView;\nListView.propTypes = {\n  border: PropTypes.bool,\n  animation: PropTypes.string,\n  containerStyle: PropTypes.object,\n  ListEmptyComponent: PropTypes.node,\n  ListFooterComponent: PropTypes.node,\n  data: PropTypes.array.isRequired,\n  onEndReached: PropTypes.func,\n};\nListView.defaultProps = {\n  border: false,\n  animation: 'transition.slideUpIn',\n  data: [],\n  onEndReached: () => {},\n};\n","import React from 'react';\nimport {Box, CircularProgress, makeStyles} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  listFooterRoot: {\n    padding: 10,\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  listFooterLoaderRoot: {\n    width: '100%',\n    display: 'flex',\n    color: theme.palette.text.secondary,\n    justifyContent: 'center',\n    padding: 8,\n    borderTop: `1px solid ${theme.palette.grey[200]}`,\n    boxSizing: 'border-box',\n  },\n}));\n\nconst ListFooter = ({loading, footerText}) => {\n  const classes = useStyles();\n\n  return loading ? (\n    <Box className={classes.listFooterLoaderRoot}>\n      <CircularProgress size={16} />\n      <Box component='span' ml={2}>\n        Loading...\n      </Box>\n    </Box>\n  ) : (\n    <Box className={clsx(classes.listFooterRoot, 'list-footer')}>\n      <Box component='p'>{footerText}</Box>\n    </Box>\n  );\n};\n\nListFooter.prototype = {\n  loading: PropTypes.bool,\n  footerText: PropTypes.string,\n};\n\nListFooter.defaultProps = {\n  loading: false,\n};\n\nexport default ListFooter;\n","import React from 'react';\nimport ListView from './ListView';\nimport PropTypes from 'prop-types';\nimport ListFooter from './ListFooter';\n\nconst AppList = ({footerProps, ...props}) => {\n  return (\n    <ListView\n      {...props}\n      ListFooterComponent={\n        footerProps ? (\n          <ListFooter\n            loading={footerProps.loading}\n            footerText={footerProps.footerText}\n          />\n        ) : null\n      }\n    />\n  );\n};\n\nexport default AppList;\nAppList.propTypes = {\n  border: PropTypes.bool,\n  containerStyle: PropTypes.object,\n  ListEmptyComponent: PropTypes.node,\n  ListFooterComponent: PropTypes.node,\n  data: PropTypes.array.isRequired,\n  onEndReached: PropTypes.func,\n};\nAppList.defaultProps = {\n  border: false,\n  data: [],\n};\n","import PropTypes from 'prop-types';\nimport React, {memo} from 'react';\nimport {VelocityTransitionGroup} from 'velocity-react';\nimport 'velocity-animate/velocity.ui';\n\nconst enterAnimationDefaults = {\n  animation: 'transition.fadeIn',\n  stagger: 50,\n  duration: 200,\n  display: null,\n  visibility: 'visible',\n  delay: 0,\n};\n\nconst leaveAnimationDefaults = {\n  animation: 'transition.slideUpOut',\n  backwards: 150,\n  duration: 200,\n  display: null,\n  visibility: 'visible',\n  delay: 0,\n};\n\nfunction AppAnimateGroup({loading, ...props}) {\n  return (\n    <VelocityTransitionGroup\n      {...props}\n      enter={{...enterAnimationDefaults, ...props.enter}}\n      leave={{...leaveAnimationDefaults, ...props.leave}}\n    />\n  );\n}\n\nAppAnimateGroup.propTypes = {\n  children: PropTypes.any,\n};\n\nAppAnimateGroup.defaultProps = {\n  enter: enterAnimationDefaults,\n  leave: leaveAnimationDefaults,\n  easing: [0.4, 0.0, 0.2, 1],\n  runOnMount: true,\n  enterHideStyle: {\n    visibility: 'visible',\n  },\n  enterShowStyle: {\n    visibility: 'hidden',\n  },\n};\n\nexport default memo(AppAnimateGroup);\n","import React from 'react';\nimport Scrollbar from '../Scrollbar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport {fade} from '@material-ui/core';\n\nexport const useAppsContentStyles = makeStyles((theme) => ({\n  appsContentContainer: (props) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    height: `calc(100% - ${props.isDetailView ? 60 : 115}px)`,\n    [theme.breakpoints.up('sm')]: {\n      height: `calc(100% - ${props.fullView ? 0 : 60}px)`,\n    },\n    [theme.breakpoints.up('xl')]: {\n      height: `calc(100% - ${props.fullView ? 0 : 77}px)`,\n    },\n    '& .scrum-absolute': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n    },\n    '& .scrum-row': {\n      display: 'inline-flex',\n      minWidth: '100%',\n      height: '100%',\n      marginLeft: '-10px',\n      marginRight: '-10px',\n    },\n    '& .scrum-col': {\n      minWidth: '280px',\n      maxWidth: '280px',\n      marginLeft: '10px',\n      marginRight: '10px',\n      borderRadius: theme.overrides.MuiCard.root.borderRadius,\n      backgroundColor: fade(theme.palette.background.paper, 0.45),\n      height: '100% !important',\n      [theme.breakpoints.up('md')]: {\n        minWidth: '354px',\n        maxWidth: '354px',\n      },\n    },\n    '& .scroll-scrum-item': {\n      height: 'auto !important',\n    },\n  }),\n}));\n\nconst AppsContent = (props) => {\n  const classes = useAppsContentStyles(props);\n  return (\n    <Scrollbar className={classes.appsContentContainer} style={props.style}>\n      {props.children}\n    </Scrollbar>\n  );\n};\n\nexport default AppsContent;\n\nAppsContent.defaultProps = {isDetailView: false};\n","import {makeStyles} from '@material-ui/core/styles';\nimport {NavStyle} from '../../../shared/constants/AppEnums';\n\nconst getHeaderHeight = (navStyle, screenSize) => {\n  if (\n    navStyle === NavStyle.HOR_DARK_LAYOUT ||\n    navStyle === NavStyle.HOR_LIGHT_NAV ||\n    navStyle === NavStyle.H_DEFAULT\n  )\n    return screenSize >= 1280 ? 124 + 20 : 70 + 10; // 50 Header Height + 20/10 Padding Bottom\n  if (navStyle === NavStyle.BIT_BUCKET) return 0; // 0 Header Height\n\n  return screenSize >= 600 ? 70 : 60;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  appsContainer: (props) => ({\n    height: `calc(100vh - ${\n      55 + // AppContainerHeader Height\n      20 + //Container Padding\n      getHeaderHeight(props.navStyle, 0) +\n      (props.footer ? 70 : 10) // 50 Header Height + 20 Margin Top\n    }px) !important`,\n    [theme.breakpoints.up('sm')]: {\n      height: `calc(100vh - ${\n        55 + // AppContainerHeader Height\n        20 + //Container Padding\n        getHeaderHeight(props.navStyle, 600) +\n        (props.footer ? 70 : 10)\n      }px) !important`,\n    },\n    [theme.breakpoints.up('md')]: {\n      height: `calc(100vh - ${\n        55 + // AppContainerHeader Height\n        30 + //Container Padding\n        getHeaderHeight(props.navStyle, 960) +\n        (props.footer ? 80 : 10) // 50 Header Height + 30 Margin Top\n      }px) !important`,\n    },\n    [theme.breakpoints.up('lg')]: {\n      height: `calc(100vh - ${\n        43 + // AppContainerHeader Height\n        30 + //Container Padding\n        getHeaderHeight(props.navStyle, 1280) +\n        (props.footer ? 80 : 10)\n      }px) !important`,\n    },\n    [theme.breakpoints.up('xl')]: {\n      height: `calc(100vh - ${\n        64 + // AppContainerHeader Height\n        30 + //Container Padding\n        getHeaderHeight(props.navStyle, 1920) +\n        (props.footer ? 86 : 10) // 56 Header Height + 30 Margin Top\n      }px) !important`,\n    },\n    display: 'flex',\n  }),\n  appsSidebar: {\n    height: '100%',\n    [theme.breakpoints.up('lg')]: {\n      width: '17rem',\n    },\n    [theme.breakpoints.up('xl')]: {\n      width: '20rem',\n    },\n  },\n  appsMainContent: (props) => ({\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.up('lg')]: {\n      width: `calc(100% - ${props.fullView ? 0 : 17}rem)`,\n      paddingLeft: props.fullView ? 0 : 40,\n    },\n    [theme.breakpoints.up('xl')]: {\n      width: `calc(100% - ${props.fullView ? 0 : 20}rem)`,\n    },\n  }),\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  menuIcon: {\n    width: 35,\n    height: 35,\n  },\n  appSidebarDrawer: {\n    width: '19rem',\n    '& .listItem': {\n      zIndex: 1305,\n    },\n  },\n  scLauncher: {\n    '& .sc-header, & .sc-message--content.sent .sc-message--text, & .sc-header--close-button:hover': {\n      backgroundColor: `${theme.palette.primary.main} !important`,\n    },\n  },\n}));\nexport default useStyles;\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport Drawer from '@material-ui/core/Drawer';\nimport {onToggleAppDrawer} from '../../../redux/actions';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport {Box} from '@material-ui/core';\nimport useStyles from './index.style';\nimport {useDispatch} from 'react-redux';\n\nconst AppSidebar = (props) => {\n  const {isAppDrawerOpen, footer, navStyle, fullView, sidebarContent} = props;\n  const dispatch = useDispatch();\n  const classes = useStyles({footer, navStyle, fullView});\n  return (\n    <Box className={classes.appsSidebar}>\n      <Hidden lgUp>\n        <Drawer\n          open={isAppDrawerOpen}\n          onClose={(ev) => dispatch(onToggleAppDrawer())}\n          classes={{\n            paper: clsx(classes.appSidebarDrawer),\n          }}\n          style={{position: 'absolute'}}>\n          {sidebarContent}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Card style={{height: '100%'}}>{sidebarContent}</Card>\n      </Hidden>\n    </Box>\n  );\n};\n\nexport default AppSidebar;\n","import React, {useContext} from 'react';\nimport {onToggleAppDrawer} from '../../../redux/actions';\nimport {useDispatch, useSelector} from 'react-redux';\nimport InfoView from '@crema/core/InfoView';\nimport {Box} from '@material-ui/core';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PropTypes from 'prop-types';\nimport {Fonts} from '../../../shared/constants/AppEnums';\nimport Card from '@material-ui/core/Card';\nimport useStyles from './index.style';\nimport {AppContext} from '../../index';\nimport AppSidebar from './AppSidebar';\n\nconst AppsContainer = (props) => {\n  const dispatch = useDispatch();\n  const {isAppDrawerOpen} = useSelector(({common}) => common);\n  const {footer, navStyle} = useContext(AppContext);\n  const {title, sidebarContent, fullView, children} = props;\n  const classes = useStyles({footer, navStyle, fullView});\n\n  return (\n    <Box pt={{xl: 4}} flex={1} display='flex' flexDirection='column'>\n      <Box\n        mb={{xs: fullView ? 4 : 2, lg: fullView ? 5 : 4}}\n        mt={{xs: fullView ? 0 : -3, lg: 0}}\n        display='flex'\n        alignItems='center'>\n        {fullView ? null : (\n          <Hidden lgUp>\n            <IconButton\n              edge='start'\n              className={classes.menuButton}\n              color='inherit'\n              aria-label='open drawer'\n              onClick={() => dispatch(onToggleAppDrawer())}>\n              <MenuIcon className={classes.menuIcon} />\n            </IconButton>\n          </Hidden>\n        )}\n        <Box\n          component='h2'\n          color='text.primary'\n          fontWeight={Fonts.BOLD}\n          fontSize={16}>\n          {title}\n        </Box>\n      </Box>\n\n      <Box className={classes.appsContainer}>\n        {sidebarContent ? (\n          <AppSidebar\n            isAppDrawerOpen={isAppDrawerOpen}\n            footer={footer}\n            fullView={fullView}\n            navStyle={navStyle}\n            sidebarContent={sidebarContent}\n          />\n        ) : null}\n\n        <Box className={classes.appsMainContent}>\n          <Card\n            style={{\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              ...props.cardStyle,\n            }}>\n            {children}\n          </Card>\n          <InfoView />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AppsContainer;\n\nAppsContainer.defaultProps = {\n  title: '',\n};\n\nAppsContainer.prototype = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport {Box} from '@material-ui/core';\nimport {grey} from '@material-ui/core/colors';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  appHeader: {\n    height: 60,\n    display: 'flex',\n    alignItems: 'center',\n    borderBottom: `1px solid ${grey[300]}`,\n    [theme.breakpoints.up('xl')]: {\n      height: 77,\n    },\n  },\n  checkboxRoot: {\n    marginRight: 8,\n  },\n  pointer: {\n    cursor: 'pointer',\n  },\n}));\n\nconst AppsHeader = ({children}) => {\n  const classes = useStyles();\n  return (\n    <Box px={6} py={{xs: 1, xl: 3}} className={classes.appHeader}>\n      {children}\n    </Box>\n  );\n};\n\nexport default AppsHeader;\nAppsHeader.defaultProps = {};\n","import React from 'react';\nimport {Box, Button, CircularProgress} from '@material-ui/core';\nimport clsx from 'clsx';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport IntlMessages from '../../utility/IntlMessages';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  emptyListContainer: {\n    flexDirection: 'column',\n    minHeight: 450,\n    height: '100%',\n    flex: 1,\n    display: 'flex',\n    padding: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: theme.palette.grey[500],\n    borderRadius: 4,\n    textAlign: 'center',\n  },\n  flexRow: {\n    flexDirection: 'row',\n  },\n}));\n\nconst ListEmptyResult = ({\n  loader,\n  placeholder,\n  loading,\n  title,\n  actionTitle,\n  content,\n  onClick,\n}) => {\n  const classes = useStyles();\n  if (loading || loader) {\n    return (\n      <React.Fragment>\n        {placeholder ? (\n          placeholder\n        ) : (\n          <Box className={clsx(classes.emptyListContainer, classes.flexRow)}>\n            <CircularProgress size={16} />\n            <Box component='span' ml={2}>\n              Loading...\n            </Box>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <Box className={classes.emptyListContainer}>\n        {title ? (\n          <Box component='h4' fontSize={18} color='text.secondary' mb={3}>\n            {title}\n          </Box>\n        ) : null}\n        <Box fontSize={16} component='p' color='text.hint'>\n          {content}\n        </Box>\n\n        {actionTitle ? (\n          <Button\n            color='primary'\n            variant='contained'\n            style={{marginTop: 30, height: 45, minWidth: 150}}\n            onClick={onClick}>\n            {actionTitle}\n          </Button>\n        ) : null}\n      </Box>\n    );\n  }\n};\n\nexport default ListEmptyResult;\n\nListEmptyResult.defaultProps = {\n  title: <IntlMessages id='common.noRecordFound' />,\n  description: '',\n};\n\nListEmptyResult.prototype = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  actionTitle: PropTypes.string,\n  action: PropTypes.func,\n};\n","import React from 'react';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport PropTypes from 'prop-types';\n\nconst AppsPagination = ({\n  count,\n  page,\n  onPageChange,\n  rowsPerPage,\n  className,\n}) => {\n  return (\n    <TablePagination\n      component='div'\n      count={count}\n      rowsPerPage={rowsPerPage}\n      className={className}\n      page={page}\n      backIconButtonProps={{'aria-label': 'Previous Page'}}\n      nextIconButtonProps={{'aria-label': 'Next Page'}}\n      onChangePage={onPageChange}\n      rowsPerPageOptions={[]}\n    />\n  );\n};\n\nexport default AppsPagination;\n\nAppsPagination.defaultProps = {\n  className: '',\n  rowsPerPage: 15,\n};\n\nAppsPagination.prototype = {\n  count: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Button from '@material-ui/core/Button';\nimport IntlMessages from '../../utility/IntlMessages';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {grey} from '@material-ui/core/colors';\nimport {Fonts} from '../../../shared/constants/AppEnums';\n\nconst ConfirmationDialog = ({open, onDeny, onConfirm, title, dialogTitle}) => {\n  const useStyle = makeStyles({\n    btn: {\n      marginLeft: 8,\n      fontWeight: Fonts.MEDIUM,\n    },\n    contentText: {\n      color: grey[600],\n    },\n  });\n  const classes = useStyle();\n\n  return (\n    <Dialog open={open} onClose={() => onDeny(false)}>\n      <Box px={{xs: 5, md: 7}} pt={{xs: 4, md: 6}} pb={{xs: 2, md: 4}}>\n        <Box\n          mb={3}\n          component='h4'\n          fontWeight={Fonts.MEDIUM}\n          className='font-bold'\n          id='alert-dialog-title'>\n          {dialogTitle}\n        </Box>\n        <Box>\n          <DialogContentText\n            className={classes.contentText}\n            id='alert-dialog-description'>\n            {title}\n          </DialogContentText>\n        </Box>\n        <Box pt={2}>\n          <Button\n            className={classes.btn}\n            onClick={() => onDeny(false)}\n            color='primary'>\n            <IntlMessages id='common.no' />\n          </Button>\n          <Button\n            className={classes.btn}\n            onClick={onConfirm}\n            color='primary'\n            autoFocus>\n            <IntlMessages id='common.yes' />\n          </Button>\n        </Box>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default ConfirmationDialog;\n\nConfirmationDialog.propTypes = {\n  dialogTitle: PropTypes.bool.isRequired,\n  open: PropTypes.bool.isRequired,\n  onDeny: PropTypes.func.isRequired,\n  title: PropTypes.node.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport {Checkbox} from '@material-ui/core';\n\nconst AppsStarredIcon = ({item, onChange}) => {\n  return (\n    <Checkbox\n      icon={<StarBorderIcon />}\n      checkedIcon={<StarIcon />}\n      checked={item.isStarred}\n      onChange={(event) => onChange(event.target.checked, item)}\n    />\n  );\n};\n\nexport default AppsStarredIcon;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {grey} from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  paginationRoot: {\n    paddingLeft: 24,\n    paddingRight: 24,\n    paddingBottom: 8,\n    paddingTop: 8,\n    borderTop: '1px solid',\n    borderColor: grey[300],\n  },\n  paddingY: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n}));\n\nconst AppsFooter = (props) => {\n  const {children, ...rest} = props;\n  const classes = useStyles(props);\n  return (\n    <Box className={classes.paginationRoot} {...rest}>\n      {children}\n    </Box>\n  );\n};\n\nexport default AppsFooter;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","import React from 'react';\nimport {NavLink} from '../../index';\nimport Box from '@material-ui/core/Box';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Fonts} from '../../../shared/constants/AppEnums';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyle = makeStyles((theme) => ({\n  listItem: {\n    paddingLeft: '10px',\n    paddingRight: '0',\n    paddingTop: '5px',\n    paddingBottom: '5px',\n\n    '& .MuiListItemText-root': {\n      [theme.breakpoints.down('lg')]: {\n        marginTop: 0,\n        marginBottom: 0,\n      },\n    },\n\n    '& .MuiTypography-body1': {\n      fontSize: 15,\n      fontWeight: Fonts.MEDIUM,\n    },\n\n    '& svg': {\n      fontSize: '18px',\n    },\n\n    '&:hover,&:focus,&.active': {\n      backgroundColor: 'transparent',\n      color: theme.palette.primary.main,\n\n      '& svg': {\n        color: theme.palette.primary.main,\n      },\n\n      '& .MuiTypography-root': {\n        color: theme.palette.primary.main,\n      },\n    },\n\n    '&.active': {\n      color: theme.palette.primary.main,\n\n      '& svg, & .MuiTypography-root': {\n        color: theme.palette.primary.main,\n      },\n    },\n  },\n  listItemIcon: {\n    minWidth: 10,\n    paddingTop: 4,\n  },\n  listItemText: {\n    fontFamily: 'inherit',\n  },\n}));\n\nconst WrappedIcon = (props) => <Icon {...props} />;\n\nconst AppsSideBarFolderItem = ({item, path}) => {\n  const classes = useStyle();\n  return (\n    <ListItem\n      button\n      key={item.id}\n      to={path}\n      component={NavLink}\n      className={classes.listItem}\n      activeClassName='active'>\n      <Box component='span' mr={{xs: 4, xl: 5}}>\n        <ListItemIcon className={classes.listItemIcon}>\n          <WrappedIcon>{item.icon}</WrappedIcon>\n        </ListItemIcon>\n      </Box>\n      <ListItemText primary={item.name} className={classes.listItemText} />\n    </ListItem>\n  );\n};\n\nexport default AppsSideBarFolderItem;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst SidebarItem = () => (\n  <ContentLoader viewBox='0 0 200 45'>\n    <rect x='0' y='10' rx='0' ry='0' width='20' height='20' />\n    <rect x='35' y='12' rx='2' ry='2' width='100' height='15' />\n  </ContentLoader>\n);\nconst SidebarListSkeleton = () => {\n  return (\n    <React.Fragment>\n      <SidebarItem />\n      <SidebarItem />\n      <SidebarItem />\n      <SidebarItem />\n      <SidebarItem />\n      <SidebarItem />\n    </React.Fragment>\n  );\n};\n\nexport default SidebarListSkeleton;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabelProp = _props$getOptionLabel === void 0 ? function (option) {\n    return option;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n  var id = useId(idProp);\n  var getOptionLabel = getOptionLabelProp;\n\n  if (process.env.NODE_ENV !== 'production') {\n    getOptionLabel = function getOptionLabel(option) {\n      var optionLabel = getOptionLabelProp(option);\n\n      if (typeof optionLabel !== 'string') {\n        var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(_typeof(optionLabel), \" (\").concat(optionLabel, \")\");\n        console.error(\"Material-UI: The `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(option), \".\"));\n      }\n\n      return optionLabel;\n    };\n  }\n\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState = React.useState(null),\n      anchorEl = _React$useState[0],\n      setAnchorEl = _React$useState[1];\n\n  var _React$useState2 = React.useState(-1),\n      focusedTag = _React$useState2[0],\n      setFocusedTag = _React$useState2[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      inputValue = _useControlled4[0],\n      setInputValue = _useControlled4[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _useControlled5 = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  }),\n      _useControlled6 = _slicedToArray(_useControlled5, 2),\n      open = _useControlled6[0],\n      setOpenState = _useControlled6[1];\n\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return getOptionSelected(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"Material-UI: The value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var setHighlightedIndex = useEventCallback(function (_ref2) {\n    var event = _ref2.event,\n        index = _ref2.index,\n        _ref2$reason = _ref2.reason,\n        reason = _ref2$reason === void 0 ? 'auto' : _ref2$reason;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  var changeHighlightedIndex = useEventCallback(function (_ref3) {\n    var event = _ref3.event,\n        diff = _ref3.diff,\n        _ref3$direction = _ref3.direction,\n        direction = _ref3$direction === void 0 ? 'next' : _ref3$direction,\n        _ref3$reason = _ref3.reason,\n        reason = _ref3$reason === void 0 ? 'auto' : _ref3$reason;\n\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason: reason,\n      event: event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  var syncHighlightedIndex = React.useCallback(function () {\n    if (!popupOpen) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      var currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, function (val) {\n        return getOptionSelected(currentOption, val);\n      }) !== -1) {\n        return;\n      }\n\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return getOptionSelected(optionItem, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  filteredOptions.length === 0, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n  React.useEffect(function () {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValue(newValue);\n  };\n\n  var isTouch = React.useRef(false);\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"Material-UI: The `getOptionSelected` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            var option = filteredOptions[highlightedIndexRef.current];\n            var disabled = getOptionDisabled ? getOptionDisabled(option) : false; // We don't want to validate the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            var newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    setHighlightedIndex({\n      event: event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = value.slice();\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'remove-option', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    var indexBy = new Map();\n    var warn = false;\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(\"Material-UI: The options provided combined with the `groupBy` method of \".concat(componentName, \" returns duplicated headers.\"), 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index: index,\n          group: group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref4) {\n      var index = _ref4.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref5) {\n      var index = _ref5.index,\n          option = _ref5.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport var styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      },\n\n      /* Avoid double tap issue on iOS */\n      '@media (pointer: fine)': {\n        '&:hover $clearIndicatorDirty': {\n          visibility: 'visible'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: _extends({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0'\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0',\n      maxHeight: '40vh',\n      overflow: 'auto'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, _defineProperty(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), _defineProperty(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), _defineProperty(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0,\n      '& $option': {\n        paddingLeft: 24\n      }\n    }\n  };\n};\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"open\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(ArrowDropDownIcon, null);\n\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: params.key\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(\"li\", _extends({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused, fullWidth && classes.fullWidth, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the input's text will be cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: PropTypes.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected, considering the current value.\n   * Uses strict equality by default.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   */\n  limitTags: PropTypes.number,\n\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the autocomplete.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);","import React, {useEffect} from 'react';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {Field, Form, useField} from 'formik';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {KeyboardDatePicker} from '@material-ui/pickers';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useSelector} from 'react-redux';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport {red} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport GridContainer from '@crema/core/GridContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  userControl: {\r\n    width: '100%',\r\n\r\n    '& .MuiOutlinedInput-input': {\r\n      paddingTop: 8,\r\n      paddingBottom: 6,\r\n      minHeight: 42,\r\n    },\r\n  },\r\n  crDatePicker: {\r\n    border: 'solid 1px #ccc',\r\n    borderRadius: 4,\r\n    padding: '3px 6px',\r\n\r\n    '& .MuiInputLabel-shrink': {\r\n      padding: '4px 0 0 6px',\r\n    },\r\n  },\r\n  form: {\r\n    width: '100%',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    fontWeight: Fonts.LIGHT,\r\n    marginBottom: 20,\r\n    marginTop: 16,\r\n  },\r\n  field: {\r\n    width: '100%',\r\n  },\r\n  avatar: {\r\n    marginRight: 8,\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n  textArea: {\r\n    width: '100%',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  divider: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginTop: 32,\r\n      marginBottom: 32,\r\n    },\r\n  },\r\n  button: {\r\n    backgroundColor: red[600],\r\n    fontWeight: Fonts.LIGHT,\r\n    color: theme.palette.primary.contrastText,\r\n    padding: '12px 16px',\r\n    width: 192,\r\n    '&:hover, &:focus': {\r\n      backgroundColor: red[700],\r\n      color: theme.palette.secondary.contrastText,\r\n    },\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n    inputVariant: 'outlined',\r\n  },\r\n  selectBox: {\r\n    cursor: 'pointer',\r\n    '& .MuiOutlinedInput-input': {\r\n      paddingBottom: 10,\r\n      paddingTop: 10,\r\n    },\r\n    '& .MuiSelect-select': {\r\n      paddingLeft: 10,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  btnRoot: {\r\n    paddingLeft: 32,\r\n    paddingRight: 32,\r\n  },\r\n}));\r\n\r\nconst MyTextField = (props) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst AddTaskForm = (props) => {\r\n  const {\r\n    values,\r\n    setFieldValue,\r\n    isSubmitting,\r\n    setTaskLabels,\r\n    taskLabels,\r\n  } = props;\r\n\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n\r\n  const priorityList = useSelector(({todoApp}) => todoApp.priorityList);\r\n\r\n  const staffList = useSelector(({todoApp}) => todoApp.staffList);\r\n\r\n  const inputLabel = React.useRef(null);\r\n\r\n  useEffect(() => {\r\n    setLabelWidth(50);\r\n  }, []);\r\n\r\n  const classes = useStyles(props);\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Form className={classes.form} noValidate autoComplete='off'>\r\n      <Box py={5} px={{xs: 5, lg: 8, xl: 10}}>\r\n        <MyTextField\r\n          className={classes.textField}\r\n          variant='outlined'\r\n          label={<IntlMessages id='todo.taskTitle' />}\r\n          name='title'\r\n        />\r\n\r\n        <Box mb={5}>\r\n          <GridContainer>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <FormControl className={classes.userControl} variant='outlined'>\r\n                <InputLabel\r\n                  ref={inputLabel}\r\n                  id='demo-simple-select-outlined-label'>\r\n                  <IntlMessages id='common.staff' />\r\n                </InputLabel>\r\n                <Field\r\n                  name='assignedTo'\r\n                  labelWidth={labelWidth}\r\n                  className={classes.field}\r\n                  type='select'\r\n                  as={Select}>\r\n                  {staffList.map((staff) => {\r\n                    return (\r\n                      <MenuItem\r\n                        value={staff.id}\r\n                        key={staff.id}\r\n                        className={classes.pointer}>\r\n                        <Box display='flex' alignItems='center'>\r\n                          {staff.image ? (\r\n                            <Avatar\r\n                              className={classes.avatar}\r\n                              src={staff.image}\r\n                            />\r\n                          ) : (\r\n                            <Avatar className={classes.avatar}>\r\n                              {staff.name.toUpperCase()}\r\n                            </Avatar>\r\n                          )}\r\n                          <span>{staff.name}</span>\r\n                        </Box>\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Field>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Box width={1} clone>\r\n                <KeyboardDatePicker\r\n                  autoOk\r\n                  format='YYYY/MM/DD'\r\n                  variant='inline'\r\n                  inputVariant='outlined'\r\n                  label={<IntlMessages id='common.selectDate' />}\r\n                  name='date'\r\n                  value={values.date}\r\n                  onChange={(value) => setFieldValue('date', value)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <FormControl className={classes.formControl} variant='outlined'>\r\n                <InputLabel\r\n                  ref={inputLabel}\r\n                  id='demo-simple-select-outlined-label'>\r\n                  <IntlMessages id='common.priority' />\r\n                </InputLabel>\r\n                <Field\r\n                  name='priority'\r\n                  type='select'\r\n                  labelWidth={labelWidth}\r\n                  as={Select}>\r\n                  {priorityList.map((priority) => {\r\n                    return (\r\n                      <MenuItem\r\n                        value={priority.type}\r\n                        key={priority.id}\r\n                        className={classes.pointer}>\r\n                        {priority.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Field>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Autocomplete\r\n                multiple\r\n                id='tags-outlined'\r\n                options={labelList}\r\n                getOptionLabel={(option) => option.name}\r\n                value={taskLabels}\r\n                onChange={(event, value) => setTaskLabels(value)}\r\n                filterSelectedOptions\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant='outlined'\r\n                    label={<IntlMessages id='common.label' />}\r\n                    fullWidth\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </Box>\r\n\r\n        <Box mb={5}>\r\n          <MyTextField\r\n            name='content'\r\n            multiline\r\n            className={classes.textArea}\r\n            rows='6'\r\n            variant='outlined'\r\n            placeholder={messages['common.description']}\r\n          />\r\n        </Box>\r\n\r\n        <Divider className={classes.divider} />\r\n      </Box>\r\n      <Box px={8} py={4} bgcolor='grey.300'>\r\n        <Button\r\n          className={classes.btnRoot}\r\n          color='secondary'\r\n          variant='contained'\r\n          disabled={isSubmitting}\r\n          type='submit'>\r\n          <IntlMessages id='common.save' />\r\n        </Button>\r\n      </Box>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n\r\nAddTaskForm.defaultProps = {\r\n  isSubmitting: false,\r\n};\r\n\r\nAddTaskForm.prototype = {\r\n  values: PropTypes.object.isRequired,\r\n  taskLabels: PropTypes.array.isRequired,\r\n  setTaskLabels: PropTypes.func,\r\n  setFieldValue: PropTypes.func,\r\n  isSubmitting: PropTypes.bool,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {onCreateTask} from '../../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport moment from 'moment';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {Scrollbar} from '../../../../@crema';\r\nimport {useAuthUser} from '../../../../@crema/utility/AppHooks';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: 'auto',\r\n    padding: '20px 32px',\r\n  },\r\n  scrollRoot: {\r\n    paddingTop: 4,\r\n    height: 520,\r\n  },\r\n  dialogBox: {\r\n    position: 'relative',\r\n    '& .MuiDialog-paperWidthSm': {\r\n      maxWidth: 900,\r\n      width: '100%',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='down' ref={ref} {...props} />;\r\n});\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup.string().required(<IntlMessages id='validation.titleRequired' />),\r\n});\r\n\r\nconst AddNewTask = (props) => {\r\n  const {isAddTaskOpen, onCloseAddTask} = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useAuthUser();\r\n\r\n  const [taskLabels, setTaskLabels] = useState([]);\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Dialog\r\n      open={isAddTaskOpen}\r\n      onClose={() => onCloseAddTask()}\r\n      aria-labelledby='simple-modal-title'\r\n      TransitionComponent={Transition}\r\n      aria-describedby='simple-modal-description'\r\n      className={classes.dialogBox}>\r\n      <Box component='h5' pt={6} px={8} mb={0} fontWeight={Fonts.LIGHT}>\r\n        <IntlMessages id='todo.addNewTask' />\r\n      </Box>\r\n\r\n      <Scrollbar className={classes.scrollRoot}>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            title: '',\r\n            assignedTo: '',\r\n            label: [],\r\n            priority: 3,\r\n            date: moment().format('MM/DD/YYYY'),\r\n            content: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setSubmitting, resetForm}) => {\r\n            setSubmitting(true);\r\n            const newTask = {\r\n              id: Math.floor(Math.random() * 1000000),\r\n              isStarred: false,\r\n              isAttachment: false,\r\n              sentAt: '10.30am',\r\n              isRead: true,\r\n              folderValue: 120,\r\n              createdBy: {\r\n                name: user.displayName ? user.displayName : 'User',\r\n                image: user.photoURL,\r\n              },\r\n              schedule: moment(data.date).format('lll'),\r\n              image: '/assets/images/dummy2.jpg',\r\n              createdOn: moment().format('ll'),\r\n              status: 1,\r\n              comments: [],\r\n              ...data,\r\n              label: taskLabels,\r\n            };\r\n            dispatch(onCreateTask(newTask));\r\n            onCloseAddTask();\r\n            resetForm();\r\n            setSubmitting(false);\r\n          }}>\r\n          {({isSubmitting, values, setFieldValue}) => (\r\n            <AddTaskForm\r\n              isSubmitting={isSubmitting}\r\n              values={values}\r\n              setFieldValue={setFieldValue}\r\n              setTaskLabels={setTaskLabels}\r\n              taskLabels={taskLabels}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Scrollbar>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddNewTask;\r\n\r\nAddNewTask.prototype = {\r\n  isAddTaskOpen: PropTypes.bool.isRequired,\r\n  onCloseAddTask: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from '../../../../@crema';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItemText: {\r\n    '& .MuiTypography-body1': {\r\n      fontSize: 15,\r\n      fontWeight: Fonts.MEDIUM,\r\n    },\r\n  },\r\n}));\r\n\r\nconst LabelItem = ({label}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ListItem\r\n      button\r\n      key={label.id}\r\n      to={`/apps/todo/label/${label.alias}`}\r\n      component={NavLink}\r\n      activeClassName='active'>\r\n      <Box\r\n        component='span'\r\n        width={12}\r\n        height={12}\r\n        mr={{xs: 4, xl: 5}}\r\n        borderRadius='50%'\r\n        bgcolor={`${label.color}`}\r\n      />\r\n\r\n      <ListItemText className={classes.listItemText} primary={label.name} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default LabelItem;\r\n\r\nLabelItem.prototype = {\r\n  label: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport {useSelector} from 'react-redux';\r\nimport AddNewTask from '../AddNewTask';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Scrollbar from '../../../../@crema/core/Scrollbar';\r\nimport AppsSideBarFolderItem from '../../../../@crema/core/AppsSideBarFolderItem';\r\nimport LabelItem from './LabelItem';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppList from '../../../../@crema/core/AppList';\r\nimport AppAnimate from '../../../../@crema/core/AppAnimate';\r\nimport ListEmptyResult from '../../../../@crema/core/AppList/ListEmptyResult';\r\nimport SidebarPlaceholder from '../../../../@crema/core/Skeleton/SidebarListSkeleton';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  btnRoot: {\r\n    width: '100%',\r\n    fontSize: 16,\r\n    fontWeight: Fonts.MEDIUM,\r\n    textTransform: 'capitalize',\r\n    [theme.breakpoints.up('xl')]: {\r\n      fontSize: 20,\r\n    },\r\n  },\r\n}));\r\nconst TaskSideBar = () => {\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const folderList = useSelector(({todoApp}) => todoApp.folderList);\r\n\r\n  const [isAddTaskOpen, setAddTaskOpen] = React.useState(false);\r\n\r\n  const onOpenAddTask = () => {\r\n    setAddTaskOpen(true);\r\n  };\r\n\r\n  const onCloseAddTask = () => {\r\n    setAddTaskOpen(false);\r\n  };\r\n\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <>\r\n      <Box px={{xs: 4, md: 5}} pt={{xs: 4, md: 5}} pb={{xs: 2, xl: 5}}>\r\n        <AppAnimate>\r\n          <Button\r\n            variant='contained'\r\n            color='secondary'\r\n            className={classes.btnRoot}\r\n            onClick={onOpenAddTask}>\r\n            <IntlMessages id='todo.addNewTask' />\r\n          </Button>\r\n        </AppAnimate>\r\n      </Box>\r\n\r\n      <Scrollbar className='scroll-app-sidebar'>\r\n        <Box\r\n          px={{xs: 4, md: 5, lg: 6, xl: 8}}\r\n          pb={{xs: 4, md: 5, lg: 6, xl: 8}}\r\n          pt={0}>\r\n          <Box mb={{xs: 2, xl: 5}} clone>\r\n            <List component='nav' aria-label='main task folders'>\r\n              <AppList\r\n                data={folderList}\r\n                ListEmptyComponent={\r\n                  <ListEmptyResult\r\n                    loading={true}\r\n                    placeholder={<SidebarPlaceholder />}\r\n                  />\r\n                }\r\n                renderRow={(item) => (\r\n                  <AppsSideBarFolderItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    path={`/apps/todo/folder/${item.alias}`}\r\n                  />\r\n                )}\r\n              />\r\n            </List>\r\n          </Box>\r\n\r\n          <Box component='h5' mt={{xs: 4, xl: 5}} fontWeight={Fonts.MEDIUM}>\r\n            Labels\r\n          </Box>\r\n\r\n          <List component='nav' aria-label='main mailbox folders'>\r\n            <AppList\r\n              data={labelList}\r\n              ListEmptyComponent={\r\n                <ListEmptyResult\r\n                  loading={true}\r\n                  placeholder={<SidebarPlaceholder />}\r\n                />\r\n              }\r\n              renderRow={(label) => <LabelItem key={label.id} label={label} />}\r\n            />\r\n          </List>\r\n        </Box>\r\n      </Scrollbar>\r\n\r\n      {isAddTaskOpen ? (\r\n        <AddNewTask\r\n          isAddTaskOpen={isAddTaskOpen}\r\n          onCloseAddTask={onCloseAddTask}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskSideBar;\r\n","import React, {useState} from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport Box from '@material-ui/core/Box';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst SelectTasksDropdown = ({onSelectTasks, classes}) => {\r\n  const [selectedItems, setSelectedItems] = useState(0);\r\n\r\n  const onChangeSelectValue = (event) => {\r\n    setSelectedItems(event.target.value);\r\n    onSelectTasks(event.target.value);\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Box mr={{xs: 2, xl: 4}} component='span'>\r\n      <Select\r\n        value={selectedItems}\r\n        disableUnderline={true}\r\n        className={clsx(classes.pointer, classes.selectBox)}\r\n        onChange={onChangeSelectValue}>\r\n        <option value={0} className={classes.option}>\r\n          {messages['common.all']}\r\n        </option>\r\n        <option value={1} className={classes.option}>\r\n          {messages['common.none']}\r\n        </option>\r\n        <option value={2} className={classes.option}>\r\n          {messages['common.starred']}\r\n        </option>\r\n        <option value={3} className={classes.option}>\r\n          {messages['common.attachments']}\r\n        </option>\r\n      </Select>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SelectTasksDropdown;\r\n\r\nSelectTasksDropdown.prototype = {\r\n  onSelectTasks: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IntlMessages from '../../utility/IntlMessages';\nimport ConfirmationDialog from '../ConfirmationDialog';\n\nconst AppsDeleteIcon = ({deleteAction, deleteTitle, className}) => {\n  const [isDeleteDialogOpen, setDeleteDialogOpen] = useState(false);\n\n  return (\n    <>\n      <Tooltip title={<IntlMessages id='common.trash' />}>\n        <DeleteSharpIcon\n          className={className}\n          onClick={() => setDeleteDialogOpen(true)}\n        />\n      </Tooltip>\n      {isDeleteDialogOpen ? (\n        <ConfirmationDialog\n          open={isDeleteDialogOpen}\n          onDeny={setDeleteDialogOpen}\n          onConfirm={deleteAction}\n          title={deleteTitle}\n          dialogTitle={<IntlMessages id='common.deleteItem' />}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default AppsDeleteIcon;\n","import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport LabelSharpIcon from '@material-ui/icons/LabelSharp';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport {\r\n  onDeleteSelectedTasks,\r\n  onUpdateTaskLabels,\r\n} from '../../../../../redux/actions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport AppsDeleteIcon from '../../../../../@crema/core/AppsDeleteIcon';\r\nimport PropTypes from 'prop-types';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nconst CheckedTasksActions = ({\r\n  checkedTasks,\r\n  setCheckedTasks,\r\n  page,\r\n  classes,\r\n}) => {\r\n  const {pathname} = useLocation();\r\n  const path = pathname.split('/');\r\n  const dispatch = useDispatch();\r\n  const [isLabelOpen, onOpenLabel] = React.useState(null);\r\n\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const onLabelOpen = (event) => {\r\n    onOpenLabel(event.currentTarget);\r\n  };\r\n\r\n  const onLabelClose = () => {\r\n    onOpenLabel(null);\r\n  };\r\n\r\n  const onDeleteTasks = () => {\r\n    dispatch(\r\n      onDeleteSelectedTasks(\r\n        checkedTasks,\r\n        path[path.length - 2],\r\n        path[path.length - 1],\r\n        page,\r\n      ),\r\n    );\r\n    setCheckedTasks([]);\r\n  };\r\n\r\n  const onSelectLabel = (event) => {\r\n    const labelType = event.target.value;\r\n    dispatch(onUpdateTaskLabels(checkedTasks, labelType));\r\n    setCheckedTasks([]);\r\n    onLabelClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        mr={{xs: 1, xl: 2}}\r\n        pl={{xs: 2, xl: 4}}\r\n        component='span'\r\n        display='flex'\r\n        alignItems='center'\r\n        className={classes.checkedTask}>\r\n        <AppsDeleteIcon\r\n          deleteAction={onDeleteTasks}\r\n          deleteTitle={<IntlMessages id='todo.deleteMessage' />}\r\n          className={classes.deleteIcon}\r\n        />\r\n\r\n        <Tooltip title={<IntlMessages id='common.label' />}>\r\n          <LabelSharpIcon\r\n            className={classes.labelIcon}\r\n            value={1}\r\n            onClick={onLabelOpen}\r\n          />\r\n        </Tooltip>\r\n\r\n        <Menu\r\n          anchorEl={isLabelOpen}\r\n          open={Boolean(isLabelOpen)}\r\n          onClose={onLabelClose}>\r\n          {labelList.map((label) => {\r\n            return (\r\n              <MenuItem key={label.id} value={label.id} onClick={onSelectLabel}>\r\n                {label.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Menu>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckedTasksActions;\r\n\r\nCheckedTasksActions.prototype = {\r\n  checkedTasks: PropTypes.array.isRequired,\r\n  setCheckedTasks: PropTypes.func,\r\n  page: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox/index';\r\nimport {useSelector} from 'react-redux';\r\nimport Box from '@material-ui/core/Box';\r\nimport {useIntl} from 'react-intl';\r\nimport SearchBar from '../../../../../@crema/core/SearchBar';\r\nimport PropTypes from 'prop-types';\r\nimport {Hidden, makeStyles} from '@material-ui/core';\r\nimport SelectTasksDropdown from './SelectTasksDropdown';\r\nimport CheckedTasksActions from './CheckedTasksActions';\r\nimport AppsPagination from '../../../../../@crema/core/AppsPagination';\r\nimport {grey} from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pagination: {\r\n    paddingRight: 8,\r\n    paddingLeft: 8,\r\n  },\r\n  checkedTask: {\r\n    borderLeft: `1px solid ${grey[300]}`,\r\n  },\r\n  option: {\r\n    padding: 8,\r\n    cursor: 'pointer',\r\n  },\r\n  deleteIcon: {\r\n    marginRight: 16,\r\n    cursor: 'pointer',\r\n  },\r\n  labelIcon: {\r\n    marginRight: 12,\r\n    cursor: 'pointer',\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  selectBox: {\r\n    cursor: 'pointer',\r\n    '& .MuiOutlinedInput-input': {\r\n      paddingBottom: 10,\r\n      paddingTop: 10,\r\n    },\r\n    '& .MuiSelect-select': {\r\n      paddingLeft: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst TaskContentHeader = (props) => {\r\n  const {\r\n    checkedTasks,\r\n    setCheckedTasks,\r\n    filterText,\r\n    onSetFilterText,\r\n    onPageChange,\r\n    page,\r\n  } = props;\r\n\r\n  const taskList = useSelector(({todoApp}) => todoApp.taskList);\r\n\r\n  const totalTasks = useSelector(({todoApp}) => todoApp.totalTasks);\r\n\r\n  const onHandleMasterCheckbox = (event) => {\r\n    if (event.target.checked) {\r\n      const taskIds = taskList.map((task) => task.id);\r\n      setCheckedTasks(taskIds);\r\n    } else {\r\n      setCheckedTasks([]);\r\n    }\r\n  };\r\n\r\n  const onSelectTasks = (value) => {\r\n    switch (value) {\r\n      case 0:\r\n        const taskIds = taskList.map((task) => task.id);\r\n        setCheckedTasks(taskIds);\r\n        break;\r\n      case 1:\r\n        setCheckedTasks([]);\r\n        break;\r\n\r\n      case 2:\r\n        const ids = taskList\r\n          .filter((task) => task.isStarred)\r\n          .map((task) => task.id);\r\n        setCheckedTasks(ids);\r\n        break;\r\n\r\n      case 3:\r\n        const idsToCheck = taskList\r\n          .filter((task) => task.isAttachment)\r\n          .map((task) => task.id);\r\n        setCheckedTasks(idsToCheck);\r\n        break;\r\n\r\n      default:\r\n        setCheckedTasks([]);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles(props);\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <Box display='flex' flexDirection='row' flex={1} alignItems='center'>\r\n        <Box mr={{xs: 1, xl: 2}} component='span'>\r\n          <Checkbox\r\n            color='primary'\r\n            indeterminate={\r\n              checkedTasks.length > 0 && checkedTasks.length < taskList.length\r\n            }\r\n            checked={\r\n              taskList.length > 0 && checkedTasks.length === taskList.length\r\n            }\r\n            onChange={onHandleMasterCheckbox}\r\n          />\r\n        </Box>\r\n\r\n        <SelectTasksDropdown onSelectTasks={onSelectTasks} classes={classes} />\r\n\r\n        <Box mr={{sm: 4}} component='span' display='flex'>\r\n          {checkedTasks.length > 0 ? (\r\n            <CheckedTasksActions\r\n              checkedTasks={checkedTasks}\r\n              setCheckedTasks={setCheckedTasks}\r\n              page={page}\r\n              classes={classes}\r\n            />\r\n          ) : null}\r\n        </Box>\r\n\r\n        <SearchBar\r\n          overlap={false}\r\n          value={filterText}\r\n          onChange={(event) => onSetFilterText(event.target.value)}\r\n          placeholder={messages['common.searchHere']}\r\n        />\r\n      </Box>\r\n      <Hidden xsDown>\r\n        {taskList.length > 0 ? (\r\n          <AppsPagination\r\n            className={classes.pagination}\r\n            count={totalTasks}\r\n            page={page}\r\n            onPageChange={onPageChange}\r\n          />\r\n        ) : null}\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskContentHeader;\r\n\r\nTaskContentHeader.defaultProps = {\r\n  checkedTasks: [],\r\n  filterText: '',\r\n  page: 0,\r\n};\r\n\r\nTaskContentHeader.prototype = {\r\n  checkedTasks: PropTypes.array,\r\n  setCheckedTasks: PropTypes.func,\r\n  filterText: PropTypes.string,\r\n  onSetFilterText: PropTypes.func,\r\n  page: PropTypes.number,\r\n  onPageChange: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Labels = ({labels}) => {\r\n  return (\r\n    <>\r\n      {labels.map((label) => {\r\n        return (\r\n          <Tooltip title={label.name} placement='top' key={label.id}>\r\n            <Box\r\n              component='span'\r\n              mr={2}\r\n              width={12}\r\n              height={12}\r\n              bgcolor={label.color}\r\n              borderRadius='50%'\r\n              display='block'\r\n            />\r\n          </Tooltip>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Labels;\r\n\r\nLabels.prototype = {\r\n  labels: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Priority = ({priority}) => {\r\n  return (\r\n    <Box\r\n      component='span'\r\n      ml={{xs: 'auto', sm: 4}}\r\n      px={3}\r\n      py={1}\r\n      color='primary.contrastText'\r\n      borderRadius='30px'\r\n      fontSize={14}\r\n      bgcolor={priority.color}>\r\n      {priority.name}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Priority;\r\n\r\nPriority.prototype = {\r\n  priority: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport {Checkbox, Hidden, makeStyles} from '@material-ui/core';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport {useHistory, withRouter} from 'react-router-dom';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport Labels from './Labels';\r\nimport Priority from './Priority';\r\nimport AppsStarredIcon from '../../../../../@crema/core/AppsStarredIcon';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  truncate: {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  listItemRoot: {\r\n    '&.checked': {\r\n      backgroundColor: grey[200],\r\n      fontWeight: Fonts.LIGHT,\r\n    },\r\n  },\r\n  listItemLeft: {\r\n    width: '90%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '50%',\r\n    },\r\n  },\r\n  listItemRight: {\r\n    width: '10%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '50%',\r\n    },\r\n  },\r\n}));\r\n\r\nconst TaskListItem = ({\r\n  task,\r\n  onChangeCheckedTasks,\r\n  checkedTasks,\r\n  match,\r\n  onChangeStarred,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const onViewTaskDetail = (task) => {\r\n    history.push(`/apps/todo/${match.params.name}/${task.id}`);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      display='flex'\r\n      flexDirection='row'\r\n      alignItems='center'\r\n      cursor='pointer'\r\n      className='item-hover'\r\n      py={{xs: 1, xl: 2}}\r\n      px={5}\r\n      color={grey[600]}\r\n      clone>\r\n      <ListItem\r\n        dense\r\n        button\r\n        key={task.id}\r\n        className={clsx(classes.listItemRoot, {\r\n          checked: checkedTasks.includes(task.id),\r\n        })}\r\n        onClick={() => onViewTaskDetail(task)}>\r\n        <Box\r\n          display='flex'\r\n          alignItems='center'\r\n          className={classes.listItemLeft}>\r\n          <Box\r\n            mr={3}\r\n            component='span'\r\n            onClick={(event) => event.stopPropagation()}>\r\n            <Checkbox\r\n              checked={checkedTasks.includes(task.id)}\r\n              onChange={(event) => onChangeCheckedTasks(event, task.id)}\r\n              color='primary'\r\n            />\r\n          </Box>\r\n\r\n          <Box mr={3} component='span' className={classes.truncate}>\r\n            {task.title}\r\n          </Box>\r\n\r\n          <Box component='span' display='flex' alignItems='Center'>\r\n            <Labels labels={task.label} />\r\n          </Box>\r\n\r\n          <Hidden smDown>\r\n            <Priority priority={task.priority} />\r\n          </Hidden>\r\n        </Box>\r\n\r\n        <Box\r\n          className={classes.listItemRight}\r\n          display='flex'\r\n          alignItems='Center'\r\n          justifyContent={{sm: 'flex-end'}}\r\n          pl={{sm: 3}}>\r\n          <Hidden smDown>\r\n            <Box width={42} textAlign='center' component='span'>\r\n              {task.isAttachment ? <AttachFileIcon /> : null}\r\n            </Box>\r\n          </Hidden>\r\n\r\n          <Hidden smDown>\r\n            <Box component='span' ml={3} className={classes.truncate}>\r\n              <IntlMessages id='todo.scheduleFor' /> {task.schedule}\r\n            </Box>\r\n          </Hidden>\r\n\r\n          <Hidden smDown>\r\n            <Box\r\n              component='span'\r\n              ml={{xs: 'auto', sm: 3}}\r\n              onClick={(event) => event.stopPropagation()}>\r\n              <AppsStarredIcon item={task} onChange={onChangeStarred} />\r\n            </Box>\r\n          </Hidden>\r\n          <Box ml={1}>\r\n            <Avatar src={task.image} />\r\n          </Box>\r\n        </Box>\r\n      </ListItem>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(TaskListItem);\r\n\r\nTaskListItem.defaultProps = {\r\n  checkedTasks: [],\r\n};\r\n\r\nTaskListItem.prototype = {\r\n  task: PropTypes.object.isRequired,\r\n  onChangeCheckedTasks: PropTypes.func,\r\n  checkedTasks: PropTypes.array,\r\n  onChangeStarred: PropTypes.func,\r\n};\r\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const TodoItem = (props) => (\n  <ContentLoader viewBox='0 0 400 25' {...props}>\n    <rect height='10' rx='0' ry='0' width='10' x='10' y='10' />\n    <rect height='10' rx='1' ry='0' width='100' x='30' y='10' />\n    <rect height='10' rx='5' ry='5' width='30' x='145' y='10' />\n    <rect height='10' rx='1' ry='0' width='150' x='215' y='10' />\n    <rect height='10' rx='0' ry='0' width='10' x='370' y='10' />\n    <circle cx='390' cy='15' r='5' />\n  </ContentLoader>\n);\nconst TodoListSkeleton = () => {\n  return (\n    <React.Fragment>\n      <TodoItem />\n      <TodoItem />\n      <TodoItem />\n      <TodoItem />\n      <TodoItem />\n      <TodoItem />\n      <TodoItem />\n      <TodoItem />\n      <TodoItem />\n      <TodoItem />\n    </React.Fragment>\n  );\n};\n\nexport default TodoListSkeleton;\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  onGetTaskList,\r\n  onUpdateTaskStarredStatus,\r\n} from '../../../../redux/actions';\r\nimport TaskContentHeader from './TaskContentHeader';\r\nimport TaskListItem from './TaskListItem';\r\nimport {useLocation} from 'react-router-dom';\r\nimport AddNewTask from '../AddNewTask';\r\nimport {Hidden, makeStyles} from '@material-ui/core';\r\nimport AppsPagination from '../../../../@crema/core/AppsPagination';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport AppsHeader from '../../../../@crema/core/AppsContainer/AppsHeader';\r\nimport AppsContent from '../../../../@crema/core/AppsContainer/AppsContent';\r\nimport AppsFooter from '../../../../@crema/core/AppsContainer/AppsFooter';\r\nimport ListEmptyResult from '../../../../@crema/core/AppList/ListEmptyResult';\r\nimport TodoListSkeleton from '../../../../@crema/core/Skeleton/TodoListSkeleton';\r\nimport AppList from '../../../../@crema/core/AppList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  truncate: {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  pagination: {\r\n    paddingRight: 8,\r\n    paddingLeft: 8,\r\n    borderColor: grey[300],\r\n    borderTopWidth: 1,\r\n  },\r\n}));\r\n\r\nconst TasksList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {pathname} = useLocation();\r\n\r\n  const taskList = useSelector(({todoApp}) => todoApp.taskList);\r\n\r\n  const totalTasks = useSelector(({todoApp}) => todoApp.totalTasks);\r\n\r\n  const labelList = useSelector(({todoApp}) => todoApp.labelList);\r\n\r\n  const loading = useSelector(({common}) => common.loading);\r\n\r\n  const [filterText, onSetFilterText] = useState('');\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [checkedTasks, setCheckedTasks] = useState([]);\r\n\r\n  const [isAddTaskOpen, setAddTaskOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    setPage(0);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    const path = pathname.split('/');\r\n    dispatch(onGetTaskList(path[path.length - 2], path[path.length - 1], page));\r\n  }, [dispatch, page, pathname]);\r\n\r\n  const onOpenAddTask = () => {\r\n    setAddTaskOpen(true);\r\n  };\r\n\r\n  const onCloseAddTask = () => {\r\n    setAddTaskOpen(false);\r\n  };\r\n\r\n  const onPageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const onChangeCheckedTasks = (event, id) => {\r\n    if (event.target.checked) {\r\n      setCheckedTasks(checkedTasks.concat(id));\r\n    } else {\r\n      setCheckedTasks(checkedTasks.filter((taskId) => taskId !== id));\r\n    }\r\n  };\r\n\r\n  const onChangeStarred = (checked, task) => {\r\n    const status = checked;\r\n    const selectedIdList = [task.id];\r\n    const path = pathname.split('/');\r\n    dispatch(\r\n      onUpdateTaskStarredStatus(selectedIdList, status, path[path.length - 1]),\r\n    );\r\n  };\r\n\r\n  const onGetFilteredItems = () => {\r\n    if (filterText === '') {\r\n      return taskList;\r\n    } else {\r\n      return taskList.filter((task) =>\r\n        task.title.toUpperCase().includes(filterText.toUpperCase()),\r\n      );\r\n    }\r\n  };\r\n\r\n  const list = onGetFilteredItems();\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <TaskContentHeader\r\n          checkedTasks={checkedTasks}\r\n          setCheckedTasks={setCheckedTasks}\r\n          filterText={filterText}\r\n          onSetFilterText={onSetFilterText}\r\n          onPageChange={onPageChange}\r\n          page={page}\r\n        />\r\n      </AppsHeader>\r\n      <AppsContent>\r\n        <AppList\r\n          className={classes.list}\r\n          data={list}\r\n          renderRow={(task) => (\r\n            <TaskListItem\r\n              key={task.id}\r\n              task={task}\r\n              labelList={labelList}\r\n              onChangeCheckedTasks={onChangeCheckedTasks}\r\n              checkedTasks={checkedTasks}\r\n              onChangeStarred={onChangeStarred}\r\n            />\r\n          )}\r\n          ListEmptyComponent={\r\n            <ListEmptyResult\r\n              loading={loading}\r\n              actionTitle='Add Task'\r\n              onAction={onOpenAddTask}\r\n              placeholder={<TodoListSkeleton />}\r\n            />\r\n          }\r\n        />\r\n      </AppsContent>\r\n\r\n      <Hidden smUp>\r\n        {taskList.length > 0 ? (\r\n          <AppsFooter>\r\n            <AppsPagination\r\n              count={totalTasks}\r\n              page={page}\r\n              onPageChange={onPageChange}\r\n            />\r\n          </AppsFooter>\r\n        ) : null}\r\n      </Hidden>\r\n\r\n      {isAddTaskOpen ? (\r\n        <AddNewTask\r\n          isAddTaskOpen={isAddTaskOpen}\r\n          onCloseAddTask={onCloseAddTask}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst StatusToggleButton = ({selectedTask, classes}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeTaskStatus = (status) => {\r\n    const task = selectedTask;\r\n    task.status = status;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedTask.status === 3 ? (\r\n        <Box\r\n          ml={{xs: 2, sm: 4}}\r\n          px={4}\r\n          py={2}\r\n          bgcolor='primary.main'\r\n          component='span'\r\n          color='primary.contrastText'\r\n          fontWeight={Fonts.MEDIUM}\r\n          className={classes.statusBtn}\r\n          onClick={() => onChangeTaskStatus(1)}>\r\n          <DoneIcon className={classes.doneIcon} />\r\n          <IntlMessages id='todo.completed' />\r\n        </Box>\r\n      ) : (\r\n        <Box\r\n          ml={{xs: 2, sm: 4}}\r\n          px={4}\r\n          py={2}\r\n          color='primary.main'\r\n          component='span'\r\n          fontWeight={Fonts.LIGHT}\r\n          className={classes.statusBtn}\r\n          onClick={() => onChangeTaskStatus(3)}>\r\n          <DoneIcon className={classes.doneIcon} />\r\n          <IntlMessages id='todo.markAsCompleted' />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatusToggleButton;\r\n\r\nStatusToggleButton.prototype = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {useHistory} from 'react-router-dom';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport AppsStarredIcon from '../../../../../@crema/core/AppsStarredIcon';\r\nimport StatusToggleButton from './StatusToggleButton';\r\nimport AppsDeleteIcon from '../../../../../@crema/core/AppsDeleteIcon';\r\n\r\nconst TaskDetailHeader = (props) => {\r\n  const {selectedTask} = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const onClickBackButton = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const onChangeStarred = (checked) => {\r\n    const task = selectedTask;\r\n    task.isStarred = checked;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  const onDeleteTask = () => {\r\n    const task = selectedTask;\r\n    task.folderValue = 126;\r\n    dispatch(onUpdateSelectedTask(task));\r\n    history.goBack();\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    statusBtn: {\r\n      fontSize: 12,\r\n      border: `1px solid ${theme.palette.primary.main}`,\r\n      borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n      cursor: 'pointer',\r\n      [theme.breakpoints.up('lg')]: {\r\n        fontSize: 14,\r\n      },\r\n    },\r\n    deleteIcon: {\r\n      marginLeft: 'auto',\r\n      cursor: 'pointer',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: 16,\r\n      },\r\n    },\r\n    doneIcon: {\r\n      marginRight: 4,\r\n      fontSize: 18,\r\n      verticalAlign: 'middle',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginRight: 8,\r\n      },\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.pointer} component='span'>\r\n        <Tooltip title={<IntlMessages id='common.back' />}>\r\n          <KeyboardBackspaceIcon onClick={onClickBackButton} />\r\n        </Tooltip>\r\n      </Box>\r\n\r\n      <StatusToggleButton selectedTask={selectedTask} classes={classes} />\r\n\r\n      <Box component='span' ml='auto' display={{xs: 'none', sm: 'block'}}>\r\n        <AppsStarredIcon item={selectedTask} onChange={onChangeStarred} />\r\n      </Box>\r\n\r\n      <AppsDeleteIcon\r\n        deleteAction={onDeleteTask}\r\n        deleteTitle={<IntlMessages id='todo.deleteMessage' />}\r\n        className={classes.deleteIcon}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskDetailHeader;\r\n\r\nTaskDetailHeader.prototype = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Select from '@material-ui/core/Select';\r\nimport clsx from 'clsx';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChangeStaff = ({\r\n  classes,\r\n  inputLabel,\r\n  labelWidth,\r\n  selectedStaff,\r\n  handleStaffChange,\r\n}) => {\r\n  const staffList = useSelector(({todoApp}) => todoApp.staffList);\r\n\r\n  return (\r\n    <FormControl variant='outlined' className={classes.minWidth100}>\r\n      <InputLabel ref={inputLabel} id='demo-simple-select-outlined-label'>\r\n        <IntlMessages id='common.staff' />\r\n      </InputLabel>\r\n      <Select\r\n        className={clsx(classes.selectBox, classes.pointer)}\r\n        labelWidth={labelWidth}\r\n        value={selectedStaff.id}\r\n        onChange={handleStaffChange}>\r\n        {staffList.map((staff) => {\r\n          return (\r\n            <MenuItem\r\n              value={staff.id}\r\n              key={staff.id}\r\n              className={classes.pointer}>\r\n              <Box display='flex' alignItems='center'>\r\n                {staff.image ? (\r\n                  <Avatar className={classes.mr12} src={staff.image} />\r\n                ) : (\r\n                  <Avatar className={classes.mr12}>\r\n                    {staff.name.toUpperCase()}\r\n                  </Avatar>\r\n                )}\r\n                <Box>{staff.name}</Box>\r\n              </Box>\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ChangeStaff;\r\n\r\nChangeStaff.defaultProps = {\r\n  inputLabel: null,\r\n  labelWidth: 0,\r\n};\r\n\r\nChangeStaff.prototype = {\r\n  selectedStaff: PropTypes.object.isRequired,\r\n  handleStaffChange: PropTypes.func,\r\n  inputLabel: PropTypes.object,\r\n  labelWidth: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst AssignedStaff = ({assignedStaff, classes}) => {\r\n  return (\r\n    <>\r\n      {assignedStaff ? (\r\n        <Box mr={4} display='flex' alignItems='center'>\r\n          {assignedStaff.image ? (\r\n            <Avatar className={classes.avtr50} src={assignedStaff.image} />\r\n          ) : (\r\n            <Avatar className={classes.avtr50}>{assignedStaff.name[0]}</Avatar>\r\n          )}\r\n          <Box ml={4}>\r\n            <Box component='p' mb={0.5}>\r\n              <IntlMessages id='todo.assignedTo' />\r\n            </Box>\r\n            <Box\r\n              component='p'\r\n              mb={0}\r\n              color='primary.main'\r\n              fontWeight={Fonts.MEDIUM}>\r\n              {assignedStaff.name}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Box mr={4} display='flex' alignItems='center'>\r\n          <Avatar\r\n            className={classes.avtr50}\r\n            src={'/assets/images/placeholder.jpg'}\r\n          />\r\n          <Box ml={4}>\r\n            <Box\r\n              component='p'\r\n              mb={0}\r\n              fontWeight={Fonts.MEDIUM}\r\n              color='primary.main'>\r\n              <IntlMessages id='todo.currentlyUnassigned' />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignedStaff;\r\n\r\nAssignedStaff.defaultProps = {\r\n  assignedStaff: null,\r\n};\r\n\r\nAssignedStaff.prototype = {\r\n  assignedStaff: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport {KeyboardDatePicker} from '@material-ui/pickers';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport moment from 'moment';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DatePicker = ({classes, scheduleDate, setScheduleDate}) => {\r\n  return (\r\n    <Box ml={{xs: 0, sm: 5}} mt={{xs: 2, sm: 0}}>\r\n      <KeyboardDatePicker\r\n        autoOk\r\n        format='YYYY/MM/DD'\r\n        variant='inline'\r\n        inputVariant='outlined'\r\n        label={<IntlMessages id='common.selectDate' />}\r\n        name='date'\r\n        className={classes.datePicker}\r\n        value={scheduleDate}\r\n        onChange={(value) => setScheduleDate(moment(value).format('lll'))}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n\r\nDatePicker.prototype = {\r\n  scheduleDate: PropTypes.object.isRequired,\r\n  setScheduleDate: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst EditButton = ({classes, action, title}) => {\r\n  return (\r\n    <Box\r\n      px={4}\r\n      py={2}\r\n      component='span'\r\n      bgcolor='red'\r\n      color='primary.contrastText'\r\n      fontWeight={Fonts.LIGHT}\r\n      display='inline-block'\r\n      cursor='pointer'\r\n      className={clsx(classes.taskBtn, classes.pointer)}\r\n      onClick={action}>\r\n      {title}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditButton;\r\n\r\nEditButton.prototype = {\r\n  title: PropTypes.any.isRequired,\r\n  action: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst CommentsList = ({comments, classes}) => {\r\n  return (\r\n    <>\r\n      {comments.length > 0 ? (\r\n        <Box mb={5}>\r\n          <Box mb={4} fontWeight={Fonts.MEDIUM}>\r\n            <IntlMessages id='common.comments' />\r\n          </Box>\r\n          {comments.map((item, index) => {\r\n            return (\r\n              <Box mb={5} key={index}>\r\n                <Box mb={4} display='flex' alignItems='center'>\r\n                  {item.image ? (\r\n                    <Avatar src={item.image} className={classes.avtr50} />\r\n                  ) : (\r\n                    <Avatar className={classes.avtr50}>{item.name[0]}</Avatar>\r\n                  )}\r\n                  <Box ml={4}>\r\n                    <Box\r\n                      component='span'\r\n                      color='primary.main'\r\n                      mb={0.5}\r\n                      display='block'\r\n                      fontWeight={Fonts.MEDIUM}>\r\n                      {item.name}\r\n                    </Box>\r\n                    <Box\r\n                      component='span'\r\n                      color='text.secondary'\r\n                      display='block'\r\n                      fontSize={14}>\r\n                      {item.date}\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n                <Box component='p' ml={2} mb={0}>\r\n                  {item.comment}\r\n                </Box>\r\n              </Box>\r\n            );\r\n          })}\r\n        </Box>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n\r\nCommentsList.defaultProps = {\r\n  comments: [],\r\n};\r\n\r\nCommentsList.prototype = {\r\n  comments: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport CommentsList from './CommentsList';\r\n\r\nconst TaskStatus = ({inputLabel, labelWidth, selectedTask, classes}) => {\r\n  const statusList = useSelector(({todoApp}) => todoApp.statusList);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeStatus = (event) => {\r\n    const task = selectedTask;\r\n    task.status = event.target.value;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  return (\r\n    <FormControl className='' variant='outlined'>\r\n      <InputLabel ref={inputLabel} id='demo-simple-select-outlined-label'>\r\n        <IntlMessages id='common.status' />\r\n      </InputLabel>\r\n      <Select\r\n        labelWidth={labelWidth}\r\n        value={selectedTask.status}\r\n        onChange={(event) => onChangeStatus(event)}\r\n        className={classes.selectBox}>\r\n        {statusList.map((status) => {\r\n          return (\r\n            <option\r\n              key={status.type}\r\n              value={status.type}\r\n              className={classes.option}>\r\n              {status.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default TaskStatus;\r\n\r\nTaskStatus.defaultProps = {\r\n  inputLabel: null,\r\n  labelWidth: 0,\r\n};\r\n\r\nCommentsList.prototype = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n  inputLabel: PropTypes.object,\r\n  labelWidth: PropTypes.number,\r\n};\r\n","import React, {useState} from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TaskPriority = ({inputLabel, labelWidth, selectedTask, classes}) => {\r\n  const dispatch = useDispatch();\r\n  const priorityList = useSelector(({todoApp}) => todoApp.priorityList);\r\n\r\n  const [priority, setPriority] = useState(selectedTask.priority);\r\n\r\n  const onChangePriority = (event) => {\r\n    setPriority(event.target.value);\r\n    const task = selectedTask;\r\n    task.priority = event.target.value;\r\n    dispatch(onUpdateSelectedTask(task));\r\n  };\r\n\r\n  return (\r\n    <FormControl variant='outlined'>\r\n      <InputLabel ref={inputLabel} id='demo-simple-select-outlined-label'>\r\n        <IntlMessages id='common.priority' />\r\n      </InputLabel>\r\n      <Select\r\n        labelWidth={labelWidth}\r\n        name='priority'\r\n        value={priority.type}\r\n        onChange={(event) => onChangePriority(event)}\r\n        className={classes.selectBox}>\r\n        {priorityList.map((priority) => {\r\n          return (\r\n            <option\r\n              key={priority.id}\r\n              value={priority.type}\r\n              className={classes.option}>\r\n              {priority.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default TaskPriority;\r\n\r\nTaskPriority.defaultProps = {\r\n  inputLabel: null,\r\n  labelWidth: 0,\r\n};\r\n\r\nTaskPriority.prototype = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n  inputLabel: PropTypes.object,\r\n  labelWidth: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport PropTypes from 'prop-types';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\n\r\nconst TaskCreatedByInfo = ({createdBy, createdOn, classes}) => {\r\n  return (\r\n    <Box mb={5} display='flex' alignItems='center'>\r\n      {createdBy.image ? (\r\n        <Avatar src={createdBy.image} className={classes.avtr50} />\r\n      ) : (\r\n        <Avatar className={classes.avtr50}>{createdBy.name[0]}</Avatar>\r\n      )}\r\n      <Box\r\n        ml={2}\r\n        display='flex'\r\n        flexDirection={{xs: 'column', sm: 'row'}}\r\n        alignItems={{sm: 'center'}}>\r\n        <Box\r\n          component='span'\r\n          mr={2}\r\n          color='primary.main'\r\n          fontWeight={Fonts.MEDIUM}\r\n          display='inline-block'>\r\n          {createdBy.name}\r\n        </Box>\r\n        <Box component='p' mb={0}>\r\n          <Box component='span'>\r\n            <IntlMessages id='todo.createdThisTask' />\r\n          </Box>\r\n          <Box component='span' color={grey[500]} ml={2}>\r\n            {createdOn}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskCreatedByInfo;\r\n\r\nTaskCreatedByInfo.prototype = {\r\n  createdBy: PropTypes.object.isRequired,\r\n  createdOn: PropTypes.string.isRequired,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onUpdateSelectedTask} from '../../../../../redux/actions';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\nimport {useAuthUser} from '../../../../../@crema/utility/AppHooks';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport IntlMessages from '../../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport {useIntl} from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport Labels from '../../TasksList/TaskListItem/Labels';\r\nimport ChangeStaff from './ChangeStaff';\r\nimport AssignedStaff from './AssignedStaff';\r\nimport DatePicker from './DatePicker';\r\nimport EditButton from './EditButton';\r\nimport TaskStatus from './TaskStatus';\r\nimport TaskPriority from './TaskPriority';\r\nimport TaskCreatedByInfo from './TaskCreatedByInfo';\r\nimport CommentsList from './CommentsList';\r\nimport {red} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../../../shared/constants/AppEnums';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst TaskDetailBody = (props) => {\r\n  const {selectedTask} = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const authUser = useAuthUser();\r\n\r\n  const staffList = useSelector(({todoApp}) => todoApp.staffList);\r\n\r\n  const [isEdit, setEdit] = useState(false);\r\n\r\n  const [content, setContent] = useState(selectedTask.content);\r\n\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [scheduleDate, setScheduleDate] = useState(\r\n    moment(selectedTask.schedule).format('YYYY/MM/DD'),\r\n  );\r\n\r\n  const [selectedStaff, setStaff] = useState(selectedTask.assignedTo);\r\n\r\n  const inputLabel = React.useRef(null);\r\n\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    setLabelWidth(60);\r\n  }, []);\r\n\r\n  const onClickEditButton = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const onDoneEditing = () => {\r\n    const task = selectedTask;\r\n    task.content = content;\r\n    task.schedule = scheduleDate;\r\n    task.assignedTo = selectedStaff;\r\n    dispatch(onUpdateSelectedTask(task));\r\n    setEdit(!isEdit);\r\n  };\r\n\r\n  const onAddComments = () => {\r\n    let task = selectedTask;\r\n    task.comments = task.comments.concat({\r\n      comment: comment,\r\n      name: authUser.displayName ? authUser.displayName : 'User',\r\n      image: authUser.photoURL,\r\n      date: moment().format('ll'),\r\n    });\r\n    dispatch(onUpdateSelectedTask(task));\r\n    setComment('');\r\n  };\r\n\r\n  const handleStaffChange = (event) => {\r\n    const staff = staffList.find((staff) => staff.id === event.target.value);\r\n    setStaff(staff);\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    selectBox: {\r\n      cursor: 'pointer',\r\n      '& .MuiOutlinedInput-input': {\r\n        paddingBottom: 10,\r\n        paddingTop: 10,\r\n      },\r\n      '& .MuiSelect-select': {\r\n        paddingLeft: 10,\r\n      },\r\n    },\r\n    taskBtn: {\r\n      borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n    mr12: {\r\n      marginRight: 12,\r\n    },\r\n    minWidth100: {\r\n      minWidth: 100,\r\n      width: '100%',\r\n    },\r\n    avtr50: {\r\n      height: 50,\r\n      width: 50,\r\n    },\r\n    datePicker: {\r\n      marginTop: 0,\r\n    },\r\n    divider: {\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n    },\r\n    textArea: {\r\n      width: '100%',\r\n      marginBottom: 16,\r\n    },\r\n    option: {\r\n      padding: 8,\r\n      cursor: 'pointer',\r\n    },\r\n    button: {\r\n      backgroundColor: red[500],\r\n      color: theme.palette.primary.contrastText,\r\n      fontWeight: Fonts.LIGHT,\r\n      paddingRight: 20,\r\n      paddingLeft: 20,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: red[700],\r\n        color: theme.palette.secondary.contrastText,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles(props);\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Box px={6} py={8}>\r\n      <Box\r\n        mb={6}\r\n        display='flex'\r\n        flexDirection={{xs: 'column', sm: 'row'}}\r\n        alignItems={{sm: 'center'}}>\r\n        <Box\r\n          component='h2'\r\n          mr={5}\r\n          mb={{xs: 3, sm: 0}}\r\n          fontSize={16}\r\n          fontWeight={Fonts.BOLD}>\r\n          {selectedTask.title}\r\n        </Box>\r\n\r\n        <Box display='flex' alignItems='center'>\r\n          <Labels labels={selectedTask.label} />\r\n\r\n          <Box\r\n            component='span'\r\n            ml={4}\r\n            px={3}\r\n            py={1}\r\n            color='primary.contrastText'\r\n            bgcolor={selectedTask.priority.color}\r\n            fontSize={14}\r\n            className={classes.taskBtn}>\r\n            {selectedTask.priority.name}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box mb={5} display='flex'>\r\n        <Box\r\n          display='flex'\r\n          flexDirection={{xs: 'column', sm: 'row'}}\r\n          mr={2}\r\n          alignItems={{sm: 'center'}}>\r\n          {isEdit ? (\r\n            <>\r\n              <Box mb={{xs: 3, sm: 0}}>\r\n                <ChangeStaff\r\n                  classes={classes}\r\n                  inputLabel={inputLabel}\r\n                  labelWidth={labelWidth}\r\n                  selectedStaff={selectedStaff}\r\n                  handleStaffChange={handleStaffChange}\r\n                />\r\n              </Box>\r\n              <DatePicker\r\n                classes={classes}\r\n                scheduleDate={scheduleDate}\r\n                setScheduleDate={setScheduleDate}\r\n              />\r\n            </>\r\n          ) : (\r\n            <AssignedStaff\r\n              classes={classes}\r\n              assignedStaff={selectedTask.assignedTo}\r\n            />\r\n          )}\r\n        </Box>\r\n\r\n        <Box ml='auto'>\r\n          {!isEdit ? (\r\n            <Box mt={2}>\r\n              <EditButton\r\n                classes={classes}\r\n                action={onClickEditButton}\r\n                title={<IntlMessages id='common.edit' />}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <EditButton\r\n              classes={classes}\r\n              action={onDoneEditing}\r\n              title={<IntlMessages id='common.done' />}\r\n            />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Divider className={classes.divider} />\r\n\r\n      {!isEdit ? (\r\n        <Box component='p' fontSize={{xs: 14, xl: 16}}>\r\n          {content}\r\n        </Box>\r\n      ) : (\r\n        <TextField\r\n          multiline\r\n          className={classes.textArea}\r\n          rows='6'\r\n          variant='outlined'\r\n          placeholder={messages['common.description']}\r\n          name='content'\r\n          value={content}\r\n          onChange={(event) => setContent(event.target.value)}\r\n        />\r\n      )}\r\n\r\n      <Box mb={5} pt={5} display='flex' alignItems='center'>\r\n        <Box mr={5}>\r\n          <TaskStatus\r\n            inputLabel={inputLabel}\r\n            labelWidth={labelWidth}\r\n            selectedTask={selectedTask}\r\n            classes={classes}\r\n          />\r\n        </Box>\r\n\r\n        <TaskPriority\r\n          inputLabel={inputLabel}\r\n          labelWidth={labelWidth}\r\n          classes={classes}\r\n          selectedTask={selectedTask}\r\n        />\r\n      </Box>\r\n\r\n      <Divider className={classes.divider} />\r\n\r\n      <TaskCreatedByInfo\r\n        classes={classes}\r\n        createdBy={selectedTask.createdBy}\r\n        createdOn={selectedTask.createdOn}\r\n      />\r\n\r\n      <CommentsList classes={classes} comments={selectedTask.comments} />\r\n\r\n      <TextField\r\n        multiline\r\n        className={classes.textArea}\r\n        rows='6'\r\n        variant='outlined'\r\n        placeholder={messages['common.writeComment']}\r\n        value={comment}\r\n        onChange={(event) => setComment(event.target.value)}\r\n      />\r\n      <Button className={classes.button} onClick={onAddComments}>\r\n        <IntlMessages id='todo.submitComment' />\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskDetailBody;\r\n\r\nTaskDetailBody.prototype = {\r\n  selectedTask: PropTypes.object.isRequired,\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport TaskDetailHeader from './TaskDetailHeader';\r\nimport TaskDetailBody from './TaskDetailBody';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {onGetSelectedTask} from '../../../../redux/actions';\r\nimport {useParams} from 'react-router-dom';\r\nimport AppsHeader from '../../../../@crema/core/AppsContainer/AppsHeader';\r\nimport AppsContent from '../../../../@crema/core/AppsContainer/AppsContent';\r\n\r\nconst TaskDetail = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {id} = useParams();\r\n  useEffect(() => {\r\n    dispatch(onGetSelectedTask(id));\r\n  }, [dispatch, id]);\r\n\r\n  const selectedTask = useSelector(({todoApp}) => todoApp.selectedTask);\r\n  console.log('selectedTask', selectedTask);\r\n  if (!selectedTask) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <TaskDetailHeader selectedTask={selectedTask} />\r\n      </AppsHeader>\r\n      <AppsContent isDetailView>\r\n        <TaskDetailBody selectedTask={selectedTask} />\r\n      </AppsContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React, {useEffect} from 'react';\r\nimport TaskSideBar from './TaskSideBar/index';\r\nimport TasksList from './TasksList';\r\nimport TaskDetail from './TaskDetail';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n  onGetToDoFolderList,\r\n  onGetToDoLabelList,\r\n  onGetToDoPriorityList,\r\n  onGetToDoStaffList,\r\n  onGetToDoStatusList,\r\n} from '../../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport {useIntl} from 'react-intl';\r\nimport AppsContainer from '../../../@crema/core/AppsContainer';\r\n\r\nconst ToDo = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoLabelList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoFolderList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoPriorityList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoStaffList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetToDoStatusList());\r\n  }, [dispatch]);\r\n\r\n  const onGetMainComponent = () => {\r\n    if (props.match.params.id) {\r\n      return <TaskDetail />;\r\n    } else {\r\n      return <TasksList />;\r\n    }\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n  return (\r\n    <AppsContainer\r\n      title={messages['todo.todoApp']}\r\n      sidebarContent={<TaskSideBar />}>\r\n      {onGetMainComponent()}\r\n    </AppsContainer>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n\r\nToDo.defaultProps = {\r\n  match: null,\r\n};\r\n\r\nToDo.prototype = {\r\n  match: PropTypes.node,\r\n};\r\n"],"sourceRoot":""}