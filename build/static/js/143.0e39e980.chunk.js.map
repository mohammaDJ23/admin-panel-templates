{"version":3,"sources":["modules/thirdParty/googleMap/PopUpInfo/Components/MapPopupInfo.js","modules/thirdParty/googleMap/PopUpInfo/index.js","webpack:///./src/modules/thirdParty/googleMap/PopUpInfo/Components/MapPopupInfo.js?9341"],"names":["google","window","PopUpInfoWindowExampleGoogleMap","withGoogleMap","props","defaultZoom","center","markers","map","marker","index","defaultIcon","key","position","onClick","onMarkerClick","showInfo","onCloseClick","onMarkerClose","infoContent","MapPopupInfo","state","lat","lng","maps","LatLng","Box","display","id","xmlns","width","height","viewBox","d","ml","handleMarkerClick","bind","handleMarkerClose","targetMarker","this","setState","containerElement","className","mapElement","Component","PopUpInfoEx","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","PopUpInfo","source"],"mappings":"wOAIMA,EAASC,OAAOD,OAEhBE,EAAkCC,yBAAc,SAACC,GAAD,OACpD,kBAAC,YAAD,CAAWC,YAAa,GAAIC,OAAQF,EAAME,QACvCF,EAAMG,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACjB,kBAAC,SAAD,CACEC,YAAa,4BACbC,IAAKF,EACLG,SAAUJ,EAAOI,SACjBC,QAAS,kBAAMV,EAAMW,cAAcN,KAMlCA,EAAOO,UACN,kBAAC,aAAD,CAAYC,aAAc,kBAAMb,EAAMc,cAAcT,KAClD,6BAAMA,EAAOU,sBAeJC,E,4MACnBC,MAAQ,CACNf,OAAQ,CACNgB,IAAK,UACLC,KAAM,YAIRhB,QAAS,CACP,CACEM,SAAU,IAAIb,EAAOwB,KAAKC,OAAO,WAAY,YAC7CT,UAAU,EACVG,YACE,kBAACO,EAAA,EAAD,CAAKC,QAAQ,QACX,6BACE,yBACEC,GAAG,UACHC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aACR,0BACEC,EAAE,8QAQR,kBAACP,EAAA,EAAD,CAAKQ,GAAI,GACP,gDACA,iDACA,mDAKR,CACErB,SAAU,IAAIb,EAAOwB,KAAKC,OAAO,WAAY,YAC7CT,UAAU,EACVG,YACE,kBAACO,EAAA,EAAD,CAAKC,QAAQ,QACX,6BACE,yBACEC,GAAG,UACHC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aACR,0BACEC,EAAE,8SAQR,kBAACP,EAAA,EAAD,CAAKQ,GAAI,GACP,4FAGA,oDACA,qD,EAQZC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gB,EACpBC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gB,gEAGFE,GAChBC,KAAKC,SAAS,CACZjC,QAASgC,KAAKlB,MAAMd,QAAQC,KAAI,SAACC,GAC/B,OAAIA,IAAW6B,EACN,2BACF7B,GADL,IAEEO,UAAU,IAGPP,S,wCAKK6B,GAChBC,KAAKC,SAAS,CACZjC,QAASgC,KAAKlB,MAAMd,QAAQC,KAAI,SAACC,GAC/B,OAAIA,IAAW6B,EACN,2BACF7B,GADL,IAEEO,UAAU,IAGPP,S,+BAMX,OACE,kBAACP,EAAD,CACEuC,iBACE,yBAAKC,UAAU,kDAEjBC,WAAY,yBAAKD,UAAU,6BAC3BpC,OAAQiC,KAAKlB,MAAMf,OACnBC,QAASgC,KAAKlB,MAAMd,QACpBQ,cAAewB,KAAKJ,kBACpBjB,cAAeqB,KAAKF,wB,GAlHcO,aCH3BC,UAtBK,WAClB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,wBACNC,YAAY,0CACZC,OAAO,2FAGT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEP,MAAM,wBACNQ,UAAWC,EACXC,OCzBG","file":"static/js/143.0e39e980.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from 'react-google-maps';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst google = window.google;\r\n\r\nconst PopUpInfoWindowExampleGoogleMap = withGoogleMap((props) => (\r\n  <GoogleMap defaultZoom={15} center={props.center}>\r\n    {props.markers.map((marker, index) => (\r\n      <Marker\r\n        defaultIcon={'/assets/images/marker.png'}\r\n        key={index}\r\n        position={marker.position}\r\n        onClick={() => props.onMarkerClick(marker)}>\r\n        {/*\r\n          Show info window only if the 'showInfo' key of the marker is true.\r\n          That is, when the Marker pin has been clicked and 'onCloseClick' has been\r\n          Successfully fired.\r\n        */}\r\n        {marker.showInfo && (\r\n          <InfoWindow onCloseClick={() => props.onMarkerClose(marker)}>\r\n            <div>{marker.infoContent}</div>\r\n          </InfoWindow>\r\n        )}\r\n      </Marker>\r\n    ))}\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n *\r\n *  Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script>\r\n *  to your HTML to provide google.maps reference\r\n *\r\n *  @author: @chiwoojo\r\n */\r\nexport default class MapPopupInfo extends Component {\r\n  state = {\r\n    center: {\r\n      lat: 47.646935,\r\n      lng: -122.303763,\r\n    },\r\n\r\n    // array of objects of markers\r\n    markers: [\r\n      {\r\n        position: new google.maps.LatLng(47.646145, -122.303763),\r\n        showInfo: false,\r\n        infoContent: (\r\n          <Box display='flex'>\r\n            <div>\r\n              <svg\r\n                id='Layer_1'\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                width='16'\r\n                height='16'\r\n                viewBox='0 0 16 16'>\r\n                <path\r\n                  d='M3.5 0c-1.7 0-3 1.6-3 3.5 0 1.7 1 3 2.3 3.4l-.5 8c0\r\n              .6.4 1 1 1h.5c.5 0 1-.4 1-1L4 7C5.5 6.4 6.5 5 6.5\r\n              3.4c0-2-1.3-3.5-3-3.5zm10 0l-.8 5h-.6l-.3-5h-.4L11\r\n              5H10l-.8-5H9v6.5c0 .3.2.5.5.5h1.3l-.5 8c0 .6.4 1 1 1h.4c.6 0\r\n              1-.4 1-1l-.5-8h1.3c.3 0 .5-.2.5-.5V0h-.4z'\r\n                />\r\n              </svg>\r\n            </div>\r\n            <Box ml={4}>\r\n              <p>UW Medical Center</p>\r\n              <p>1959 NE Pacific St</p>\r\n              <p>Seattle, WA 98195</p>\r\n            </Box>\r\n          </Box>\r\n        ),\r\n      },\r\n      {\r\n        position: new google.maps.LatLng(47.647935, -122.303763),\r\n        showInfo: false,\r\n        infoContent: (\r\n          <Box display='flex'>\r\n            <div>\r\n              <svg\r\n                id='Layer_1'\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                width='16'\r\n                height='16'\r\n                viewBox='0 0 16 16'>\r\n                <path\r\n                  d='M6 14.5c0 .828-.672 1.5-1.5 1.5S3 15.328 3 14.5 3.672\r\n              13 4.5 13s1.5.672 1.5 1.5zM16 14.5c0 .828-.672 1.5-1.5\r\n              1.5s-1.5-.672-1.5-1.5.672-1.5 1.5-1.5 1.5.672 1.5 1.5zM16\r\n              8V2H4c0-.552-.448-1-1-1H0v1h2l.75 6.438C2.294 8.805 2 9.368\r\n              2 10c0 1.105.895 2 2 2h12v-1H4c-.552 0-1-.448-1-1v-.01L16 8z'\r\n                />\r\n              </svg>\r\n            </div>\r\n            <Box ml={4}>\r\n              <p>\r\n                University of Washington Intramural Activities (IMA) Building\r\n              </p>\r\n              <p>3924 Montlake Blvd NE</p>\r\n              <p>Seattle, WA 98195</p>\r\n            </Box>\r\n          </Box>\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleMarkerClick = this.handleMarkerClick.bind(this);\r\n  handleMarkerClose = this.handleMarkerClose.bind(this);\r\n\r\n  // Toggle to 'true' to show InfoWindow and re-renders Simple\r\n  handleMarkerClick(targetMarker) {\r\n    this.setState({\r\n      markers: this.state.markers.map((marker) => {\r\n        if (marker === targetMarker) {\r\n          return {\r\n            ...marker,\r\n            showInfo: true,\r\n          };\r\n        }\r\n        return marker;\r\n      }),\r\n    });\r\n  }\r\n\r\n  handleMarkerClose(targetMarker) {\r\n    this.setState({\r\n      markers: this.state.markers.map((marker) => {\r\n        if (marker === targetMarker) {\r\n          return {\r\n            ...marker,\r\n            showInfo: false,\r\n          };\r\n        }\r\n        return marker;\r\n      }),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PopUpInfoWindowExampleGoogleMap\r\n        containerElement={\r\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\r\n        }\r\n        mapElement={<div className='cr-embed-responsive-item' />}\r\n        center={this.state.center}\r\n        markers={this.state.markers}\r\n        onMarkerClick={this.handleMarkerClick}\r\n        onMarkerClose={this.handleMarkerClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nimport PopUpInfo from './Components/MapPopupInfo';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport PopUpInfoSource from '!raw-loader!./Components/MapPopupInfo';\r\n\r\nconst PopUpInfoEx = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='InfoWindow Google Map'\r\n        description='A wrapper around google.maps.InfoWindow'\r\n        refUrl='https://developers.google.com/maps/documentation/javascript/3.exp/reference#InfoWindow'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Google Map InfoWindow'\r\n            component={PopUpInfo}\r\n            source={PopUpInfoSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopUpInfoEx;\r\n","export default \"import React, {Component} from 'react';\\r\\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from 'react-google-maps';\\r\\nimport Box from '@material-ui/core/Box';\\r\\n\\r\\nconst google = window.google;\\r\\n\\r\\nconst PopUpInfoWindowExampleGoogleMap = withGoogleMap((props) => (\\r\\n  <GoogleMap defaultZoom={15} center={props.center}>\\r\\n    {props.markers.map((marker, index) => (\\r\\n      <Marker\\r\\n        defaultIcon={'/assets/images/marker.png'}\\r\\n        key={index}\\r\\n        position={marker.position}\\r\\n        onClick={() => props.onMarkerClick(marker)}>\\r\\n        {/*\\r\\n          Show info window only if the 'showInfo' key of the marker is true.\\r\\n          That is, when the Marker pin has been clicked and 'onCloseClick' has been\\r\\n          Successfully fired.\\r\\n        */}\\r\\n        {marker.showInfo && (\\r\\n          <InfoWindow onCloseClick={() => props.onMarkerClose(marker)}>\\r\\n            <div>{marker.infoContent}</div>\\r\\n          </InfoWindow>\\r\\n        )}\\r\\n      </Marker>\\r\\n    ))}\\r\\n  </GoogleMap>\\r\\n));\\r\\n\\r\\n/*\\r\\n *\\r\\n *  Add <script src=\\\"https://maps.googleapis.com/maps/api/js\\\"></script>\\r\\n *  to your HTML to provide google.maps reference\\r\\n *\\r\\n *  @author: @chiwoojo\\r\\n */\\r\\nexport default class MapPopupInfo extends Component {\\r\\n  state = {\\r\\n    center: {\\r\\n      lat: 47.646935,\\r\\n      lng: -122.303763,\\r\\n    },\\r\\n\\r\\n    // array of objects of markers\\r\\n    markers: [\\r\\n      {\\r\\n        position: new google.maps.LatLng(47.646145, -122.303763),\\r\\n        showInfo: false,\\r\\n        infoContent: (\\r\\n          <Box display='flex'>\\r\\n            <div>\\r\\n              <svg\\r\\n                id='Layer_1'\\r\\n                xmlns='http://www.w3.org/2000/svg'\\r\\n                width='16'\\r\\n                height='16'\\r\\n                viewBox='0 0 16 16'>\\r\\n                <path\\r\\n                  d='M3.5 0c-1.7 0-3 1.6-3 3.5 0 1.7 1 3 2.3 3.4l-.5 8c0\\r\\n              .6.4 1 1 1h.5c.5 0 1-.4 1-1L4 7C5.5 6.4 6.5 5 6.5\\r\\n              3.4c0-2-1.3-3.5-3-3.5zm10 0l-.8 5h-.6l-.3-5h-.4L11\\r\\n              5H10l-.8-5H9v6.5c0 .3.2.5.5.5h1.3l-.5 8c0 .6.4 1 1 1h.4c.6 0\\r\\n              1-.4 1-1l-.5-8h1.3c.3 0 .5-.2.5-.5V0h-.4z'\\r\\n                />\\r\\n              </svg>\\r\\n            </div>\\r\\n            <Box ml={4}>\\r\\n              <p>UW Medical Center</p>\\r\\n              <p>1959 NE Pacific St</p>\\r\\n              <p>Seattle, WA 98195</p>\\r\\n            </Box>\\r\\n          </Box>\\r\\n        ),\\r\\n      },\\r\\n      {\\r\\n        position: new google.maps.LatLng(47.647935, -122.303763),\\r\\n        showInfo: false,\\r\\n        infoContent: (\\r\\n          <Box display='flex'>\\r\\n            <div>\\r\\n              <svg\\r\\n                id='Layer_1'\\r\\n                xmlns='http://www.w3.org/2000/svg'\\r\\n                width='16'\\r\\n                height='16'\\r\\n                viewBox='0 0 16 16'>\\r\\n                <path\\r\\n                  d='M6 14.5c0 .828-.672 1.5-1.5 1.5S3 15.328 3 14.5 3.672\\r\\n              13 4.5 13s1.5.672 1.5 1.5zM16 14.5c0 .828-.672 1.5-1.5\\r\\n              1.5s-1.5-.672-1.5-1.5.672-1.5 1.5-1.5 1.5.672 1.5 1.5zM16\\r\\n              8V2H4c0-.552-.448-1-1-1H0v1h2l.75 6.438C2.294 8.805 2 9.368\\r\\n              2 10c0 1.105.895 2 2 2h12v-1H4c-.552 0-1-.448-1-1v-.01L16 8z'\\r\\n                />\\r\\n              </svg>\\r\\n            </div>\\r\\n            <Box ml={4}>\\r\\n              <p>\\r\\n                University of Washington Intramural Activities (IMA) Building\\r\\n              </p>\\r\\n              <p>3924 Montlake Blvd NE</p>\\r\\n              <p>Seattle, WA 98195</p>\\r\\n            </Box>\\r\\n          </Box>\\r\\n        ),\\r\\n      },\\r\\n    ],\\r\\n  };\\r\\n\\r\\n  handleMarkerClick = this.handleMarkerClick.bind(this);\\r\\n  handleMarkerClose = this.handleMarkerClose.bind(this);\\r\\n\\r\\n  // Toggle to 'true' to show InfoWindow and re-renders Simple\\r\\n  handleMarkerClick(targetMarker) {\\r\\n    this.setState({\\r\\n      markers: this.state.markers.map((marker) => {\\r\\n        if (marker === targetMarker) {\\r\\n          return {\\r\\n            ...marker,\\r\\n            showInfo: true,\\r\\n          };\\r\\n        }\\r\\n        return marker;\\r\\n      }),\\r\\n    });\\r\\n  }\\r\\n\\r\\n  handleMarkerClose(targetMarker) {\\r\\n    this.setState({\\r\\n      markers: this.state.markers.map((marker) => {\\r\\n        if (marker === targetMarker) {\\r\\n          return {\\r\\n            ...marker,\\r\\n            showInfo: false,\\r\\n          };\\r\\n        }\\r\\n        return marker;\\r\\n      }),\\r\\n    });\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <PopUpInfoWindowExampleGoogleMap\\r\\n        containerElement={\\r\\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\\r\\n        }\\r\\n        mapElement={<div className='cr-embed-responsive-item' />}\\r\\n        center={this.state.center}\\r\\n        markers={this.state.markers}\\r\\n        onMarkerClick={this.handleMarkerClick}\\r\\n        onMarkerClose={this.handleMarkerClose}\\r\\n      />\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\";"],"sourceRoot":""}