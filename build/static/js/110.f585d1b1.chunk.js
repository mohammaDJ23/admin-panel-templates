(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[110],{2685:function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DrawingManager=void 0;var t=u(r(1458)),a=u(r(1450)),o=u(r(1451)),l=u(r(1452)),i=u(r(1453)),p=u(r(1454)),s=u(r(1477)),c=u(r(0)),g=u(r(11)),d=r(1463),m=r(1459);function u(e){return e&&e.__esModule?e:{default:e}}var f=n.DrawingManager=function(e){function n(e,r){(0,o.default)(this,n);var l=(0,i.default)(this,(n.__proto__||(0,a.default)(n)).call(this,e,r));(0,s.default)(google.maps.drawing,'Did you include "libraries=drawing" in the URL?');var p=new google.maps.drawing.DrawingManager;return(0,d.construct)(n.propTypes,y,l.props,p),p.setMap(l.context[m.MAP]),l.state=(0,t.default)({},m.DRAWING_MANAGER,p),l}return(0,p.default)(n,e),(0,l.default)(n,[{key:"componentDidMount",value:function(){(0,d.componentDidMount)(this,this.state[m.DRAWING_MANAGER],w)}},{key:"componentDidUpdate",value:function(e){(0,d.componentDidUpdate)(this,this.state[m.DRAWING_MANAGER],w,y,e)}},{key:"componentWillUnmount",value:function(){(0,d.componentWillUnmount)(this);var e=this.state[m.DRAWING_MANAGER];e&&e.setMap(null)}},{key:"render",value:function(){return!1}},{key:"getDrawingMode",value:function(){return this.state[m.DRAWING_MANAGER].getDrawingMode()}}]),n}(c.default.PureComponent);f.propTypes={defaultDrawingMode:g.default.any,defaultOptions:g.default.any,drawingMode:g.default.any,options:g.default.any,onCircleComplete:g.default.func,onMarkerComplete:g.default.func,onOverlayComplete:g.default.func,onPolygonComplete:g.default.func,onPolylineComplete:g.default.func,onRectangleComplete:g.default.func},f.contextTypes=(0,t.default)({},m.MAP,g.default.object),n.default=f;var w={onCircleComplete:"circlecomplete",onMarkerComplete:"markercomplete",onOverlayComplete:"overlaycomplete",onPolygonComplete:"polygoncomplete",onPolylineComplete:"polylinecomplete",onRectangleComplete:"rectanglecomplete"},y={drawingMode:function(e,n){e.setDrawingMode(n)},options:function(e,n){e.setOptions(n)}}},3159:function(e,n,r){"use strict";r.r(n);var t=r(0),a=r.n(t),o=r(408),l=r(407),i=r(406),p=r(359),s=r(413),c=r(414),g=r(416),d=r(415),m=r(1484),u=r(2685),f=r.n(u),w=window.google,y=Object(m.withGoogleMap)((function(e){return a.a.createElement(m.GoogleMap,{defaultZoom:15,defaultCenter:new w.maps.LatLng(47.646935,-122.303763)},a.a.createElement(f.a,{defaultDrawingMode:w.maps.drawing.OverlayType.CIRCLE,defaultOptions:{drawingControl:!0,drawingControlOptions:{position:w.maps.ControlPosition.TOP_CENTER,drawingModes:[w.maps.drawing.OverlayType.CIRCLE,w.maps.drawing.OverlayType.POLYGON,w.maps.drawing.OverlayType.POLYLINE,w.maps.drawing.OverlayType.RECTANGLE]},circleOptions:{fillColor:"#ff0000",fillOpacity:.2,strokeWeight:3,clickable:!1,editable:!0,zIndex:1},rectangleOptions:{fillColor:"#ff0000",fillOpacity:.2,strokeWeight:3,clickable:!1,editable:!0,zIndex:1}}}))})),M=function(e){Object(g.a)(r,e);var n=Object(d.a)(r);function r(){return Object(s.a)(this,r),n.apply(this,arguments)}return Object(c.a)(r,[{key:"render",value:function(){return a.a.createElement(y,{containerElement:a.a.createElement("div",{className:"cr-embed-responsive cr-embed-responsive-21by9"}),mapElement:a.a.createElement("div",{className:"cr-embed-responsive-item"})})}}]),r}(t.Component);n.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(l.a,{title:"Drawing View Google Map",description:"A wrapper around google.maps.drawing.DrawingManager",refUrl:"https://developers.google.com/maps/documentation/javascript/reference/#DrawingManager/"}),a.a.createElement(i.a,null,a.a.createElement(p.a,{item:!0,xs:12},a.a.createElement(o.a,{title:"Drawing View Map",component:M,source:"import React, {Component} from 'react';\r\nimport {GoogleMap, withGoogleMap} from 'react-google-maps';\r\nimport DrawingManager from 'react-google-maps/lib/components/drawing/DrawingManager';\r\n\r\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"><\/script> to your HTML to provide google.maps reference\r\n */\r\n\r\n/*\r\n * https://developers.google.com/maps/documentation/javascript/examples/drawing-tools\r\n *\r\n * Note: requires the Google Maps drawing API library in your script src\r\n *\r\n * Credits: thanks @idolize for the contribution!\r\n */\r\n\r\nconst google = window.google;\r\n\r\nconst DrawingExampleGoogleMap = withGoogleMap((props) => (\r\n  <GoogleMap\r\n    defaultZoom={15}\r\n    defaultCenter={new google.maps.LatLng(47.646935, -122.303763)}>\r\n    <DrawingManager\r\n      defaultDrawingMode={google.maps.drawing.OverlayType.CIRCLE}\r\n      defaultOptions={{\r\n        drawingControl: true,\r\n        drawingControlOptions: {\r\n          position: google.maps.ControlPosition.TOP_CENTER,\r\n          drawingModes: [\r\n            google.maps.drawing.OverlayType.CIRCLE,\r\n            google.maps.drawing.OverlayType.POLYGON,\r\n            google.maps.drawing.OverlayType.POLYLINE,\r\n            google.maps.drawing.OverlayType.RECTANGLE,\r\n          ],\r\n        },\r\n        circleOptions: {\r\n          fillColor: '#ff0000',\r\n          fillOpacity: 0.2,\r\n          strokeWeight: 3,\r\n          clickable: false,\r\n          editable: true,\r\n          zIndex: 1,\r\n        },\r\n        rectangleOptions: {\r\n          fillColor: '#ff0000',\r\n          fillOpacity: 0.2,\r\n          strokeWeight: 3,\r\n          clickable: false,\r\n          editable: true,\r\n          zIndex: 1,\r\n        },\r\n      }}\r\n    />\r\n  </GoogleMap>\r\n));\r\nexport default class DrawingView extends Component {\r\n  render() {\r\n    return (\r\n      <DrawingExampleGoogleMap\r\n        containerElement={\r\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\r\n        }\r\n        mapElement={<div className='cr-embed-responsive-item' />}\r\n      />\r\n    );\r\n  }\r\n}\r\n"}))))}}}]);
//# sourceMappingURL=110.f585d1b1.chunk.js.map