{"version":3,"sources":["../node_modules/@material-ui/icons/CheckCircleOutline.js","modules/muiComponents/util/Alerts/Simple.js","webpack:///./src/modules/muiComponents/util/Alerts/Simple.js?7e86","../node_modules/@material-ui/lab/esm/AlertTitle/AlertTitle.js","modules/muiComponents/util/Alerts/Description.js","webpack:///./src/modules/muiComponents/util/Alerts/Description.js?5ee8","modules/muiComponents/util/Alerts/Actions.js","webpack:///./src/modules/muiComponents/util/Alerts/Actions.js?826e","modules/muiComponents/util/Alerts/Transition.js","webpack:///./src/modules/muiComponents/util/Alerts/Transition.js?6a6e","modules/muiComponents/util/Alerts/Icons.js","webpack:///./src/modules/muiComponents/util/Alerts/Icons.js?d67c","modules/muiComponents/util/Alerts/Variants.js","webpack:///./src/modules/muiComponents/util/Alerts/Variants.js?1055","modules/muiComponents/util/Alerts/Filled.js","modules/muiComponents/util/Alerts/index.js","webpack:///./src/modules/muiComponents/util/Alerts/Filled.js?3044"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","root","width","marginTop","spacing","SimpleAlerts","classes","className","Alert","severity","AlertTitle","React","props","ref","other","_objectWithoutProperties","Typography","_extends","gutterBottom","component","clsx","withStyles","fontWeight","typography","fontWeightMedium","name","DescriptionAlerts","ActionAlerts","onClose","action","Button","color","size","TransitionAlerts","useState","open","setOpen","Collapse","in","IconButton","aria-label","onClick","fontSize","disabled","variant","IconAlerts","icon","iconMapping","success","Modals","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","Simple","source","Description","Actions","Transition","Icons","Variants","Filled"],"mappings":"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","file":"static/js/109.200c43c1.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\n\nexports.default = _default;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SimpleAlerts() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert severity='error'>This is an error alert — check it out!</Alert>\r\n      <Alert severity='warning'>This is a warning alert — check it out!</Alert>\r\n      <Alert severity='info'>This is an info alert — check it out!</Alert>\r\n      <Alert severity='success'>This is a success alert — check it out!</Alert>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Alert from '@material-ui/lab/Alert';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    '& > * + *': {\\r\\n      marginTop: theme.spacing(2),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SimpleAlerts() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Alert severity='error'>This is an error alert — check it out!</Alert>\\r\\n      <Alert severity='warning'>This is a warning alert — check it out!</Alert>\\r\\n      <Alert severity='info'>This is an info alert — check it out!</Alert>\\r\\n      <Alert severity='success'>This is a success alert — check it out!</Alert>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontWeight: theme.typography.fontWeightMedium,\n      marginTop: -2\n    }\n  };\n};\nvar AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlertTitle'\n})(AlertTitle);","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Alert, AlertTitle} from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DescriptionAlerts() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert severity='error'>\r\n        <AlertTitle>Error</AlertTitle>\r\n        This is an error alert — <strong>check it out!</strong>\r\n      </Alert>\r\n      <Alert severity='warning'>\r\n        <AlertTitle>Warning</AlertTitle>\r\n        This is a warning alert — <strong>check it out!</strong>\r\n      </Alert>\r\n      <Alert severity='info'>\r\n        <AlertTitle>Info</AlertTitle>\r\n        This is an info alert — <strong>check it out!</strong>\r\n      </Alert>\r\n      <Alert severity='success'>\r\n        <AlertTitle>Success</AlertTitle>\r\n        This is a success alert — <strong>check it out!</strong>\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport {Alert, AlertTitle} from '@material-ui/lab';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    '& > * + *': {\\r\\n      marginTop: theme.spacing(2),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function DescriptionAlerts() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Alert severity='error'>\\r\\n        <AlertTitle>Error</AlertTitle>\\r\\n        This is an error alert — <strong>check it out!</strong>\\r\\n      </Alert>\\r\\n      <Alert severity='warning'>\\r\\n        <AlertTitle>Warning</AlertTitle>\\r\\n        This is a warning alert — <strong>check it out!</strong>\\r\\n      </Alert>\\r\\n      <Alert severity='info'>\\r\\n        <AlertTitle>Info</AlertTitle>\\r\\n        This is an info alert — <strong>check it out!</strong>\\r\\n      </Alert>\\r\\n      <Alert severity='success'>\\r\\n        <AlertTitle>Success</AlertTitle>\\r\\n        This is a success alert — <strong>check it out!</strong>\\r\\n      </Alert>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ActionAlerts() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert onClose={() => {}}>This is a success alert — check it out!</Alert>\r\n      <Alert\r\n        action={\r\n          <Button color='inherit' size='small'>\r\n            UNDO\r\n          </Button>\r\n        }>\r\n        This is a success alert — check it out!\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Alert from '@material-ui/lab/Alert';\\r\\nimport Button from '@material-ui/core/Button';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    '& > * + *': {\\r\\n      marginTop: theme.spacing(2),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function ActionAlerts() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Alert onClose={() => {}}>This is a success alert — check it out!</Alert>\\r\\n      <Alert\\r\\n        action={\\r\\n          <Button color='inherit' size='small'>\\r\\n            UNDO\\r\\n          </Button>\\r\\n        }>\\r\\n        This is a success alert — check it out!\\r\\n      </Alert>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function TransitionAlerts() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Collapse in={open}>\r\n        <Alert\r\n          action={\r\n            <IconButton\r\n              aria-label='close'\r\n              color='inherit'\r\n              size='small'\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}>\r\n              <CloseIcon fontSize='inherit' />\r\n            </IconButton>\r\n          }>\r\n          Close me!\r\n        </Alert>\r\n      </Collapse>\r\n      <Button\r\n        disabled={open}\r\n        variant='outlined'\r\n        onClick={() => {\r\n          setOpen(true);\r\n        }}>\r\n        Re-open\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Alert from '@material-ui/lab/Alert';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport Collapse from '@material-ui/core/Collapse';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport CloseIcon from '@material-ui/icons/Close';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    '& > * + *': {\\r\\n      marginTop: theme.spacing(2),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function TransitionAlerts() {\\r\\n  const classes = useStyles();\\r\\n  const [open, setOpen] = React.useState(true);\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Collapse in={open}>\\r\\n        <Alert\\r\\n          action={\\r\\n            <IconButton\\r\\n              aria-label='close'\\r\\n              color='inherit'\\r\\n              size='small'\\r\\n              onClick={() => {\\r\\n                setOpen(false);\\r\\n              }}>\\r\\n              <CloseIcon fontSize='inherit' />\\r\\n            </IconButton>\\r\\n          }>\\r\\n          Close me!\\r\\n        </Alert>\\r\\n      </Collapse>\\r\\n      <Button\\r\\n        disabled={open}\\r\\n        variant='outlined'\\r\\n        onClick={() => {\\r\\n          setOpen(true);\\r\\n        }}>\\r\\n        Re-open\\r\\n      </Button>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function IconAlerts() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert icon={<CheckIcon fontSize='inherit' />} severity='success'>\r\n        This is a success alert — check it out!\r\n      </Alert>\r\n      <Alert\r\n        iconMapping={{success: <CheckCircleOutlineIcon fontSize='inherit' />}}>\r\n        This is a success alert — check it out!\r\n      </Alert>\r\n      <Alert icon={false} severity='success'>\r\n        This is a success alert — check it out!\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Alert from '@material-ui/lab/Alert';\\r\\nimport CheckIcon from '@material-ui/icons/Check';\\r\\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    '& > * + *': {\\r\\n      marginTop: theme.spacing(2),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function IconAlerts() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Alert icon={<CheckIcon fontSize='inherit' />} severity='success'>\\r\\n        This is a success alert — check it out!\\r\\n      </Alert>\\r\\n      <Alert\\r\\n        iconMapping={{success: <CheckCircleOutlineIcon fontSize='inherit' />}}>\\r\\n        This is a success alert — check it out!\\r\\n      </Alert>\\r\\n      <Alert icon={false} severity='success'>\\r\\n        This is a success alert — check it out!\\r\\n      </Alert>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SimpleAlerts() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert variant='outlined' severity='error'>\r\n        This is an error alert — check it out!\r\n      </Alert>\r\n      <Alert variant='outlined' severity='warning'>\r\n        This is a warning alert — check it out!\r\n      </Alert>\r\n      <Alert variant='outlined' severity='info'>\r\n        This is an info alert — check it out!\r\n      </Alert>\r\n      <Alert variant='outlined' severity='success'>\r\n        This is a success alert — check it out!\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Alert from '@material-ui/lab/Alert';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    '& > * + *': {\\r\\n      marginTop: theme.spacing(2),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SimpleAlerts() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Alert variant='outlined' severity='error'>\\r\\n        This is an error alert — check it out!\\r\\n      </Alert>\\r\\n      <Alert variant='outlined' severity='warning'>\\r\\n        This is a warning alert — check it out!\\r\\n      </Alert>\\r\\n      <Alert variant='outlined' severity='info'>\\r\\n        This is an info alert — check it out!\\r\\n      </Alert>\\r\\n      <Alert variant='outlined' severity='success'>\\r\\n        This is a success alert — check it out!\\r\\n      </Alert>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SimpleAlerts() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert variant='filled' severity='error'>\r\n        This is an error alert — check it out!\r\n      </Alert>\r\n      <Alert variant='filled' severity='warning'>\r\n        This is a warning alert — check it out!\r\n      </Alert>\r\n      <Alert variant='filled' severity='info'>\r\n        This is an info alert — check it out!\r\n      </Alert>\r\n      <Alert variant='filled' severity='success'>\r\n        This is a success alert — check it out!\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nimport Simple from './Simple';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SimpleSource from '!raw-loader!./Simple';\r\nimport Description from './Description';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport DescriptionSource from '!raw-loader!./Description';\r\nimport Actions from './Actions';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ActionsSource from '!raw-loader!./Actions';\r\n\r\nimport Transition from './Transition';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport TransitionSource from '!raw-loader!./Transition';\r\n\r\nimport Icons from './Icons';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport IconsSource from '!raw-loader!./Icons';\r\nimport Variants from './Variants';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport VariantsSource from '!raw-loader!./Variants';\r\nimport Filled from './Filled';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport FilledSource from '!raw-loader!./Filled';\r\n\r\nconst Modals = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Alert'\r\n        description=\"An alert displays a short, important message in a way that attracts the user's attention without interrupting the user's task.\"\r\n        refUrl='https://material-ui.com/components/alert/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Simple alerts'\r\n            component={Simple}\r\n            source={SimpleSource}\r\n            description='The alert offers four severity levels that set a distinctive icon and color.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Description'\r\n            component={Description}\r\n            source={DescriptionSource}\r\n            description='You can use the AlertTitle component to display a formatted title above the content.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Actions'\r\n            component={Actions}\r\n            source={ActionsSource}\r\n            description='An alert can have an action, such as a close or undo button. It is rendered after the message, at the end of the alert.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Transition'\r\n            component={Transition}\r\n            source={TransitionSource}\r\n            description='You can use a transition component such as Collapse to transition the appearance of the alert.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Icons'\r\n            component={Icons}\r\n            source={IconsSource}\r\n            description='The icon prop allows you to add an icon to the beginning of the alert component. This will override the default icon for the specified severity.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Variants'\r\n            component={Variants}\r\n            source={VariantsSource}\r\n            description='Two additional variants are available – outlined, and filled:'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Filled'\r\n            component={Filled}\r\n            source={FilledSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modals;\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Alert from '@material-ui/lab/Alert';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    '& > * + *': {\\r\\n      marginTop: theme.spacing(2),\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SimpleAlerts() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Alert variant='filled' severity='error'>\\r\\n        This is an error alert — check it out!\\r\\n      </Alert>\\r\\n      <Alert variant='filled' severity='warning'>\\r\\n        This is a warning alert — check it out!\\r\\n      </Alert>\\r\\n      <Alert variant='filled' severity='info'>\\r\\n        This is an info alert — check it out!\\r\\n      </Alert>\\r\\n      <Alert variant='filled' severity='success'>\\r\\n        This is a success alert — check it out!\\r\\n      </Alert>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}