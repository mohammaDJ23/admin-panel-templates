(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[121],{3091:function(e,r,n){"use strict";n.r(r);var a=n(0),t=n.n(a),l=n(359),o=n(408),i=n(407),c=n(406),s=n(167),m=n(513),d=n(514),u=n(515),b=n(518),p=n(520),g=n(122),h=Object(s.a)((function(e){return{root:{width:"100%",marginTop:e.spacing(3),overflowX:"auto"},table:{minWidth:650}}}));function T(e,r,n,a,t){return{name:e,calories:r,fat:n,carbs:a,protein:t}}var f=[T("Frozen yoghurt",159,6,24,4),T("Ice cream sandwich",237,9,37,4.3),T("Eclair",262,16,24,6),T("Cupcake",305,3.7,67,4.3),T("Gingerbread",356,16,49,3.9)];function w(){var e=h();return t.a.createElement(g.a,{className:e.root},t.a.createElement(m.a,{className:e.table},t.a.createElement(b.a,null,t.a.createElement(p.a,null,t.a.createElement(u.a,null,"Dessert (100g serving)"),t.a.createElement(u.a,{align:"right"},"Calories"),t.a.createElement(u.a,{align:"right"},"Fat\xa0(g)"),t.a.createElement(u.a,{align:"right"},"Carbs\xa0(g)"),t.a.createElement(u.a,{align:"right"},"Protein\xa0(g)"))),t.a.createElement(d.a,null,f.map((function(e){return t.a.createElement(p.a,{key:e.name},t.a.createElement(u.a,{component:"th",scope:"row"},e.name),t.a.createElement(u.a,{align:"right"},e.calories),t.a.createElement(u.a,{align:"right"},e.fat),t.a.createElement(u.a,{align:"right"},e.carbs),t.a.createElement(u.a,{align:"right"},e.protein))})))))}var y=Object(s.a)((function(e){return{root:{width:"100%"},paper:{marginTop:e.spacing(3),width:"100%",overflowX:"auto",marginBottom:e.spacing(2)},table:{minWidth:650}}}));function C(e,r,n,a,t){return{name:e,calories:r,fat:n,carbs:a,protein:t}}var P=[C("Frozen yoghurt",159,6,24,4),C("Ice cream sandwich",237,9,37,4.3),C("Eclair",262,16,24,6),C("Cupcake",305,3.7,67,4.3),C("Gingerbread",356,16,49,3.9)];function E(){var e=y();return t.a.createElement("div",{className:e.root},t.a.createElement(g.a,{className:e.paper},t.a.createElement(m.a,{className:e.table,size:"small"},t.a.createElement(b.a,null,t.a.createElement(p.a,null,t.a.createElement(u.a,null,"Dessert (100g serving)"),t.a.createElement(u.a,{align:"right"},"Calories"),t.a.createElement(u.a,{align:"right"},"Fat\xa0(g)"),t.a.createElement(u.a,{align:"right"},"Carbs\xa0(g)"),t.a.createElement(u.a,{align:"right"},"Protein\xa0(g)"))),t.a.createElement(d.a,null,P.map((function(e){return t.a.createElement(p.a,{key:e.name},t.a.createElement(u.a,{component:"th",scope:"row"},e.name),t.a.createElement(u.a,{align:"right"},e.calories),t.a.createElement(u.a,{align:"right"},e.fat),t.a.createElement(u.a,{align:"right"},e.carbs),t.a.createElement(u.a,{align:"right"},e.protein))}))))))}var S=n(23),v=n(3),R=n(4),k=n(19),x=n(539),D=n(540),B=n(519),I=n(82),N=n(532),O=n(197),H=n(523),F=n(491),j=n(511),z=n(1444),A=n.n(z),W=n(1821),K=n.n(W);function q(e,r,n,a,t){return{name:e,calories:r,fat:n,carbs:a,protein:t}}var L=[q("Cupcake",305,3.7,67,4.3),q("Donut",452,25,51,4.9),q("Eclair",262,16,24,6),q("Frozen yoghurt",159,6,24,4),q("Gingerbread",356,16,49,3.9),q("Honeycomb",408,3.2,87,6.5),q("Ice cream sandwich",237,9,37,4.3),q("Jelly Bean",375,0,94,0),q("KitKat",518,26,65,7),q("Lollipop",392,.2,98,0),q("Marshmallow",318,0,81,2),q("Nougat",360,19,9,37),q("Oreo",437,18,63,4)];function M(e,r,n){return r[n]<e[n]?-1:r[n]>e[n]?1:0}var G=[{id:"name",numeric:!1,disablePadding:!0,label:"Dessert (100g serving)"},{id:"calories",numeric:!0,disablePadding:!1,label:"Calories"},{id:"fat",numeric:!0,disablePadding:!1,label:"Fat (g)"},{id:"carbs",numeric:!0,disablePadding:!1,label:"Carbs (g)"},{id:"protein",numeric:!0,disablePadding:!1,label:"Protein (g)"}];function X(e){var r=e.classes,n=e.onSelectAllClick,a=e.order,l=e.orderBy,o=e.numSelected,i=e.rowCount,c=e.onRequestSort;return t.a.createElement(b.a,null,t.a.createElement(p.a,null,t.a.createElement(u.a,{padding:"checkbox"},t.a.createElement(N.a,{indeterminate:o>0&&o<i,checked:o===i,onChange:n,inputProps:{"aria-label":"select all desserts"}})),G.map((function(e){return t.a.createElement(u.a,{key:e.id,align:e.numeric?"right":"left",padding:e.disablePadding?"none":"default",sortDirection:l===e.id&&a},t.a.createElement(D.a,{active:l===e.id,direction:a,onClick:(n=e.id,function(e){c(e,n)})},e.label,l===e.id?t.a.createElement("span",{className:r.visuallyHidden},"desc"===a?"sorted descending":"sorted ascending"):null));var n}))))}var U=Object(s.a)((function(e){return{root:{paddingLeft:e.spacing(2),paddingRight:e.spacing(1)},highlight:"light"===e.palette.type?{color:e.palette.secondary.main,backgroundColor:Object(k.i)(e.palette.secondary.light,.85)}:{color:e.palette.text.primary,backgroundColor:e.palette.secondary.dark},spacer:{flex:"1 1 100%"},actions:{color:e.palette.text.secondary},title:{flex:"0 0 auto"}}})),J=function(e){var r=U(),n=e.numSelected;return t.a.createElement(B.a,{className:Object(R.default)(r.root,Object(v.a)({},r.highlight,n>0))},t.a.createElement("div",{className:r.title},n>0?t.a.createElement(I.a,{color:"inherit",variant:"subtitle1"},n," selected"):t.a.createElement(I.a,{variant:"h6",id:"tableTitle"},"Nutrition")),t.a.createElement("div",{className:r.spacer}),t.a.createElement("div",{className:r.actions},n>0?t.a.createElement(H.a,{title:"Delete"},t.a.createElement(O.a,{"aria-label":"delete"},t.a.createElement(A.a,null))):t.a.createElement(H.a,{title:"Filter list"},t.a.createElement(O.a,{"aria-label":"filter list"},t.a.createElement(K.a,null)))))},Y=Object(s.a)((function(e){return{root:{width:"100%",marginTop:e.spacing(3)},paper:{width:"100%",marginBottom:e.spacing(2)},table:{minWidth:750},tableWrapper:{overflowX:"auto"},visuallyHidden:{border:0,clip:"rect(0 0 0 0)",height:1,margin:-1,overflow:"hidden",padding:0,position:"absolute",top:20,width:1}}}));function V(){var e=Y(),r=t.a.useState("asc"),n=Object(S.a)(r,2),a=n[0],l=n[1],o=t.a.useState("calories"),i=Object(S.a)(o,2),c=i[0],s=i[1],b=t.a.useState([]),h=Object(S.a)(b,2),T=h[0],f=h[1],w=t.a.useState(0),y=Object(S.a)(w,2),C=y[0],P=y[1],E=t.a.useState(!1),v=Object(S.a)(E,2),R=v[0],k=v[1],D=t.a.useState(5),B=Object(S.a)(D,2),I=B[0],O=B[1];var H=I-Math.min(I,L.length-C*I);return t.a.createElement("div",{className:e.root},t.a.createElement(g.a,{className:e.paper},t.a.createElement(J,{numSelected:T.length}),t.a.createElement("div",{className:e.tableWrapper},t.a.createElement(m.a,{className:e.table,"aria-labelledby":"tableTitle",size:R?"small":"medium"},t.a.createElement(X,{classes:e,numSelected:T.length,order:a,orderBy:c,onSelectAllClick:function(e){if(e.target.checked){var r=L.map((function(e){return e.name}));f(r)}else f([])},onRequestSort:function(e,r){l(c===r&&"desc"===a?"asc":"desc"),s(r)},rowCount:L.length}),t.a.createElement(d.a,null,function(e,r){var n=e.map((function(e,r){return[e,r]}));return n.sort((function(e,n){var a=r(e[0],n[0]);return 0!==a?a:e[1]-n[1]})),n.map((function(e){return e[0]}))}(L,function(e,r){return"desc"===e?function(e,n){return M(e,n,r)}:function(e,n){return-M(e,n,r)}}(a,c)).slice(C*I,C*I+I).map((function(e,r){var n,a=(n=e.name,-1!==T.indexOf(n)),l="enhanced-table-checkbox-".concat(r);return t.a.createElement(p.a,{hover:!0,onClick:function(r){return function(e,r){var n=T.indexOf(r),a=[];-1===n?a=a.concat(T,r):0===n?a=a.concat(T.slice(1)):n===T.length-1?a=a.concat(T.slice(0,-1)):n>0&&(a=a.concat(T.slice(0,n),T.slice(n+1))),f(a)}(0,e.name)},role:"checkbox","aria-checked":a,tabIndex:-1,key:e.name,selected:a},t.a.createElement(u.a,{padding:"checkbox"},t.a.createElement(N.a,{checked:a,inputProps:{"aria-labelledby":l}})),t.a.createElement(u.a,{component:"th",id:l,scope:"row",padding:"none"},e.name),t.a.createElement(u.a,{align:"right"},e.calories),t.a.createElement(u.a,{align:"right"},e.fat),t.a.createElement(u.a,{align:"right"},e.carbs),t.a.createElement(u.a,{align:"right"},e.protein))})),H>0&&t.a.createElement(p.a,{style:{height:49*H}},t.a.createElement(u.a,{colSpan:6}))))),t.a.createElement(x.a,{rowsPerPageOptions:[5,10,25],component:"div",count:L.length,rowsPerPage:I,page:C,backIconButtonProps:{"aria-label":"previous page"},nextIconButtonProps:{"aria-label":"next page"},onChangePage:function(e,r){P(r)},onChangeRowsPerPage:function(e){O(+e.target.value),P(0)}})),t.a.createElement(F.a,{control:t.a.createElement(j.a,{checked:R,onChange:function(e){k(e.target.checked)}}),label:"Dense padding"}))}var $=n(10),_=Object($.a)((function(e){return{head:{backgroundColor:e.palette.common.black,color:e.palette.common.white},body:{fontSize:14}}}))(u.a),Q=Object($.a)((function(e){return{root:{"&:nth-of-type(odd)":{backgroundColor:e.palette.background.default}}}}))(p.a);function Z(e,r,n,a,t){return{name:e,calories:r,fat:n,carbs:a,protein:t}}var ee=[Z("Frozen yoghurt",159,6,24,4),Z("Ice cream sandwich",237,9,37,4.3),Z("Eclair",262,16,24,6),Z("Cupcake",305,3.7,67,4.3),Z("Gingerbread",356,16,49,3.9)],re=Object(s.a)((function(e){return{root:{width:"100%",marginTop:e.spacing(3),overflowX:"auto"},table:{minWidth:700}}}));function ne(){var e=re();return t.a.createElement(g.a,{className:e.root},t.a.createElement(m.a,{className:e.table},t.a.createElement(b.a,null,t.a.createElement(p.a,null,t.a.createElement(_,null,"Dessert (100g serving)"),t.a.createElement(_,{align:"right"},"Calories"),t.a.createElement(_,{align:"right"},"Fat\xa0(g)"),t.a.createElement(_,{align:"right"},"Carbs\xa0(g)"),t.a.createElement(_,{align:"right"},"Protein\xa0(g)"))),t.a.createElement(d.a,null,ee.map((function(e){return t.a.createElement(Q,{key:e.name},t.a.createElement(_,{component:"th",scope:"row"},e.name),t.a.createElement(_,{align:"right"},e.calories),t.a.createElement(_,{align:"right"},e.fat),t.a.createElement(_,{align:"right"},e.carbs),t.a.createElement(_,{align:"right"},e.protein))})))))}var ae=n(40),te=n(517),le=n(2361),oe=n.n(le),ie=n(1592),ce=n.n(ie),se=n(1593),me=n.n(se),de=n(2360),ue=n.n(de),be=Object(s.a)((function(e){return{root:{flexShrink:0,color:e.palette.text.secondary,marginLeft:e.spacing(2.5)}}}));function pe(e){var r=be(),n=Object(ae.a)(),a=e.count,l=e.page,o=e.rowsPerPage,i=e.onChangePage;return t.a.createElement("div",{className:r.root},t.a.createElement(O.a,{onClick:function(e){i(e,0)},disabled:0===l,"aria-label":"first page"},"rtl"===n.direction?t.a.createElement(ue.a,null):t.a.createElement(oe.a,null)),t.a.createElement(O.a,{onClick:function(e){i(e,l-1)},disabled:0===l,"aria-label":"previous page"},"rtl"===n.direction?t.a.createElement(me.a,null):t.a.createElement(ce.a,null)),t.a.createElement(O.a,{onClick:function(e){i(e,l+1)},disabled:l>=Math.ceil(a/o)-1,"aria-label":"next page"},"rtl"===n.direction?t.a.createElement(ce.a,null):t.a.createElement(me.a,null)),t.a.createElement(O.a,{onClick:function(e){i(e,Math.max(0,Math.ceil(a/o)-1))},disabled:l>=Math.ceil(a/o)-1,"aria-label":"last page"},"rtl"===n.direction?t.a.createElement(oe.a,null):t.a.createElement(ue.a,null)))}function ge(e,r,n){return{name:e,calories:r,fat:n}}var he=[ge("Cupcake",305,3.7),ge("Donut",452,25),ge("Eclair",262,16),ge("Frozen yoghurt",159,6),ge("Gingerbread",356,16),ge("Honeycomb",408,3.2),ge("Ice cream sandwich",237,9),ge("Jelly Bean",375,0),ge("KitKat",518,26),ge("Lollipop",392,.2),ge("Marshmallow",318,0),ge("Nougat",360,19),ge("Oreo",437,18)].sort((function(e,r){return e.calories<r.calories?-1:1})),Te=Object(s.a)((function(e){return{root:{width:"100%",marginTop:e.spacing(3)},table:{minWidth:500},tableWrapper:{overflowX:"auto"}}}));function fe(){var e=Te(),r=t.a.useState(0),n=Object(S.a)(r,2),a=n[0],l=n[1],o=t.a.useState(5),i=Object(S.a)(o,2),c=i[0],s=i[1],b=c-Math.min(c,he.length-a*c);return t.a.createElement(g.a,{className:e.root},t.a.createElement("div",{className:e.tableWrapper},t.a.createElement(m.a,{className:e.table},t.a.createElement(d.a,null,he.slice(a*c,a*c+c).map((function(e){return t.a.createElement(p.a,{key:e.name},t.a.createElement(u.a,{component:"th",scope:"row"},e.name),t.a.createElement(u.a,{align:"right"},e.calories),t.a.createElement(u.a,{align:"right"},e.fat))})),b>0&&t.a.createElement(p.a,{style:{height:48*b}},t.a.createElement(u.a,{colSpan:6}))),t.a.createElement(te.a,null,t.a.createElement(p.a,null,t.a.createElement(x.a,{rowsPerPageOptions:[5,10,25],colSpan:3,count:he.length,rowsPerPage:c,page:a,SelectProps:{inputProps:{"aria-label":"rows per page"},native:!0},onChangePage:function(e,r){l(r)},onChangeRowsPerPage:function(e){s(parseInt(e.target.value,10)),l(0)},ActionsComponent:pe}))))))}var we=[{id:"name",label:"Name",minWidth:200},{id:"code",label:"ISO\xa0Code",minWidth:100},{id:"population",label:"Population",minWidth:120,align:"right",format:function(e){return e.toLocaleString()}},{id:"size",label:"Size\xa0(km\xb2)",minWidth:120,align:"right",format:function(e){return e.toLocaleString()}},{id:"density",label:"Density",minWidth:120,align:"right",format:function(e){return e.toFixed(2)}}];function ye(e,r,n,a){return{name:e,code:r,population:n,size:a,density:n/a}}var Ce=[ye("India","IN",1324171354,3287263),ye("China","CN",1403500365,9596961),ye("Italy","IT",60483973,301340),ye("United States","US",327167434,9833520),ye("Canada","CA",37602103,9984670),ye("Australia","AU",25475400,7692024),ye("Germany","DE",83019200,357578),ye("Ireland","IE",4857e3,70273),ye("Mexico","MX",126577691,1972550),ye("Japan","JP",126317e3,377973),ye("France","FR",67022e3,640679),ye("United Kingdom","GB",67545757,242495),ye("Russia","RU",146793744,17098246),ye("Nigeria","NG",200962417,923768),ye("Brazil","BR",210147125,8515767)],Pe=Object(s.a)({root:{width:"100%"},tableWrapper:{maxHeight:407,overflow:"auto"}});function Ee(){var e=Pe(),r=t.a.useState(0),n=Object(S.a)(r,2),a=n[0],l=n[1],o=t.a.useState(10),i=Object(S.a)(o,2),c=i[0],s=i[1];return t.a.createElement(g.a,{className:e.root},t.a.createElement("div",{className:e.tableWrapper},t.a.createElement(m.a,{stickyHeader:!0},t.a.createElement(b.a,null,t.a.createElement(p.a,null,we.map((function(e){return t.a.createElement(u.a,{key:e.id,align:e.align,style:{minWidth:e.minWidth}},e.label)})))),t.a.createElement(d.a,null,Ce.slice(a*c,a*c+c).map((function(e){return t.a.createElement(p.a,{hover:!0,role:"checkbox",tabIndex:-1,key:e.code},we.map((function(r){var n=e[r.id];return t.a.createElement(u.a,{key:r.id,align:r.align},r.format&&"number"===typeof n?r.format(n):n)})))}))))),t.a.createElement(x.a,{rowsPerPageOptions:[10,25,100],component:"div",count:Ce.length,rowsPerPage:c,page:a,backIconButtonProps:{"aria-label":"previous page"},nextIconButtonProps:{"aria-label":"next page"},onChangePage:function(e,r){l(r)},onChangeRowsPerPage:function(e){s(+e.target.value),l(0)}}))}var Se=Object(s.a)((function(e){return{root:{width:"100%",marginTop:e.spacing(3),overflowX:"auto"},table:{minWidth:700}}}));function ve(e){return"".concat(e.toFixed(2))}function Re(e,r,n){return{desc:e,qty:r,unit:n,price:function(e,r){return e*r}(r,n)}}var ke=[Re("Paperclips (Box)",100,1.15),Re("Paper (Case)",10,45.99),Re("Waste Basket",2,17.99)],xe=ke.map((function(e){return e.price})).reduce((function(e,r){return e+r}),0),De=.07*xe,Be=De+xe;function Ie(){var e=Se();return t.a.createElement(g.a,{className:e.root},t.a.createElement(m.a,{className:e.table},t.a.createElement(b.a,null,t.a.createElement(p.a,null,t.a.createElement(u.a,null,"Desc"),t.a.createElement(u.a,{align:"right"},"Qty."),t.a.createElement(u.a,{align:"right"},"@"),t.a.createElement(u.a,{align:"right"},"Price"))),t.a.createElement(d.a,null,ke.map((function(e){return t.a.createElement(p.a,{key:e.desc},t.a.createElement(u.a,null,e.desc),t.a.createElement(u.a,{align:"right"},e.qty),t.a.createElement(u.a,{align:"right"},e.unit),t.a.createElement(u.a,{align:"right"},ve(e.price)))})),t.a.createElement(p.a,null,t.a.createElement(u.a,{rowSpan:3}),t.a.createElement(u.a,{colSpan:2},"Subtotal"),t.a.createElement(u.a,{align:"right"},ve(xe))),t.a.createElement(p.a,null,t.a.createElement(u.a,null,"Tax"),t.a.createElement(u.a,{align:"right"},"".concat((.07*100).toFixed(0)," %")),t.a.createElement(u.a,{align:"right"},ve(De))),t.a.createElement(p.a,null,t.a.createElement(u.a,{colSpan:2},"Total"),t.a.createElement(u.a,{align:"right"},ve(Be))))))}var Ne=n(31),Oe=n(5),He=n(148),Fe=n(413),je=n(414),ze=n(416),Ae=n(415),We=n(3027),Ke=function(e){Object(ze.a)(n,e);var r=Object(Ae.a)(n);function n(){var e;Object(Fe.a)(this,n);for(var a=arguments.length,l=new Array(a),o=0;o<a;o++)l[o]=arguments[o];return(e=r.call.apply(r,[this].concat(l))).getRowClassName=function(r){var n=r.index,a=e.props,t=a.classes,l=a.onRowClick;return Object(R.default)(t.tableRow,t.flexContainer,Object(v.a)({},t.tableRowHover,-1!==n&&null!=l))},e.cellRenderer=function(r){var n=r.cellData,a=r.columnIndex,l=e.props,o=l.columns,i=l.classes,c=l.rowHeight,s=l.onRowClick;return t.a.createElement(u.a,{component:"div",className:Object(R.default)(i.tableCell,i.flexContainer,Object(v.a)({},i.noClick,null==s)),variant:"body",style:{height:c},align:null!=a&&o[a].numeric?"right":"left"},n)},e.headerRenderer=function(r){var n=r.label,a=r.columnIndex,l=e.props,o=l.headerHeight,i=l.columns,c=l.classes;return t.a.createElement(u.a,{component:"div",className:Object(R.default)(c.tableCell,c.flexContainer,c.noClick),variant:"head",style:{height:o},align:i[a].numeric?"right":"left"},t.a.createElement("span",null,n))},e}return Object(je.a)(n,[{key:"render",value:function(){var e=this,r=this.props,n=r.classes,a=r.columns,l=r.rowHeight,o=r.headerHeight,i=Object(He.a)(r,["classes","columns","rowHeight","headerHeight"]);return t.a.createElement(We.a,null,(function(r){var c=r.height,s=r.width;return t.a.createElement(We.c,Object.assign({height:c,width:s,rowHeight:l,headerHeight:o},i,{rowClassName:e.getRowClassName}),a.map((function(r,a){var l=r.dataKey,o=Object(He.a)(r,["dataKey"]);return t.a.createElement(We.b,Object.assign({key:l,headerRenderer:function(r){return e.headerRenderer(Object(Oe.a)(Object(Oe.a)({},r),{},{columnIndex:a}))},className:n.flexContainer,cellRenderer:e.cellRenderer,dataKey:l},o))})))}))}}]),n}(t.a.PureComponent);Ke.defaultProps={headerHeight:48,rowHeight:48};var qe=Object($.a)((function(e){return{flexContainer:{display:"flex",alignItems:"center",boxSizing:"border-box"},tableRow:{cursor:"pointer"},tableRowHover:{"&:hover":{backgroundColor:e.palette.grey[200]}},tableCell:{flex:1},noClick:{cursor:"initial"}}}))(Ke),Le=[["Frozen yoghurt",159,6,24,4],["Ice cream sandwich",237,9,37,4.3],["Eclair",262,16,24,6],["Cupcake",305,3.7,67,4.3],["Gingerbread",356,16,49,3.9]];function Me(e,r,n,a,t,l){return{id:e,dessert:r,calories:n,fat:a,carbs:t,protein:l}}for(var Ge=[],Xe=0;Xe<200;Xe+=1){var Ue=Le[Math.floor(Math.random()*Le.length)];Ge.push(Me.apply(void 0,[Xe].concat(Object(Ne.a)(Ue))))}function Je(){return t.a.createElement(g.a,{style:{height:400,width:"100%"}},t.a.createElement(qe,{rowCount:Ge.length,rowGetter:function(e){var r=e.index;return Ge[r]},columns:[{width:200,label:"Dessert",dataKey:"dessert"},{width:120,label:"Calories\xa0(g)",dataKey:"calories",numeric:!0},{width:120,label:"Fat\xa0(g)",dataKey:"fat",numeric:!0},{width:120,label:"Carbs\xa0(g)",dataKey:"carbs",numeric:!0},{width:120,label:"Protein\xa0(g)",dataKey:"protein",numeric:!0}]}))}var Ye=n(1489),Ve=n.n(Ye);function $e(){var e=t.a.useState({columns:[{title:"Name",field:"name"},{title:"Surname",field:"surname"},{title:"Birth Year",field:"birthYear",type:"numeric"},{title:"Birth Place",field:"birthCity",lookup:{34:"\u0130stanbul",63:"\u015eanl\u0131urfa"}}],data:[{name:"Mehmet",surname:"Baran",birthYear:1987,birthCity:63},{name:"Zerya Bet\xfcl",surname:"Baran",birthYear:2017,birthCity:34}]}),r=Object(S.a)(e,2),n=r[0],a=r[1];return t.a.createElement(Ve.a,{title:"Editable Example",columns:n.columns,data:n.data,editable:{onRowAdd:function(e){return new Promise((function(r){setTimeout((function(){r();var t=Object(Ne.a)(n.data);t.push(e),a(Object(Oe.a)(Object(Oe.a)({},n),{},{data:t}))}),600)}))},onRowUpdate:function(e,r){return new Promise((function(t){setTimeout((function(){t();var l=Object(Ne.a)(n.data);l[l.indexOf(r)]=e,a(Object(Oe.a)(Object(Oe.a)({},n),{},{data:l}))}),600)}))},onRowDelete:function(e){return new Promise((function(r){setTimeout((function(){r();var t=Object(Ne.a)(n.data);t.splice(t.indexOf(e),1),a(Object(Oe.a)(Object(Oe.a)({},n),{},{data:t}))}),600)}))}}})}r.default=function(){return t.a.createElement(t.a.Fragment,null,t.a.createElement(i.a,{title:"Tables",description:"Data tables display sets of data. They can be fully customized",refUrl:"https://material-ui.com/components/tables/"}),t.a.createElement(c.a,null,t.a.createElement(l.a,{item:!0,xs:12},t.a.createElement(o.a,{title:"Simple Table",component:w,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return {name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align='right'>Calories</TableCell>\r\n            <TableCell align='right'>Fat&nbsp;(g)</TableCell>\r\n            <TableCell align='right'>Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align='right'>Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component='th' scope='row'>\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align='right'>{row.calories}</TableCell>\r\n              <TableCell align='right'>{row.fat}</TableCell>\r\n              <TableCell align='right'>{row.carbs}</TableCell>\r\n              <TableCell align='right'>{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n",description:"A simple example with no frills."})),t.a.createElement(l.a,{item:!0,xs:12},t.a.createElement(o.a,{title:"Dense Table",component:E,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return {name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function DenseTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Table className={classes.table} size='small'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align='right'>Calories</TableCell>\r\n              <TableCell align='right'>Fat&nbsp;(g)</TableCell>\r\n              <TableCell align='right'>Carbs&nbsp;(g)</TableCell>\r\n              <TableCell align='right'>Protein&nbsp;(g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component='th' scope='row'>\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align='right'>{row.calories}</TableCell>\r\n                <TableCell align='right'>{row.fat}</TableCell>\r\n                <TableCell align='right'>{row.carbs}</TableCell>\r\n                <TableCell align='right'>{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n",description:"A simple example of a dense table with no frills."})),t.a.createElement(l.a,{item:!0,xs:12},t.a.createElement(o.a,{title:"Sorting & Selecting",component:V,source:"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return {name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Dessert (100g serving)',\r\n  },\r\n  {id: 'calories', numeric: true, disablePadding: false, label: 'Calories'},\r\n  {id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)'},\r\n  {id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)'},\r\n  {id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)'},\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding='checkbox'>\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{'aria-label': 'select all desserts'}}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}>\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={order}\r\n              onClick={createSortHandler(headCell.id)}>\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {numSelected} = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}>\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color='inherit' variant='subtitle1'>\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant='h6' id='tableTitle'>\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title='Delete'>\r\n            <IconButton aria-label='delete'>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title='Filter list'>\r\n            <IconButton aria-label='filter list'>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  function handleRequestSort(event, property) {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  }\r\n\r\n  function handleSelectAllClick(event) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }\r\n\r\n  function handleClick(event, name) {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  }\r\n\r\n  function handleChangeDense(event) {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby='tableTitle'\r\n            size={dense ? 'small' : 'medium'}>\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role='checkbox'\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}>\r\n                      <TableCell padding='checkbox'>\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{'aria-labelledby': labelId}}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component='th'\r\n                        id={labelId}\r\n                        scope='row'\r\n                        padding='none'>\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align='right'>{row.calories}</TableCell>\r\n                      <TableCell align='right'>{row.fat}</TableCell>\r\n                      <TableCell align='right'>{row.carbs}</TableCell>\r\n                      <TableCell align='right'>{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{height: 49 * emptyRows}}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component='div'\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'previous page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'next page',\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label='Dense padding'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",description:"This example demonstrates the use of Checkbox and clickable rows for selection, with a custom Toolbar. It uses the TableSortLabel component to help style column headings."})),t.a.createElement(l.a,{item:!0,xs:12},t.a.createElement(o.a,{title:"Customized tables",component:ne,source:"import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return {name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\r\n            <StyledTableCell align='right'>Calories</StyledTableCell>\r\n            <StyledTableCell align='right'>Fat&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align='right'>Carbs&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align='right'>Protein&nbsp;(g)</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component='th' scope='row'>\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align='right'>{row.calories}</StyledTableCell>\r\n              <StyledTableCell align='right'>{row.fat}</StyledTableCell>\r\n              <StyledTableCell align='right'>{row.carbs}</StyledTableCell>\r\n              <StyledTableCell align='right'>{row.protein}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n",description:"Here is an example of customizing the component. You can learn more about this in the overrides documentation page."})),t.a.createElement(l.a,{item:!0,xs:12},t.a.createElement(o.a,{title:"Custom Table Pagination Action",component:fe,source:"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const {count, page, rowsPerPage, onChangePage} = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label='first page'>\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label='previous page'>\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label='next page'>\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label='last page'>\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return {name, calories, fat};\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7),\r\n  createData('Donut', 452, 25.0),\r\n  createData('Eclair', 262, 16.0),\r\n  createData('Frozen yoghurt', 159, 6.0),\r\n  createData('Gingerbread', 356, 16.0),\r\n  createData('Honeycomb', 408, 3.2),\r\n  createData('Ice cream sandwich', 237, 9.0),\r\n  createData('Jelly Bean', 375, 0.0),\r\n  createData('KitKat', 518, 26.0),\r\n  createData('Lollipop', 392, 0.2),\r\n  createData('Marshmallow', 318, 0),\r\n  createData('Nougat', 360, 19.0),\r\n  createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell align='right'>{row.calories}</TableCell>\r\n                  <TableCell align='right'>{row.fat}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{height: 48 * emptyRows}}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                colSpan={3}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: {'aria-label': 'rows per page'},\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n",description:"The Action property of the TablePagination component allows the implementation of custom actions."})),t.a.createElement(l.a,{item:!0,xs:12},t.a.createElement(o.a,{title:"Fixed header",component:Ee,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst columns = [\r\n  {id: 'name', label: 'Name', minWidth: 200},\r\n  {id: 'code', label: 'ISO\\u00a0Code', minWidth: 100},\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 120,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 120,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 120,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return {name, code, population, size, density};\r\n}\r\n\r\nconst rows = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  tableWrapper: {\r\n    maxHeight: 407,\r\n    overflow: 'auto',\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{minWidth: column.minWidth}}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role='checkbox' tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component='div'\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          'aria-label': 'previous page',\r\n        }}\r\n        nextIconButtonProps={{\r\n          'aria-label': 'next page',\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n",description:"An example of a table with scrollable rows and fixed column headers. It leverages the stickyHeader prop (\u26a0\ufe0f no IE 11 support)."})),t.a.createElement(l.a,{item:!0,xs:12},t.a.createElement(o.a,{title:"Spanning Table",component:Ie,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nfunction ccyFormat(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return {desc, qty, unit, price};\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({price}) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow('Paperclips (Box)', 100, 1.15),\r\n  createRow('Paper (Case)', 10, 45.99),\r\n  createRow('Waste Basket', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nexport default function SpanningTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Desc</TableCell>\r\n            <TableCell align='right'>Qty.</TableCell>\r\n            <TableCell align='right'>@</TableCell>\r\n            <TableCell align='right'>Price</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.desc}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align='right'>{row.qty}</TableCell>\r\n              <TableCell align='right'>{row.unit}</TableCell>\r\n              <TableCell align='right'>{ccyFormat(row.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align='right'>{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align='right'>{`${(TAX_RATE * 100).toFixed(\r\n              0,\r\n            )} %`}</TableCell>\r\n            <TableCell align='right'>{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align='right'>{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n",description:"A simple example with spanning rows & columns."})),t.a.createElement(l.a,{item:!0,xs:12},t.a.createElement(o.a,{title:"Virtualized Table",component:Je,source:"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {AutoSizer, Column, Table} from 'react-virtualized';\r\n\r\nconst styles = (theme) => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  };\r\n\r\n  getRowClassName = ({index}) => {\r\n    const {classes, onRowClick} = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({cellData, columnIndex}) => {\r\n    const {columns, classes, rowHeight, onRowClick} = this.props;\r\n    return (\r\n      <TableCell\r\n        component='div'\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant='body'\r\n        style={{height: rowHeight}}\r\n        align={\r\n          (columnIndex != null && columns[columnIndex].numeric) || false\r\n            ? 'right'\r\n            : 'left'\r\n        }>\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({label, columnIndex}) => {\r\n    const {headerHeight, columns, classes} = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        component='div'\r\n        className={clsx(\r\n          classes.tableCell,\r\n          classes.flexContainer,\r\n          classes.noClick,\r\n        )}\r\n        variant='head'\r\n        style={{height: headerHeight}}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}>\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      columns,\r\n      rowHeight,\r\n      headerHeight,\r\n      ...tableProps\r\n    } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({height, width}) => (\r\n          <Table\r\n            height={height}\r\n            width={width}\r\n            rowHeight={rowHeight}\r\n            headerHeight={headerHeight}\r\n            {...tableProps}\r\n            rowClassName={this.getRowClassName}>\r\n            {columns.map(({dataKey, ...other}, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={(headerProps) =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dataKey: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      numeric: PropTypes.bool,\r\n      width: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\n\r\n// ---\r\n\r\nconst sample = [\r\n  ['Frozen yoghurt', 159, 6.0, 24, 4.0],\r\n  ['Ice cream sandwich', 237, 9.0, 37, 4.3],\r\n  ['Eclair', 262, 16.0, 24, 6.0],\r\n  ['Cupcake', 305, 3.7, 67, 4.3],\r\n  ['Gingerbread', 356, 16.0, 49, 3.9],\r\n];\r\n\r\nfunction createData(id, dessert, calories, fat, carbs, protein) {\r\n  return {id, dessert, calories, fat, carbs, protein};\r\n}\r\n\r\nconst rows = [];\r\n\r\nfor (let i = 0; i < 200; i += 1) {\r\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\r\n  rows.push(createData(i, ...randomSelection));\r\n}\r\n\r\nexport default function ReactVirtualizedTable() {\r\n  return (\r\n    <Paper style={{height: 400, width: '100%'}}>\r\n      <VirtualizedTable\r\n        rowCount={rows.length}\r\n        rowGetter={({index}) => rows[index]}\r\n        columns={[\r\n          {\r\n            width: 200,\r\n            label: 'Dessert',\r\n            dataKey: 'dessert',\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Calories\\u00A0(g)',\r\n            dataKey: 'calories',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Fat\\u00A0(g)',\r\n            dataKey: 'fat',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Carbs\\u00A0(g)',\r\n            dataKey: 'carbs',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Protein\\u00A0(g)',\r\n            dataKey: 'protein',\r\n            numeric: true,\r\n          },\r\n        ]}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n",description:"In the following example, we demonstrate how to use react-virtualized with the Table component. It renders 200 rows and can easily handle more. Virtualization helps with performance issues.."})),t.a.createElement(l.a,{item:!0,xs:12},t.a.createElement(o.a,{title:"Complementary projects",component:$e,source:"import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nexport default function MaterialTableDemo() {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      {title: 'Name', field: 'name'},\r\n      {title: 'Surname', field: 'surname'},\r\n      {title: 'Birth Year', field: 'birthYear', type: 'numeric'},\r\n      {\r\n        title: 'Birth Place',\r\n        field: 'birthCity',\r\n        lookup: {34: '\u0130stanbul', 63: '\u015eanl\u0131urfa'},\r\n      },\r\n    ],\r\n    data: [\r\n      {name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63},\r\n      {\r\n        name: 'Zerya Bet\xfcl',\r\n        surname: 'Baran',\r\n        birthYear: 2017,\r\n        birthCity: 34,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title='Editable Example'\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data.push(newData);\r\n              setState({...state, data});\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data[data.indexOf(oldData)] = newData;\r\n              setState({...state, data});\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data.splice(data.indexOf(oldData), 1);\r\n              setState({...state, data});\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n",description:"For more advanced use cases you might be able to take advantage of:."}))))}}}]);
//# sourceMappingURL=121.dac1b494.chunk.js.map