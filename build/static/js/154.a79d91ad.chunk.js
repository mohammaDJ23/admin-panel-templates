(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[154],{3111:function(e,t,r){"use strict";r.r(t);var n=r(0),a=r.n(n),o=r(1406),i=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:3e3,pv:1398,amt:2210},{name:"Page C",uv:2e3,pv:9800,amt:2290},{name:"Page D",uv:2780,pv:3908,amt:2e3},{name:"Page E",uv:1890,pv:4800,amt:2181},{name:"Page F",uv:2390,pv:3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],m=function(){return a.a.createElement(o.y,{width:"100%",height:200},a.a.createElement(o.b,{data:i,margin:{top:10,right:0,left:-25,bottom:0}},a.a.createElement(o.E,{dataKey:"name"}),a.a.createElement(o.F,null),a.a.createElement(o.f,{strokeDasharray:"3 3"}),a.a.createElement(o.C,null),a.a.createElement(o.a,{type:"monotone",dataKey:"uv",stroke:"#4299E1",fill:"#4299E1"})))},l=function(){return a.a.createElement(o.y,{width:"100%",height:200},a.a.createElement(o.b,{data:i,margin:{top:10,right:0,left:-25,bottom:0}},a.a.createElement(o.E,{dataKey:"name"}),a.a.createElement(o.F,null),a.a.createElement(o.f,{strokeDasharray:"3 3"}),a.a.createElement(o.C,null),a.a.createElement(o.a,{type:"monotone",dataKey:"uv",stackId:"1",stroke:"#4299E1",fill:"#4299E1"}),a.a.createElement(o.a,{type:"monotone",dataKey:"pv",stackId:"1",stroke:"#59AA2B",fill:"#59AA2B"}),a.a.createElement(o.a,{type:"monotone",dataKey:"amt",stackId:"1",stroke:"#F04F47",fill:"#F04F47"})))},c=[{month:"2015.01",a:4e3,b:2400,c:2400},{month:"2015.02",a:3e3,b:1398,c:2210},{month:"2015.03",a:2e3,b:9800,c:2290},{month:"2015.04",a:2780,b:3908,c:2e3},{month:"2015.05",a:1890,b:4800,c:2181},{month:"2015.06",a:2390,b:3800,c:2500},{month:"2015.07",a:3490,b:4300,c:2100}],s=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return"".concat((100*e).toFixed(t),"%")},d=function(e){var t=e.payload,r=e.label,n=t.reduce((function(e,t){return e+t.value}),0);return a.a.createElement("div",{className:"customized-tooltip-content"},a.a.createElement("p",{className:"total"},"".concat(r," (Total: ").concat(n,")")),a.a.createElement("ul",{className:"list"},t.map((function(e,t){return a.a.createElement("li",{key:"item-".concat(t),style:{color:e.color}},"".concat(e.name,": ").concat(e.value,"(").concat(function(e,t){return s(t>0?e/t:0,2)}(e.value,n),")"))}))))},h=function(){return a.a.createElement(o.y,{width:"100%",height:200},a.a.createElement(o.b,{data:c,stackOffset:"expand",margin:{top:10,right:0,left:-25,bottom:0}},a.a.createElement(o.E,{dataKey:"month"}),a.a.createElement(o.F,{tickFormatter:s}),a.a.createElement(o.f,{strokeDasharray:"3 3"}),a.a.createElement(o.C,{content:d}),a.a.createElement(o.a,{type:"monotone",dataKey:"a",stackId:"1",stroke:"#4299E1",fill:"#4299E1"}),a.a.createElement(o.a,{type:"monotone",dataKey:"b",stackId:"1",stroke:"#59AA2B",fill:"#59AA2B"}),a.a.createElement(o.a,{type:"monotone",dataKey:"c",stackId:"1",stroke:"#F04F47",fill:"#F04F47"})))},p=r(68),E=[{name:"Page A",uv:4e3},{name:"Page B",uv:3e3},{name:"Page C",uv:2e3},{name:"Page D"},{name:"Page E",uv:1890},{name:"Page F",uv:2390},{name:"Page G",uv:3490}],u=function(){return a.a.createElement(o.y,{width:"100%"},a.a.createElement("div",null,a.a.createElement(p.a,{mb:5},a.a.createElement(o.y,{width:"100%",height:200},a.a.createElement(o.b,{data:E,margin:{top:10,right:0,left:-25,bottom:0}},a.a.createElement(o.E,{dataKey:"name"}),a.a.createElement(o.F,null),a.a.createElement(o.f,{strokeDasharray:"3 3"}),a.a.createElement(o.C,null),a.a.createElement(o.a,{type:"monotone",dataKey:"uv",stroke:"#4299E1",fill:"#4299E1"})))),a.a.createElement(p.a,{mb:4},a.a.createElement(o.y,{width:"100%",height:200},a.a.createElement(o.b,{data:E,margin:{top:10,right:0,left:-25,bottom:0}},a.a.createElement(o.E,{dataKey:"name"}),a.a.createElement(o.F,null),a.a.createElement(o.f,{strokeDasharray:"3 3"}),a.a.createElement(o.C,null),a.a.createElement(o.a,{connectNulls:!0,type:"monotone",dataKey:"uv",stroke:"#4299E1",fill:"#4299E1"}))))))},y=function(){return a.a.createElement(o.y,{width:"100%"},a.a.createElement("div",null,a.a.createElement(p.a,{component:"p",mb:4},"A demo of synchronized AreaCharts"),a.a.createElement(p.a,{mb:4},a.a.createElement(o.y,{width:"100%",height:200},a.a.createElement(o.b,{data:i,syncId:"anyId",margin:{top:10,right:0,left:-25,bottom:0}},a.a.createElement(o.E,{dataKey:"name"}),a.a.createElement(o.F,null),a.a.createElement(o.f,{strokeDasharray:"3 3"}),a.a.createElement(o.C,null),a.a.createElement(o.a,{type:"monotone",dataKey:"uv",stroke:"#4299E1",fill:"#4299E1"})))),a.a.createElement(p.a,{component:"p",mb:4},"Maybe some other content"),a.a.createElement(p.a,{mb:4},a.a.createElement(o.y,{width:"100%",height:200},a.a.createElement(o.b,{data:i,syncId:"anyId",margin:{top:10,right:0,left:-25,bottom:0}},a.a.createElement(o.E,{dataKey:"name"}),a.a.createElement(o.F,null),a.a.createElement(o.f,{strokeDasharray:"3 3"}),a.a.createElement(o.C,null),a.a.createElement(o.a,{type:"monotone",dataKey:"pv",stroke:"#F04F47",fill:"#F04F47"}))))))},A=r(359),C=r(408),f=r(407),v=r(406);t.default=function(e){e.match;return a.a.createElement(a.a.Fragment,null,a.a.createElement(f.a,{title:"Area Chart",description:"All svg elements can be added into the AreaChart component, such as defs, linearGradient, etc.",refUrl:"http://recharts.org/en-US/api/AreaChart/"}),a.a.createElement(v.a,null,a.a.createElement(A.a,{item:!0,xs:12,lg:6},a.a.createElement(C.a,{title:"Simple modal",component:m,source:"import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst SimpleAreaChart = () => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={200}>\r\n      <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n        <XAxis dataKey='name' />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray='3 3' />\r\n        <Tooltip />\r\n        <Area type='monotone' dataKey='uv' stroke='#4299E1' fill='#4299E1' />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default SimpleAreaChart;\r\n"})),a.a.createElement(A.a,{item:!0,xs:12,lg:6},a.a.createElement(C.a,{title:"Stacked Area Chart",component:l,source:"import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst StackedAreaChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='uv'\r\n        stackId='1'\r\n        stroke='#4299E1'\r\n        fill='#4299E1'\r\n      />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='pv'\r\n        stackId='1'\r\n        stroke='#59AA2B'\r\n        fill='#59AA2B'\r\n      />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='amt'\r\n        stackId='1'\r\n        stroke='#F04F47'\r\n        fill='#F04F47'\r\n      />\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default StackedAreaChart;\r\n"})),a.a.createElement(A.a,{item:!0,xs:12,lg:6},a.a.createElement(C.a,{title:"AreaChart Connect Nulls",component:u,source:"import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst data = [\r\n  {name: 'Page A', uv: 4000},\r\n  {name: 'Page B', uv: 3000},\r\n  {name: 'Page C', uv: 2000},\r\n  {name: 'Page D'},\r\n  {name: 'Page E', uv: 1890},\r\n  {name: 'Page F', uv: 2390},\r\n  {name: 'Page G', uv: 3490},\r\n];\r\nconst AreaChartConnectNulls = () => (\r\n  <ResponsiveContainer width='100%'>\r\n    <div>\r\n      <Box mb={5}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <AreaChart\r\n            data={data}\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Area\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n      <Box mb={4}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <AreaChart\r\n            data={data}\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Area\r\n              connectNulls={true}\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n    </div>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default AreaChartConnectNulls;\r\n"})),a.a.createElement(A.a,{item:!0,xs:12,lg:6},a.a.createElement(C.a,{title:"Synchronized Area Chart",component:y,source:"import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst SynchronizedAreaChart = () => (\r\n  <ResponsiveContainer width='100%'>\r\n    <div>\r\n      <Box component='p' mb={4}>\r\n        A demo of synchronized AreaCharts\r\n      </Box>\r\n      <Box mb={4}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <AreaChart\r\n            data={data}\r\n            syncId='anyId'\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Area\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n      <Box component='p' mb={4}>\r\n        Maybe some other content\r\n      </Box>\r\n      <Box mb={4}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <AreaChart\r\n            data={data}\r\n            syncId='anyId'\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Area\r\n              type='monotone'\r\n              dataKey='pv'\r\n              stroke='#F04F47'\r\n              fill='#F04F47'\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n    </div>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default SynchronizedAreaChart;\r\n"})),a.a.createElement(A.a,{item:!0,xs:12,lg:6},a.a.createElement(C.a,{title:"Percent Area Chart",component:h,source:"import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {month: '2015.01', a: 4000, b: 2400, c: 2400},\r\n  {month: '2015.02', a: 3000, b: 1398, c: 2210},\r\n  {month: '2015.03', a: 2000, b: 9800, c: 2290},\r\n  {month: '2015.04', a: 2780, b: 3908, c: 2000},\r\n  {month: '2015.05', a: 1890, b: 4800, c: 2181},\r\n  {month: '2015.06', a: 2390, b: 3800, c: 2500},\r\n  {month: '2015.07', a: 3490, b: 4300, c: 2100},\r\n];\r\n\r\nconst getPercent = (value, total) => {\r\n  const ratio = total > 0 ? value / total : 0;\r\n\r\n  return toPercent(ratio, 2);\r\n};\r\n\r\nconst toPercent = (decimal, fixed = 0) => {\r\n  return `${(decimal * 100).toFixed(fixed)}%`;\r\n};\r\nconst renderTooltipContent = (o) => {\r\n  const {payload, label} = o;\r\n  const total = payload.reduce((result, entry) => result + entry.value, 0);\r\n\r\n  return (\r\n    <div className='customized-tooltip-content'>\r\n      <p className='total'>{`${label} (Total: ${total})`}</p>\r\n      <ul className='list'>\r\n        {payload.map((entry, index) => (\r\n          <li key={`item-${index}`} style={{color: entry.color}}>\r\n            {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nconst PercentAreaChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <AreaChart\r\n      data={data}\r\n      stackOffset='expand'\r\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='month' />\r\n      <YAxis tickFormatter={toPercent} />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip content={renderTooltipContent} />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='a'\r\n        stackId='1'\r\n        stroke='#4299E1'\r\n        fill='#4299E1'\r\n      />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='b'\r\n        stackId='1'\r\n        stroke='#59AA2B'\r\n        fill='#59AA2B'\r\n      />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='c'\r\n        stackId='1'\r\n        stroke='#F04F47'\r\n        fill='#F04F47'\r\n      />\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default PercentAreaChart;\r\n"}))))}}}]);
//# sourceMappingURL=154.a79d91ad.chunk.js.map