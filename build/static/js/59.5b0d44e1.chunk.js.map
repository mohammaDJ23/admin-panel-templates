{"version":3,"sources":["../node_modules/@material-ui/icons/ArrowDropDown.js","../node_modules/@material-ui/icons/FormatAlignLeft.js","../node_modules/@material-ui/icons/FormatAlignCenter.js","../node_modules/@material-ui/icons/FormatAlignRight.js","../node_modules/@material-ui/icons/FormatAlignJustify.js","../node_modules/@material-ui/icons/FormatBold.js","../node_modules/@material-ui/icons/FormatItalic.js","../node_modules/@material-ui/icons/FormatUnderlined.js","../node_modules/@material-ui/icons/FormatColorFill.js","modules/muiComponents/util/ToggleButtons/SimpleToggle.js","webpack:///./src/modules/muiComponents/util/ToggleButtons/SimpleToggle.js?2a3c","modules/muiComponents/util/ToggleButtons/ToggleSizes.js","webpack:///./src/modules/muiComponents/util/ToggleButtons/ToggleSizes.js?2e54","modules/muiComponents/util/ToggleButtons/StandaloneToggle.js","modules/muiComponents/util/ToggleButtons/index.js","webpack:///./src/modules/muiComponents/util/ToggleButtons/StandaloneToggle.js?f7e9"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Fragment","fillOpacity","useStyles","makeStyles","theme","toggleContainer","margin","spacing","ToggleButtons","React","useState","alignment","setAlignment","formats","setFormats","classes","Grid","container","item","sm","md","className","ToggleButtonGroup","exclusive","onChange","event","newAlignment","aria-label","ToggleButton","disabled","Typography","gutterBottom","newFormats","arial-label","bgTransparent","backgroundColor","ToggleButtonSizes","props","handleChange","children","key","direction","alignItems","size","StandaloneToggleButton","selected","setSelected","ComponentHeader","title","description","refUrl","GridContainer","xs","ComponentCard","component","SimpleToggle","source","lg","ToggleSizes","StandaloneToggle"],"mappings":"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","file":"static/js/59.5b0d44e1.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"\n}), 'FormatAlignLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"\n}), 'FormatAlignCenter');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"\n}), 'FormatAlignRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"\n}), 'FormatAlignJustify');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"\n}), 'FormatBold');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\"\n}), 'FormatItalic');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"\n}), 'FormatUnderlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z\"\n}), _react.default.createElement(\"path\", {\n  fillOpacity: \".36\",\n  d: \"M0 20h24v4H0z\"\n})), 'FormatColorFill');\n\nexports.default = _default;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toggleContainer: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\nexport default function ToggleButtons() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n  const [formats, setFormats] = React.useState(() => ['bold']);\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    setFormats(newFormats);\r\n  };\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item sm={12} md={6}>\r\n        <div className={classes.toggleContainer}>\r\n          <ToggleButtonGroup\r\n            className='bg-transparent'\r\n            value={alignment}\r\n            exclusive\r\n            onChange={handleAlignment}\r\n            aria-label='text alignment'>\r\n            <ToggleButton value='left' aria-label='left aligned'>\r\n              <FormatAlignLeftIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value='center' aria-label='centered'>\r\n              <FormatAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value='right' aria-label='right aligned'>\r\n              <FormatAlignRightIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value='justify' aria-label='justified' disabled>\r\n              <FormatAlignJustifyIcon />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n        <Typography gutterBottom>Exclusive Selection</Typography>\r\n        <Typography>\r\n          Text justification toggle buttons present options for left, right,\r\n          center, full, and justified text with only one item available for\r\n          selection at a time. Selecting one option deselects any other.\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item sm={12} md={6}>\r\n        <div className={classes.toggleContainer}>\r\n          <ToggleButtonGroup\r\n            className='bg-transparent'\r\n            value={formats}\r\n            onChange={handleFormat}\r\n            arial-label='text formatting'>\r\n            <ToggleButton value='bold' aria-label='bold'>\r\n              <FormatBoldIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value='italic' aria-label='italic'>\r\n              <FormatItalicIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value='underlined' aria-label='underlined'>\r\n              <FormatUnderlinedIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value='color' aria-label='color' disabled>\r\n              <FormatColorFillIcon />\r\n              <ArrowDropDownIcon />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n        <Typography gutterBottom>Multiple Selection</Typography>\r\n        <Typography>\r\n          Logically-grouped options, like Bold, Italic, and Underline, allow\r\n          multiple options to be selected.\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\r\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\r\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\r\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\r\\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\\r\\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\\r\\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\\r\\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\\r\\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Grid from '@material-ui/core/Grid';\\r\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\r\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  toggleContainer: {\\r\\n    margin: theme.spacing(2, 0),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function ToggleButtons() {\\r\\n  const [alignment, setAlignment] = React.useState('left');\\r\\n  const [formats, setFormats] = React.useState(() => ['bold']);\\r\\n\\r\\n  const handleFormat = (event, newFormats) => {\\r\\n    setFormats(newFormats);\\r\\n  };\\r\\n\\r\\n  const handleAlignment = (event, newAlignment) => {\\r\\n    setAlignment(newAlignment);\\r\\n  };\\r\\n\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <Grid container spacing={2}>\\r\\n      <Grid item sm={12} md={6}>\\r\\n        <div className={classes.toggleContainer}>\\r\\n          <ToggleButtonGroup\\r\\n            className='bg-transparent'\\r\\n            value={alignment}\\r\\n            exclusive\\r\\n            onChange={handleAlignment}\\r\\n            aria-label='text alignment'>\\r\\n            <ToggleButton value='left' aria-label='left aligned'>\\r\\n              <FormatAlignLeftIcon />\\r\\n            </ToggleButton>\\r\\n            <ToggleButton value='center' aria-label='centered'>\\r\\n              <FormatAlignCenterIcon />\\r\\n            </ToggleButton>\\r\\n            <ToggleButton value='right' aria-label='right aligned'>\\r\\n              <FormatAlignRightIcon />\\r\\n            </ToggleButton>\\r\\n            <ToggleButton value='justify' aria-label='justified' disabled>\\r\\n              <FormatAlignJustifyIcon />\\r\\n            </ToggleButton>\\r\\n          </ToggleButtonGroup>\\r\\n        </div>\\r\\n        <Typography gutterBottom>Exclusive Selection</Typography>\\r\\n        <Typography>\\r\\n          Text justification toggle buttons present options for left, right,\\r\\n          center, full, and justified text with only one item available for\\r\\n          selection at a time. Selecting one option deselects any other.\\r\\n        </Typography>\\r\\n      </Grid>\\r\\n      <Grid item sm={12} md={6}>\\r\\n        <div className={classes.toggleContainer}>\\r\\n          <ToggleButtonGroup\\r\\n            className='bg-transparent'\\r\\n            value={formats}\\r\\n            onChange={handleFormat}\\r\\n            arial-label='text formatting'>\\r\\n            <ToggleButton value='bold' aria-label='bold'>\\r\\n              <FormatBoldIcon />\\r\\n            </ToggleButton>\\r\\n            <ToggleButton value='italic' aria-label='italic'>\\r\\n              <FormatItalicIcon />\\r\\n            </ToggleButton>\\r\\n            <ToggleButton value='underlined' aria-label='underlined'>\\r\\n              <FormatUnderlinedIcon />\\r\\n            </ToggleButton>\\r\\n            <ToggleButton value='color' aria-label='color' disabled>\\r\\n              <FormatColorFillIcon />\\r\\n              <ArrowDropDownIcon />\\r\\n            </ToggleButton>\\r\\n          </ToggleButtonGroup>\\r\\n        </div>\\r\\n        <Typography gutterBottom>Multiple Selection</Typography>\\r\\n        <Typography>\\r\\n          Logically-grouped options, like Bold, Italic, and Underline, allow\\r\\n          multiple options to be selected.\\r\\n        </Typography>\\r\\n      </Grid>\\r\\n    </Grid>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bgTransparent: {\r\n    backgroundColor: 'transparent',\r\n  },\r\n}));\r\nexport default function ToggleButtonSizes(props) {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n\r\n  const handleChange = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const classes = useStyles(props);\r\n\r\n  const children = [\r\n    <ToggleButton key={1} value='left'>\r\n      <FormatAlignLeftIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={2} value='center'>\r\n      <FormatAlignCenterIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={3} value='right'>\r\n      <FormatAlignRightIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={4} value='justify' disabled>\r\n      <FormatAlignJustifyIcon />\r\n    </ToggleButton>,\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={2} direction='column' alignItems='center'>\r\n      <Grid item>\r\n        <ToggleButtonGroup\r\n          className={classes.bgTransparent}\r\n          size='small'\r\n          value={alignment}\r\n          exclusive\r\n          onChange={handleChange}>\r\n          {children}\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n      <Grid item>\r\n        <ToggleButtonGroup\r\n          className={classes.bgTransparent}\r\n          size='medium'\r\n          value={alignment}\r\n          exclusive\r\n          onChange={handleChange}>\r\n          {children}\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n      <Grid item>\r\n        <ToggleButtonGroup\r\n          className={classes.bgTransparent}\r\n          size='large'\r\n          value={alignment}\r\n          exclusive\r\n          onChange={handleChange}>\r\n          {children}\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\r\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\r\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\r\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\r\\nimport Grid from '@material-ui/core/Grid';\\r\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\r\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  bgTransparent: {\\r\\n    backgroundColor: 'transparent',\\r\\n  },\\r\\n}));\\r\\nexport default function ToggleButtonSizes(props) {\\r\\n  const [alignment, setAlignment] = React.useState('left');\\r\\n\\r\\n  const handleChange = (event, newAlignment) => {\\r\\n    setAlignment(newAlignment);\\r\\n  };\\r\\n\\r\\n  const classes = useStyles(props);\\r\\n\\r\\n  const children = [\\r\\n    <ToggleButton key={1} value='left'>\\r\\n      <FormatAlignLeftIcon />\\r\\n    </ToggleButton>,\\r\\n    <ToggleButton key={2} value='center'>\\r\\n      <FormatAlignCenterIcon />\\r\\n    </ToggleButton>,\\r\\n    <ToggleButton key={3} value='right'>\\r\\n      <FormatAlignRightIcon />\\r\\n    </ToggleButton>,\\r\\n    <ToggleButton key={4} value='justify' disabled>\\r\\n      <FormatAlignJustifyIcon />\\r\\n    </ToggleButton>,\\r\\n  ];\\r\\n\\r\\n  return (\\r\\n    <Grid container spacing={2} direction='column' alignItems='center'>\\r\\n      <Grid item>\\r\\n        <ToggleButtonGroup\\r\\n          className={classes.bgTransparent}\\r\\n          size='small'\\r\\n          value={alignment}\\r\\n          exclusive\\r\\n          onChange={handleChange}>\\r\\n          {children}\\r\\n        </ToggleButtonGroup>\\r\\n      </Grid>\\r\\n      <Grid item>\\r\\n        <ToggleButtonGroup\\r\\n          className={classes.bgTransparent}\\r\\n          size='medium'\\r\\n          value={alignment}\\r\\n          exclusive\\r\\n          onChange={handleChange}>\\r\\n          {children}\\r\\n        </ToggleButtonGroup>\\r\\n      </Grid>\\r\\n      <Grid item>\\r\\n        <ToggleButtonGroup\\r\\n          className={classes.bgTransparent}\\r\\n          size='large'\\r\\n          value={alignment}\\r\\n          exclusive\\r\\n          onChange={handleChange}>\\r\\n          {children}\\r\\n        </ToggleButtonGroup>\\r\\n      </Grid>\\r\\n    </Grid>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\n\r\nexport default function StandaloneToggleButton() {\r\n  const [selected, setSelected] = React.useState(false);\r\n\r\n  return (\r\n    <ToggleButton\r\n      value='check'\r\n      selected={selected}\r\n      onChange={() => {\r\n        setSelected(!selected);\r\n      }}>\r\n      <CheckIcon />\r\n    </ToggleButton>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nimport SimpleToggle from './SimpleToggle';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SimpleToggleSource from '!raw-loader!./SimpleToggle';\r\nimport ToggleSizes from './ToggleSizes';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ToggleSizesSource from '!raw-loader!./ToggleSizes';\r\nimport StandaloneToggle from './StandaloneToggle';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport StandaloneToggleSource from '!raw-loader!./StandaloneToggle';\r\n\r\nconst ToggleButtons = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Toggle Buttons'\r\n        description='Toggle buttons can be used to group related options.'\r\n        refUrl='https://material-ui.com/components/toggle-button/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Simple Toggle'\r\n            component={SimpleToggle}\r\n            source={SimpleToggleSource}\r\n            description='To emphasize groups of related Toggle buttons, a group should share a common container.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Toggle Size'\r\n            component={ToggleSizes}\r\n            source={ToggleSizesSource}\r\n            description='Fancy larger or smaller buttons? Use the size property.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Standalone toggle button'\r\n            component={StandaloneToggle}\r\n            source={StandaloneToggleSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToggleButtons;\r\n","export default \"import React from 'react';\\r\\nimport CheckIcon from '@material-ui/icons/Check';\\r\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\r\\n\\r\\nexport default function StandaloneToggleButton() {\\r\\n  const [selected, setSelected] = React.useState(false);\\r\\n\\r\\n  return (\\r\\n    <ToggleButton\\r\\n      value='check'\\r\\n      selected={selected}\\r\\n      onChange={() => {\\r\\n        setSelected(!selected);\\r\\n      }}>\\r\\n      <CheckIcon />\\r\\n    </ToggleButton>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}