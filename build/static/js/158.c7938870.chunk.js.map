{"version":3,"sources":["modules/thirdParty/recharts/Line/Components/data.js","modules/thirdParty/recharts/Line/Components/SimpleLineChart.js","modules/thirdParty/recharts/Line/Components/VerticalLineChart.js","modules/thirdParty/recharts/Line/Components/CustomizedDotLineChart.js","modules/thirdParty/recharts/Line/Components/LineChartWithReferenceLines.js","modules/thirdParty/recharts/Line/Components/DashedLineChart.js","modules/thirdParty/recharts/Line/Components/LineChartWithXAxisPading.js","modules/thirdParty/recharts/Line/Components/LineChartConnectNulls.js","modules/thirdParty/recharts/Line/Components/SynchronizedLineChart.js","modules/thirdParty/recharts/Line/index.js","webpack:///./src/modules/thirdParty/recharts/Line/Components/SimpleLineChart.js?45cb","webpack:///./src/modules/thirdParty/recharts/Line/Components/VerticalLineChart.js?d058","webpack:///./src/modules/thirdParty/recharts/Line/Components/CustomizedDotLineChart.js?0372","webpack:///./src/modules/thirdParty/recharts/Line/Components/LineChartWithReferenceLines.js?1e39","webpack:///./src/modules/thirdParty/recharts/Line/Components/DashedLineChart.js?203b","webpack:///./src/modules/thirdParty/recharts/Line/Components/LineChartWithXAxisPading.js?8bbd","webpack:///./src/modules/thirdParty/recharts/Line/Components/SynchronizedLineChart.js?0014","webpack:///./src/modules/thirdParty/recharts/Line/Components/LineChartConnectNulls.js?0d20"],"names":["data","name","uv","pv","amt","SimpleLineChart","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","stroke","activeDot","r","VerticalLineChart","layout","CustomizedDot","this","props","cx","cy","value","x","y","fill","viewBox","d","Component","CustomizedDotLineChart","dot","LineChartWithReferenceLines","label","DashedLineChart","LineChartWithXAxisPading","padding","LineChartConnectNulls","Box","mb","connectNulls","SynchronizedLineChart","textAlign","component","syncId","LineChart","match","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","source"],"mappings":"wIASeA,EATF,CACX,CAACC,KAAM,SAAUC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAC1C,CAACH,KAAM,SAAUC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAC1C,CAACH,KAAM,SAAUC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAC1C,CAACH,KAAM,SAAUC,GAAI,KAAMC,GAAI,KAAMC,IAAK,KAC1C,CAACH,KAAM,SAAUC,GAAI,KAAMC,GAAI,KAAMC,IAAK,MAC1C,CAACH,KAAM,SAAUC,GAAI,KAAMC,GAAI,KAAMC,IAAK,MAC1C,CAACH,KAAM,SAAUC,GAAI,KAAMC,GAAI,KAAMC,IAAK,OCoB7BC,EAdS,kBACtB,kBAAC,IAAD,CAAqBC,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAWP,KAAMA,EAAMQ,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IACpE,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMC,KAAK,WAAWF,QAAQ,KAAKG,OAAO,UAAUC,UAAW,CAACC,EAAG,KACnE,kBAAC,IAAD,CAAMH,KAAK,WAAWF,QAAQ,KAAKG,OAAO,eCQjCG,EAjBW,kBACxB,kBAAC,IAAD,CAAqBb,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CACEa,OAAO,WACPpB,KAAMA,EACNQ,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAC/C,kBAAC,IAAD,CAAOG,KAAK,WACZ,kBAAC,IAAD,CAAOF,QAAQ,OAAOE,KAAK,aAC3B,kBAAC,IAAD,CAAeD,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMD,QAAQ,KAAKG,OAAO,YAC1B,kBAAC,IAAD,CAAMH,QAAQ,KAAKG,OAAO,e,oCCZ1BK,E,uKACM,IAAD,EACiBC,KAAKC,MAAtBC,EADA,EACAA,GAAIC,EADJ,EACIA,GAEX,OAHO,EACQC,MAEH,KAER,yBACEC,EAAGH,EAAK,GACRI,EAAGH,EAAK,GACRnB,MAAO,GACPC,OAAQ,GACRsB,KAAK,MACLC,QAAQ,iBACR,0BAAMC,EAAE,ywBAMZ,yBACEJ,EAAGH,EAAK,GACRI,EAAGH,EAAK,GACRnB,MAAO,GACPC,OAAQ,GACRsB,KAAK,QACLC,QAAQ,iBACR,0BAAMC,EAAE,+8B,GA1BYC,aAmDbC,EAnBgB,kBAC7B,kBAAC,IAAD,CAAqB3B,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAWP,KAAMA,EAAMQ,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IACpE,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,KAAK,WACLF,QAAQ,KACRG,OAAO,UACPkB,IAAK,kBAAC,EAAD,QAEP,kBAAC,IAAD,CAAMnB,KAAK,WAAWF,QAAQ,KAAKG,OAAO,eC7BjCmB,EAhBqB,kBAClC,kBAAC,IAAD,CAAqB7B,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAWP,KAAMA,EAAMQ,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IACpE,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAea,EAAE,SAASX,OAAO,MAAMoB,MAAM,gBAC7C,kBAAC,IAAD,CAAeR,EAAG,KAAMQ,MAAM,MAAMpB,OAAO,QAC3C,kBAAC,IAAD,CAAMD,KAAK,WAAWF,QAAQ,KAAKG,OAAO,YAC1C,kBAAC,IAAD,CAAMD,KAAK,WAAWF,QAAQ,KAAKG,OAAO,eCYjCqB,EAxBS,kBACtB,kBAAC,IAAD,CAAqB/B,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAWP,KAAMA,EAAMQ,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IACpE,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,KAAK,WACLF,QAAQ,KACRG,OAAO,UACPF,gBAAgB,QAElB,kBAAC,IAAD,CACEC,KAAK,WACLF,QAAQ,KACRG,OAAO,UACPF,gBAAgB,eCJTwB,EAdkB,kBAC/B,kBAAC,IAAD,CAAqBhC,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CAAWP,KAAMA,EAAMQ,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IACpE,kBAAC,IAAD,CAAOC,QAAQ,OAAO0B,QAAS,CAAC5B,KAAM,GAAID,MAAO,MACjD,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeI,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMC,KAAK,WAAWF,QAAQ,KAAKG,OAAO,UAAUC,UAAW,CAACC,EAAG,KACnE,kBAAC,IAAD,CAAMH,KAAK,WAAWF,QAAQ,KAAKG,OAAO,e,QCmCjCwB,EA5Ce,kBAC5B,kBAAC,IAAD,CAAqBlC,MAAM,OAAOC,OAAQ,KACxC,6BACE,kBAACkC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAqBpC,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CACEP,KAAMA,EACNQ,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAC/C,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,KAAK,WACLF,QAAQ,KACRG,OAAO,UACPa,KAAK,eAKb,kBAACY,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAqBpC,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CACEP,KAAMA,EACNQ,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAC/C,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACE6B,cAAc,EACd5B,KAAK,WACLF,QAAQ,KACRG,OAAO,UACPa,KAAK,kBCuCJe,EAvEe,kBAC5B,kBAAC,IAAD,CAAqBtC,MAAM,OAAOC,OAAQ,KACxC,kBAACkC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAKI,UAAU,SAASC,UAAU,KAAlC,qCAGA,kBAACL,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAqBpC,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CACEP,KAAMA,EACN+C,OAAO,QACPvC,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAC/C,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,KAAK,WACLF,QAAQ,KACRG,OAAO,UACPa,KAAK,eAKb,kBAACY,EAAA,EAAD,CAAKI,UAAU,SAASC,UAAU,KAAlC,4BAGA,kBAACL,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAqBpC,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CACEP,KAAMA,EACN+C,OAAO,QACPvC,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAC/C,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,KAAK,WACLF,QAAQ,KACRG,OAAO,UACPa,KAAK,eAKb,kBAACY,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,CAAqBpC,MAAM,OAAOC,OAAQ,KACxC,kBAAC,IAAD,CACEP,KAAMA,EACN+C,OAAO,QACPvC,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAC/C,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,KAAK,WACLF,QAAQ,KACRG,OAAO,UACPa,KAAK,YAEP,kBAAC,IAAD,Y,oCCuBGmB,UAvEG,SAAC,GAAY,EAAXC,MAClB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,aACNC,YAAY,4EACZC,OAAO,4CAGT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACER,MAAM,oBACNL,UAAWzC,EACXuD,OC7CG,6wBDgDP,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACER,MAAM,sBACNL,UAAW3B,EACXyC,OEpDG,yyBFuDP,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACER,MAAM,4BACNL,UAAWb,EACX2B,OG3DG,grGH8DP,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACER,MAAM,kCACNL,UAAWX,EACXyB,OIlEG,06BJqEP,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACER,MAAM,oBACNL,UAAWT,EACXuB,OKzEG,o5BL4EP,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACER,MAAM,iCACNL,UAAWR,EACXsB,OMhFG,+zBNmFP,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACER,MAAM,0BACNL,UAAWF,EACXgB,OOvFG,giFP0FP,kBAACL,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACER,MAAM,2BACNL,UAAWN,EACXoB,OQ9FG","file":"static/js/158.c7938870.chunk.js","sourcesContent":["const data = [\r\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n  {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\r\n  {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n  {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\nexport default data;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst SimpleLineChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\r\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default SimpleLineChart;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst VerticalLineChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart\r\n      layout='vertical'\r\n      data={data}\r\n      margin={{top: 10, right: 0, left: -13, bottom: 0}}>\r\n      <XAxis type='number' />\r\n      <YAxis dataKey='name' type='category' />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line dataKey='pv' stroke='#4299E1' />\r\n      <Line dataKey='uv' stroke='#F04F47' />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default VerticalLineChart;\r\n","import React, {Component} from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nclass CustomizedDot extends Component {\r\n  render() {\r\n    const {cx, cy, value} = this.props;\r\n\r\n    if (value > 2500) {\r\n      return (\r\n        <svg\r\n          x={cx - 10}\r\n          y={cy - 10}\r\n          width={20}\r\n          height={20}\r\n          fill='red'\r\n          viewBox='0 0 1024 1024'>\r\n          <path d='M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM686.176 296.704c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM772.928 555.392c-18.752-8.864-40.928-0.576-49.632 18.528-40.224 88.576-120.256 143.552-208.832 143.552-85.952 0-164.864-52.64-205.952-137.376-9.184-18.912-31.648-26.592-50.08-17.28-18.464 9.408-21.216 21.472-15.936 32.64 52.8 111.424 155.232 186.784 269.76 186.784 117.984 0 217.12-70.944 269.76-186.784 8.672-19.136 9.568-31.2-9.12-40.096z' />\r\n        </svg>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <svg\r\n        x={cx - 10}\r\n        y={cy - 10}\r\n        width={20}\r\n        height={20}\r\n        fill='green'\r\n        viewBox='0 0 1024 1024'>\r\n        <path d='M517.12 53.248q95.232 0 179.2 36.352t145.92 98.304 98.304 145.92 36.352 179.2-36.352 179.2-98.304 145.92-145.92 98.304-179.2 36.352-179.2-36.352-145.92-98.304-98.304-145.92-36.352-179.2 36.352-179.2 98.304-145.92 145.92-98.304 179.2-36.352zM663.552 261.12q-15.36 0-28.16 6.656t-23.04 18.432-15.872 27.648-5.632 33.28q0 35.84 21.504 61.44t51.2 25.6 51.2-25.6 21.504-61.44q0-17.408-5.632-33.28t-15.872-27.648-23.04-18.432-28.16-6.656zM373.76 261.12q-29.696 0-50.688 25.088t-20.992 60.928 20.992 61.44 50.688 25.6 50.176-25.6 20.48-61.44-20.48-60.928-50.176-25.088zM520.192 602.112q-51.2 0-97.28 9.728t-82.944 27.648-62.464 41.472-35.84 51.2q-1.024 1.024-1.024 2.048-1.024 3.072-1.024 8.704t2.56 11.776 7.168 11.264 12.8 6.144q25.6-27.648 62.464-50.176 31.744-19.456 79.36-35.328t114.176-15.872q67.584 0 116.736 15.872t81.92 35.328q37.888 22.528 63.488 50.176 17.408-5.12 19.968-18.944t0.512-18.944-3.072-7.168-1.024-3.072q-26.624-55.296-100.352-88.576t-176.128-33.28z' />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nconst CustomizedDotLineChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line\r\n        type='monotone'\r\n        dataKey='pv'\r\n        stroke='#4299E1'\r\n        dot={<CustomizedDot />}\r\n      />\r\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default CustomizedDotLineChart;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst LineChartWithReferenceLines = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <ReferenceLine x='Page C' stroke='red' label='Max PV PAGE' />\r\n      <ReferenceLine y={9800} label='Max' stroke='red' />\r\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' />\r\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default LineChartWithReferenceLines;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst DashedLineChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line\r\n        type='monotone'\r\n        dataKey='pv'\r\n        stroke='#4299E1'\r\n        strokeDasharray='5 5'\r\n      />\r\n      <Line\r\n        type='monotone'\r\n        dataKey='uv'\r\n        stroke='#F04F47'\r\n        strokeDasharray='3 4 5 2'\r\n      />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default DashedLineChart;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst LineChartWithXAxisPading = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' padding={{left: 30, right: 30}} />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\r\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default LineChartWithXAxisPading;\r\n","import React from 'react';\r\nimport {\r\n  CartesianGrid,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst LineChartConnectNulls = () => (\r\n  <ResponsiveContainer width='100%' height={600}>\r\n    <div>\r\n      <Box mb={4}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <LineChart\r\n            data={data}\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Line\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n      <Box mb={4}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <LineChart\r\n            data={data}\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Line\r\n              connectNulls={true}\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n    </div>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default LineChartConnectNulls;\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  Brush,\r\n  CartesianGrid,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst SynchronizedLineChart = () => (\r\n  <ResponsiveContainer width='100%' height={700}>\r\n    <Box>\r\n      <Box textAlign='center' component='p'>\r\n        A demo of synchronized AreaCharts\r\n      </Box>\r\n      <Box mb={4}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <LineChart\r\n            data={data}\r\n            syncId='anyId'\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Line\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n      <Box textAlign='center' component='p'>\r\n        Maybe some other content\r\n      </Box>\r\n      <Box mb={4}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <LineChart\r\n            data={data}\r\n            syncId='anyId'\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Line\r\n              type='monotone'\r\n              dataKey='pv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n      <Box mb={4}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <AreaChart\r\n            data={data}\r\n            syncId='anyId'\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Area\r\n              type='monotone'\r\n              dataKey='pv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n            <Brush />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n    </Box>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default SynchronizedLineChart;\r\n","import React from 'react';\r\nimport SimpleLineChart from './Components/SimpleLineChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SimpleLineChartSource from '!raw-loader!./Components/SimpleLineChart';\r\nimport VerticalLineChart from './Components/VerticalLineChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport VerticalLineChartSource from '!raw-loader!./Components/VerticalLineChart';\r\nimport CustomizedDotLineChart from './Components/CustomizedDotLineChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport CustomizedDotLineChartSource from '!raw-loader!./Components/CustomizedDotLineChart';\r\nimport LineChartWithReferenceLines from './Components/LineChartWithReferenceLines';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport LineChartWithReferenceLinesSource from '!raw-loader!./Components/LineChartWithReferenceLines';\r\nimport DashedLineChart from './Components/DashedLineChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport DashedLineChartSource from '!raw-loader!./Components/DashedLineChart';\r\nimport LineChartWithXAxisPading from './Components/LineChartWithXAxisPading';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport LineChartWithXAxisPadingSource from '!raw-loader!./Components/LineChartWithXAxisPading';\r\nimport LineChartConnectNulls from './Components/LineChartConnectNulls';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport LineChartConnectNullsSource from '!raw-loader!./Components/LineChartConnectNulls';\r\nimport SynchronizedLineChart from './Components/SynchronizedLineChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SynchronizedLineChartSource from '!raw-loader!./Components/SynchronizedLineChart';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nconst LineChart = ({match}) => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Line Chart'\r\n        description='All svg elements can be added into the LineChart component, such as defs.'\r\n        refUrl='http://recharts.org/en-US/api/LineChart'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Simple Line Chart'\r\n            component={SimpleLineChart}\r\n            source={SimpleLineChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Vertical Line Chart'\r\n            component={VerticalLineChart}\r\n            source={VerticalLineChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Customized Dot Line Chart'\r\n            component={CustomizedDotLineChart}\r\n            source={CustomizedDotLineChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Line Chart With Reference Lines'\r\n            component={LineChartWithReferenceLines}\r\n            source={LineChartWithReferenceLinesSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Dashed Line Chart'\r\n            component={DashedLineChart}\r\n            source={DashedLineChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Line Chart With X-Axis Padding'\r\n            component={LineChartWithXAxisPading}\r\n            source={LineChartWithXAxisPadingSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Synchronized Line Chart'\r\n            component={SynchronizedLineChart}\r\n            source={SynchronizedLineChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Line Chart Connect Nulls'\r\n            component={LineChartConnectNulls}\r\n            source={LineChartConnectNullsSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst SimpleLineChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\\r\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default SimpleLineChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst VerticalLineChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart\\r\\n      layout='vertical'\\r\\n      data={data}\\r\\n      margin={{top: 10, right: 0, left: -13, bottom: 0}}>\\r\\n      <XAxis type='number' />\\r\\n      <YAxis dataKey='name' type='category' />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Line dataKey='pv' stroke='#4299E1' />\\r\\n      <Line dataKey='uv' stroke='#F04F47' />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default VerticalLineChart;\\r\\n\";","export default \"import React, {Component} from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nclass CustomizedDot extends Component {\\r\\n  render() {\\r\\n    const {cx, cy, value} = this.props;\\r\\n\\r\\n    if (value > 2500) {\\r\\n      return (\\r\\n        <svg\\r\\n          x={cx - 10}\\r\\n          y={cy - 10}\\r\\n          width={20}\\r\\n          height={20}\\r\\n          fill='red'\\r\\n          viewBox='0 0 1024 1024'>\\r\\n          <path d='M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM686.176 296.704c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM772.928 555.392c-18.752-8.864-40.928-0.576-49.632 18.528-40.224 88.576-120.256 143.552-208.832 143.552-85.952 0-164.864-52.64-205.952-137.376-9.184-18.912-31.648-26.592-50.08-17.28-18.464 9.408-21.216 21.472-15.936 32.64 52.8 111.424 155.232 186.784 269.76 186.784 117.984 0 217.12-70.944 269.76-186.784 8.672-19.136 9.568-31.2-9.12-40.096z' />\\r\\n        </svg>\\r\\n      );\\r\\n    }\\r\\n\\r\\n    return (\\r\\n      <svg\\r\\n        x={cx - 10}\\r\\n        y={cy - 10}\\r\\n        width={20}\\r\\n        height={20}\\r\\n        fill='green'\\r\\n        viewBox='0 0 1024 1024'>\\r\\n        <path d='M517.12 53.248q95.232 0 179.2 36.352t145.92 98.304 98.304 145.92 36.352 179.2-36.352 179.2-98.304 145.92-145.92 98.304-179.2 36.352-179.2-36.352-145.92-98.304-98.304-145.92-36.352-179.2 36.352-179.2 98.304-145.92 145.92-98.304 179.2-36.352zM663.552 261.12q-15.36 0-28.16 6.656t-23.04 18.432-15.872 27.648-5.632 33.28q0 35.84 21.504 61.44t51.2 25.6 51.2-25.6 21.504-61.44q0-17.408-5.632-33.28t-15.872-27.648-23.04-18.432-28.16-6.656zM373.76 261.12q-29.696 0-50.688 25.088t-20.992 60.928 20.992 61.44 50.688 25.6 50.176-25.6 20.48-61.44-20.48-60.928-50.176-25.088zM520.192 602.112q-51.2 0-97.28 9.728t-82.944 27.648-62.464 41.472-35.84 51.2q-1.024 1.024-1.024 2.048-1.024 3.072-1.024 8.704t2.56 11.776 7.168 11.264 12.8 6.144q25.6-27.648 62.464-50.176 31.744-19.456 79.36-35.328t114.176-15.872q67.584 0 116.736 15.872t81.92 35.328q37.888 22.528 63.488 50.176 17.408-5.12 19.968-18.944t0.512-18.944-3.072-7.168-1.024-3.072q-26.624-55.296-100.352-88.576t-176.128-33.28z' />\\r\\n      </svg>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nconst CustomizedDotLineChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Line\\r\\n        type='monotone'\\r\\n        dataKey='pv'\\r\\n        stroke='#4299E1'\\r\\n        dot={<CustomizedDot />}\\r\\n      />\\r\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default CustomizedDotLineChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ReferenceLine,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst LineChartWithReferenceLines = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <ReferenceLine x='Page C' stroke='red' label='Max PV PAGE' />\\r\\n      <ReferenceLine y={9800} label='Max' stroke='red' />\\r\\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' />\\r\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default LineChartWithReferenceLines;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst DashedLineChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Line\\r\\n        type='monotone'\\r\\n        dataKey='pv'\\r\\n        stroke='#4299E1'\\r\\n        strokeDasharray='5 5'\\r\\n      />\\r\\n      <Line\\r\\n        type='monotone'\\r\\n        dataKey='uv'\\r\\n        stroke='#F04F47'\\r\\n        strokeDasharray='3 4 5 2'\\r\\n      />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default DashedLineChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst LineChartWithXAxisPading = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <LineChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' padding={{left: 30, right: 30}} />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Line type='monotone' dataKey='pv' stroke='#4299E1' activeDot={{r: 8}} />\\r\\n      <Line type='monotone' dataKey='uv' stroke='#F04F47' />\\r\\n    </LineChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default LineChartWithXAxisPading;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Area,\\r\\n  AreaChart,\\r\\n  Brush,\\r\\n  CartesianGrid,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\nimport Box from '@material-ui/core/Box';\\r\\n\\r\\nconst SynchronizedLineChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={700}>\\r\\n    <Box>\\r\\n      <Box textAlign='center' component='p'>\\r\\n        A demo of synchronized AreaCharts\\r\\n      </Box>\\r\\n      <Box mb={4}>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <LineChart\\r\\n            data={data}\\r\\n            syncId='anyId'\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Line\\r\\n              type='monotone'\\r\\n              dataKey='uv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n          </LineChart>\\r\\n        </ResponsiveContainer>\\r\\n      </Box>\\r\\n      <Box textAlign='center' component='p'>\\r\\n        Maybe some other content\\r\\n      </Box>\\r\\n      <Box mb={4}>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <LineChart\\r\\n            data={data}\\r\\n            syncId='anyId'\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Line\\r\\n              type='monotone'\\r\\n              dataKey='pv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n          </LineChart>\\r\\n        </ResponsiveContainer>\\r\\n      </Box>\\r\\n      <Box mb={4}>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <AreaChart\\r\\n            data={data}\\r\\n            syncId='anyId'\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Area\\r\\n              type='monotone'\\r\\n              dataKey='pv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n            <Brush />\\r\\n          </AreaChart>\\r\\n        </ResponsiveContainer>\\r\\n      </Box>\\r\\n    </Box>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default SynchronizedLineChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  CartesianGrid,\\r\\n  Line,\\r\\n  LineChart,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\nimport Box from '@material-ui/core/Box';\\r\\n\\r\\nconst LineChartConnectNulls = () => (\\r\\n  <ResponsiveContainer width='100%' height={600}>\\r\\n    <div>\\r\\n      <Box mb={4}>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <LineChart\\r\\n            data={data}\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Line\\r\\n              type='monotone'\\r\\n              dataKey='uv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n          </LineChart>\\r\\n        </ResponsiveContainer>\\r\\n      </Box>\\r\\n      <Box mb={4}>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <LineChart\\r\\n            data={data}\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Line\\r\\n              connectNulls={true}\\r\\n              type='monotone'\\r\\n              dataKey='uv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n          </LineChart>\\r\\n        </ResponsiveContainer>\\r\\n      </Box>\\r\\n    </div>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default LineChartConnectNulls;\\r\\n\";"],"sourceRoot":""}