{"version":3,"sources":["modules/auth/ForgetPassword/ForgetPasswordFirebase.js","modules/auth/ForgetPassword/ForgetPasswordAwsCognito.js","modules/auth/ForgetPassword/ForgetPasswordJwtAuth.js","modules/auth/ForgetPassword/index.js"],"names":["useStyles","makeStyles","theme","image","display","cursor","width","card","maxWidth","textAlign","padding","overflow","position","boxShadow","breakpoints","up","paddingLeft","paddingRight","content","left","right","top","height","borderBottomRightRadius","borderBottomLeftRadius","marginRight","marginLeft","backgroundColor","palette","primary","main","form","textField","btnRoot","fontWeight","Fonts","REGULAR","textTransform","fontSize","paddingTop","paddingBottom","borderRadius","overrides","MuiCard","root","textSecondary","color","underlineNone","textDecoration","textGrey","grey","MyTextField","props","useField","field","meta","errorText","error","touched","TextField","helperText","validationSchema","yup","email","IntlMessages","id","required","ForgetPasswordFirebase","dispatch","useDispatch","classes","Box","flex","flexDirection","justifyContent","mb","xs","md","xl","className","src","alt","alignItems","Card","component","Typography","validateOnChange","initialValues","onSubmit","data","setSubmitting","resetForm","onForgetPasswordFirebaseUser","isSubmitting","lg","placeholder","name","label","variant","Button","disabled","type","pt","to","clsx","InfoView","ForgetPasswordAwsCognito","history","useHistory","onResetCognitoPassword","ForgetPasswordJwtAuth","ForgetPassword","location","useLocation","tab","state"],"mappings":"qRAiBMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,MAAO,CACLC,QAAS,eACTC,OAAQ,UACRC,MAAO,KAETC,MAAI,GACFC,SAAU,IACVF,MAAO,OACPG,UAAW,SACXC,QAAS,GACTC,SAAU,SACVC,SAAU,WACVC,UAAW,uCAPT,cAQDX,EAAMY,YAAYC,GAAG,MAAQ,CAC5BL,QAAS,KATT,cAWDR,EAAMY,YAAYC,GAAG,MAAQ,CAC5BL,QAAS,KAZT,cAcDR,EAAMY,YAAYC,GAAG,MAAQ,CAC5BC,YAAa,GACbC,aAAc,KAhBd,cAkBF,WAAY,CACVC,QAAS,KACTN,SAAU,WACVO,KAAM,EACNC,MAAO,EACPC,IAAK,EACLf,MAAO,IACPgB,OAAQ,EACRC,wBAAyB,GACzBC,uBAAwB,GACxBC,YAAa,OACbC,WAAY,OACZC,gBAAiBzB,EAAM0B,QAAQC,QAAQC,OA9BvC,GAiCJC,KAAM,CACJtB,UAAW,QAEbuB,UAAW,CACT1B,MAAO,QAET2B,QAAS,CACP3B,MAAO,OACP4B,WAAYC,IAAMC,QAClBC,cAAe,aACfC,SAAU,GACVC,WAAY,GACZC,cAAe,GACfC,aAAcvC,EAAMwC,UAAUC,QAAQC,KAAKH,cAE7CI,cAAe,CACbC,MAAO5C,EAAM0B,QAAQC,QAAQC,KAC7BJ,WAAY,IAEdqB,cAAe,CACbC,eAAgB,QAElBC,SAAU,CACRH,MAAO5C,EAAM0B,QAAQsB,KAAK,UAIxBC,EAAc,SAACC,GAAW,IAAD,EACPC,YAASD,GADF,mBACtBE,EADsB,KACfC,EADe,KAEvBC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACE,kBAACE,EAAA,EAAD,iBACMP,EACAE,EAFN,CAGEM,WAAYJ,EACZC,QAASD,MAKTK,EAAmBC,IAAW,CAClCC,MAAOD,MAEJC,MAAM,kBAACC,EAAA,EAAD,CAAcC,GAAG,4BACvBC,SAAS,kBAACF,EAAA,EAAD,CAAcC,GAAG,gCAoGhBE,EAjGgB,WAC7B,IAAMC,EAAWC,cAEXC,EAAUtE,IAEhB,OACE,kBAACuE,EAAA,EAAD,CAAKC,KAAM,EAAGpE,QAAQ,OAAOqE,cAAc,SAASC,eAAe,UACjE,kBAACH,EAAA,EAAD,CAAKI,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAAKrE,UAAU,UACzC,yBACEsE,UAAWT,EAAQnE,MACnB6E,IAAK,0CACLC,IAAI,gBAIR,kBAACV,EAAA,EAAD,CACEnE,QAAQ,OACRqE,cAAc,SACdC,eAAe,SACfQ,WAAW,UACX,kBAACC,EAAA,EAAD,CAAMJ,UAAWT,EAAQ/D,MACvB,kBAACgE,EAAA,EAAD,CACEa,UAAU,KACVT,GAAI,CAACC,GAAI,EAAGE,GAAI,GAChBhC,MAAM,eACNZ,WAAYC,IAAMC,QAClBE,SAAU,CAACsC,GAAI,GAAIE,GAAI,IACvBzC,cAAc,aACd,kBAAC2B,EAAA,EAAD,CAAcC,GAAG,2BAEnB,kBAACM,EAAA,EAAD,CAAKI,GAAI,CAACC,GAAI,EAAGE,GAAI,IAAKxC,SAAU,IAClC,kBAAC+C,EAAA,EAAD,KACE,kBAACrB,EAAA,EAAD,CAAcC,GAAG,iCADnB,IACqD,6BACnD,kBAACD,EAAA,EAAD,CAAcC,GAAG,mCAIrB,kBAAC,IAAD,CACEqB,kBAAkB,EAClBC,cAAe,CACbxB,MAAO,IAETF,iBAAkBA,EAClB2B,SAAU,SAACC,EAAD,GAAuC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UAC/BD,GAAc,GACdtB,EAASwB,YAA6BH,EAAK1B,QAC3C2B,GAAc,GACdC,OAED,gBAAEE,EAAF,EAAEA,aAAF,OACC,kBAAC,IAAD,CAAMd,UAAWT,EAAQvC,MACvB,kBAACwC,EAAA,EAAD,CAAKI,GAAI,CAACC,GAAI,EAAGkB,GAAI,IACnB,kBAAC,EAAD,CACEC,YAAY,QACZC,KAAK,QACLC,MAAO,kBAACjC,EAAA,EAAD,CAAcC,GAAG,wBACxBc,UAAWT,EAAQtC,UACnBkE,QAAQ,cAGZ,kBAAC3B,EAAA,EAAD,CAAKI,GAAI,GACP,kBAACwB,EAAA,EAAD,CACED,QAAQ,YACRpD,MAAM,YACNsD,SAAUP,EACVd,UAAWT,EAAQrC,QACnBoE,KAAK,UACL,kBAACrC,EAAA,EAAD,CAAcC,GAAG,6BAIrB,kBAACM,EAAA,EAAD,CACE+B,GAAI,EACJ7F,UAAU,SACV6B,SAAU,GACVyC,UAAWT,EAAQrB,UACnB,kBAACe,EAAA,EAAD,CAAcC,GAAG,+BACjB,kBAAC,IAAD,CACEsC,GAAG,UACHxB,UAAWyB,kBACTlC,EAAQvB,cACRuB,EAAQzB,gBAEV,kBAACmB,EAAA,EAAD,CAAcC,GAAG,wBAO3B,kBAACwC,EAAA,EAAD,UChLJtD,EAAc,SAACC,GAAW,IAAD,EACPC,YAASD,GADF,mBACtBE,EADsB,KACfC,EADe,KAEvBC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACE,kBAACE,EAAA,EAAD,iBACMP,EACAE,EAFN,CAGEM,WAAYJ,EACZC,QAASD,MAKTK,EAAmBC,IAAW,CAClCC,MAAOD,MAEJC,MAAM,kBAACC,EAAA,EAAD,CAAcC,GAAG,4BACvBC,SAAS,kBAACF,EAAA,EAAD,CAAcC,GAAG,gCAsKhByC,EAnKkB,WAC/B,IAAMtC,EAAWC,cACXsC,EAAUC,cAmEVtC,EAjEYrE,aAAW,SAACC,GAAD,YAAY,CACvCC,MAAO,CACLC,QAAS,eACTC,OAAQ,UACRC,MAAO,KAETC,MAAI,GACFC,SAAU,IACVF,MAAO,OACPG,UAAW,SACXC,QAAS,GACTC,SAAU,SACVC,SAAU,WACVC,UAAW,uCAPT,cAQDX,EAAMY,YAAYC,GAAG,MAAQ,CAC5BL,QAAS,KATT,cAWDR,EAAMY,YAAYC,GAAG,MAAQ,CAC5BL,QAAS,KAZT,cAcDR,EAAMY,YAAYC,GAAG,MAAQ,CAC5BC,YAAa,GACbC,aAAc,KAhBd,cAkBF,WAAY,CACVC,QAAS,KACTN,SAAU,WACVO,KAAM,EACNC,MAAO,EACPC,IAAK,EACLf,MAAO,IACPgB,OAAQ,EACRC,wBAAyB,GACzBC,uBAAwB,GACxBC,YAAa,OACbC,WAAY,OACZC,gBAAiBzB,EAAM0B,QAAQC,QAAQC,OA9BvC,GAiCJC,KAAM,CACJtB,UAAW,QAEbuB,UAAW,CACT1B,MAAO,QAET2B,QAAS,CACP3B,MAAO,OACP4B,WAAYC,IAAMC,QAClBC,cAAe,aACfC,SAAU,GACVC,WAAY,GACZC,cAAe,IAEjBK,cAAe,CACbC,MAAO5C,EAAM0B,QAAQC,QAAQC,KAC7BJ,WAAY,IAEdqB,cAAe,CACbC,eAAgB,QAElBC,SAAU,CACRH,MAAO5C,EAAM0B,QAAQsB,KAAK,SAIdlD,GAEhB,OACE,kBAACuE,EAAA,EAAD,CAAKC,KAAM,EAAGpE,QAAQ,OAAOqE,cAAc,SAASC,eAAe,UACjE,kBAACH,EAAA,EAAD,CAAKI,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAAKrE,UAAU,UACzC,yBACEsE,UAAWT,EAAQnE,MACnB6E,IAAK,0CACLC,IAAI,gBAIR,kBAACV,EAAA,EAAD,CACEnE,QAAQ,OACRqE,cAAc,SACdC,eAAe,SACfQ,WAAW,UACX,kBAACC,EAAA,EAAD,CAAMJ,UAAWT,EAAQ/D,MACvB,kBAACgE,EAAA,EAAD,CACEa,UAAU,KACVT,GAAI,CAACC,GAAI,EAAGE,GAAI,GAChBhC,MAAM,eACNZ,WAAYC,IAAMC,QAClBE,SAAU,CAACsC,GAAI,GAAIE,GAAI,KACvB,kBAACd,EAAA,EAAD,CAAcC,GAAG,2BAEnB,kBAACM,EAAA,EAAD,CAAKI,GAAI,CAACC,GAAI,EAAGE,GAAI,IAAKxC,SAAU,IAClC,kBAAC+C,EAAA,EAAD,KACE,kBAACrB,EAAA,EAAD,CAAcC,GAAG,iCADnB,IACqD,6BACnD,kBAACD,EAAA,EAAD,CAAcC,GAAG,mCAIrB,kBAAC,IAAD,CACEqB,kBAAkB,EAClBC,cAAe,CACbxB,MAAO,IAETF,iBAAkBA,EAClB2B,SAAU,SAACC,EAAD,GAAuC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UAC/BD,GAAc,GACdtB,EAASyC,YAAuBpB,EAAK1B,MAAO4C,IAC5CjB,GAAc,GACdC,OAED,gBAAEE,EAAF,EAAEA,aAAF,OACC,kBAAC,IAAD,CAAMd,UAAWT,EAAQvC,MACvB,kBAACwC,EAAA,EAAD,CAAKI,GAAI,CAACC,GAAI,EAAGkB,GAAI,IACnB,kBAAC,EAAD,CACEC,YAAY,QACZC,KAAK,QACLC,MAAO,kBAACjC,EAAA,EAAD,CAAcC,GAAG,wBACxBc,UAAWT,EAAQtC,UACnBkE,QAAQ,cAIZ,kBAAC3B,EAAA,EAAD,CAAKI,GAAI,GACP,kBAACwB,EAAA,EAAD,CACED,QAAQ,YACRpD,MAAM,YACNsD,SAAUP,EACVd,UAAWT,EAAQrC,QACnBoE,KAAK,UACL,kBAACrC,EAAA,EAAD,CAAcC,GAAG,6BAIrB,kBAACM,EAAA,EAAD,CACE+B,GAAI,EACJ7F,UAAU,SACV6B,SAAU,GACVyC,UAAWT,EAAQrB,UACnB,kBAACe,EAAA,EAAD,CAAcC,GAAG,+BACjB,kBAAC,IAAD,CACEsC,GAAG,UACHxB,UAAWyB,kBACTlC,EAAQvB,cACRuB,EAAQzB,gBAEV,kBAACmB,EAAA,EAAD,CAAcC,GAAG,wBAO3B,kBAACwC,EAAA,EAAD,UChLJzG,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,MAAO,CACLC,QAAS,eACTC,OAAQ,UACRC,MAAO,KAETC,MAAI,GACFC,SAAU,IACVF,MAAO,OACPG,UAAW,SACXC,QAAS,GACTC,SAAU,SACVC,SAAU,WACVC,UAAW,uCAPT,cAQDX,EAAMY,YAAYC,GAAG,MAAQ,CAC5BL,QAAS,KATT,cAWDR,EAAMY,YAAYC,GAAG,MAAQ,CAC5BL,QAAS,KAZT,cAcDR,EAAMY,YAAYC,GAAG,MAAQ,CAC5BC,YAAa,GACbC,aAAc,KAhBd,cAkBF,WAAY,CACVC,QAAS,KACTN,SAAU,WACVO,KAAM,EACNC,MAAO,EACPC,IAAK,EACLf,MAAO,IACPgB,OAAQ,EACRC,wBAAyB,GACzBC,uBAAwB,GACxBC,YAAa,OACbC,WAAY,OACZC,gBAAiBzB,EAAM0B,QAAQC,QAAQC,OA9BvC,GAiCJC,KAAM,CACJtB,UAAW,QAEbuB,UAAW,CACT1B,MAAO,QAET2B,QAAS,CACP3B,MAAO,OACP4B,WAAYC,IAAMC,QAClBC,cAAe,aACfC,SAAU,GACVC,WAAY,GACZC,cAAe,GACfC,aAAcvC,EAAMwC,UAAUC,QAAQC,KAAKH,cAE7CI,cAAe,CACbC,MAAO5C,EAAM0B,QAAQC,QAAQC,KAC7BJ,WAAY,IAEdqB,cAAe,CACbC,eAAgB,QAElBC,SAAU,CACRH,MAAO5C,EAAM0B,QAAQsB,KAAK,UAIxBC,EAAc,SAACC,GAAW,IAAD,EACPC,YAASD,GADF,mBACtBE,EADsB,KACfC,EADe,KAEvBC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACE,kBAACE,EAAA,EAAD,iBACMP,EACAE,EAFN,CAGEM,WAAYJ,EACZC,QAASD,MAKTK,EAAmBC,IAAW,CAClCC,MAAOD,MAEJC,MAAM,kBAACC,EAAA,EAAD,CAAcC,GAAG,4BACvBC,SAAS,kBAACF,EAAA,EAAD,CAAcC,GAAG,gCAsGhB6C,EAnGe,WAC5B,IAAM1C,EAAWC,cACXsC,EAAUC,cAEVtC,EAAUtE,IAEhB,OACE,kBAACuE,EAAA,EAAD,CAAKC,KAAM,EAAGpE,QAAQ,OAAOqE,cAAc,SAASC,eAAe,UACjE,kBAACH,EAAA,EAAD,CAAKI,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAAKrE,UAAU,UACzC,yBACEsE,UAAWT,EAAQnE,MACnB6E,IAAK,0CACLC,IAAI,gBAIR,kBAACV,EAAA,EAAD,CACEnE,QAAQ,OACRqE,cAAc,SACdC,eAAe,SACfQ,WAAW,UACX,kBAACC,EAAA,EAAD,CAAMJ,UAAWT,EAAQ/D,MACvB,kBAACgE,EAAA,EAAD,CACEa,UAAU,KACVT,GAAI,CAACC,GAAI,EAAGE,GAAI,GAChBhC,MAAM,eACNZ,WAAYC,IAAMC,QAClBE,SAAU,CAACsC,GAAI,GAAIE,GAAI,IACvBzC,cAAc,aACd,kBAAC2B,EAAA,EAAD,CAAcC,GAAG,2BAEnB,kBAACM,EAAA,EAAD,CAAKI,GAAI,CAACC,GAAI,EAAGE,GAAI,IAAKxC,SAAU,IAClC,kBAAC+C,EAAA,EAAD,KACE,kBAACrB,EAAA,EAAD,CAAcC,GAAG,iCADnB,IACqD,6BACnD,kBAACD,EAAA,EAAD,CAAcC,GAAG,mCAIrB,kBAAC,IAAD,CACEqB,kBAAkB,EAClBC,cAAe,CACbxB,MAAO,IAETF,iBAAkBA,EAClB2B,SAAU,SAACC,EAAD,GAAuC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UAC/BD,GAAc,GACdtB,EAASyC,YAAuBpB,EAAK1B,MAAO4C,IAC5CjB,GAAc,GACdC,OAED,gBAAEE,EAAF,EAAEA,aAAF,OACC,kBAAC,IAAD,CAAMd,UAAWT,EAAQvC,MACvB,kBAACwC,EAAA,EAAD,CAAKI,GAAI,CAACC,GAAI,EAAGkB,GAAI,IACnB,kBAAC,EAAD,CACEC,YAAY,QACZC,KAAK,QACLC,MAAO,kBAACjC,EAAA,EAAD,CAAcC,GAAG,wBACxBc,UAAWT,EAAQtC,UACnBkE,QAAQ,cAIZ,kBAAC3B,EAAA,EAAD,CAAKI,GAAI,GACP,kBAACwB,EAAA,EAAD,CACED,QAAQ,YACRpD,MAAM,YACNsD,SAAUP,EACVd,UAAWT,EAAQrC,QACnBoE,KAAK,UACL,kBAACrC,EAAA,EAAD,CAAcC,GAAG,6BAIrB,kBAACM,EAAA,EAAD,CACE+B,GAAI,EACJ7F,UAAU,SACV6B,SAAU,GACVyC,UAAWT,EAAQrB,UACnB,kBAACe,EAAA,EAAD,CAAcC,GAAG,+BACjB,kBAAC,IAAD,CACEsC,GAAG,UACHxB,UAAWyB,kBACTlC,EAAQvB,cACRuB,EAAQzB,gBAEV,kBAACmB,EAAA,EAAD,CAAcC,GAAG,wBAO3B,kBAACwC,EAAA,EAAD,UC/KKM,UAdQ,WACrB,IAAMC,EAAWC,cAEXC,EAAOF,EAASG,OAASH,EAASG,MAAMD,KAAQ,WAEtD,OACE,oCACW,aAARA,GAAsB,kBAAC,EAAD,MACd,eAARA,GAAwB,kBAAC,EAAD,MAChB,YAARA,GAAqB,kBAAC,EAAD","file":"static/js/115.e04e4009.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {onForgetPasswordFirebaseUser} from '../../../redux/actions';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport {Link} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image: {\r\n    display: 'inline-block',\r\n    cursor: 'pointer',\r\n    width: 140,\r\n  },\r\n  card: {\r\n    maxWidth: 576,\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    padding: 24,\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: 40,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: 48,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 48,\r\n      paddingRight: 48,\r\n    },\r\n    '&:before': {\r\n      content: \"''\",\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      width: 130,\r\n      height: 9,\r\n      borderBottomRightRadius: 80,\r\n      borderBottomLeftRadius: 80,\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  form: {\r\n    textAlign: 'left',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n  },\r\n  btnRoot: {\r\n    width: '100%',\r\n    fontWeight: Fonts.REGULAR,\r\n    textTransform: 'capitalize',\r\n    fontSize: 16,\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n  },\r\n  textSecondary: {\r\n    color: theme.palette.primary.main,\r\n    marginLeft: 10,\r\n  },\r\n  underlineNone: {\r\n    textDecoration: 'none',\r\n  },\r\n  textGrey: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst MyTextField = (props) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n});\r\n\r\nconst ForgetPasswordFirebase = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column' justifyContent='center'>\r\n      <Box mb={{xs: 6, md: 8, xl: 18}} textAlign='center'>\r\n        <img\r\n          className={classes.image}\r\n          src={'/assets/images/logo-white-with-name.png'}\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Card className={classes.card}>\r\n          <Box\r\n            component='h2'\r\n            mb={{xs: 6, xl: 8}}\r\n            color='text.primary'\r\n            fontWeight={Fonts.REGULAR}\r\n            fontSize={{xs: 24, xl: 26}}\r\n            textTransform='uppercase'>\r\n            <IntlMessages id='common.forgetPassword' />\r\n          </Box>\r\n          <Box mb={{xs: 6, xl: 12}} fontSize={18}>\r\n            <Typography>\r\n              <IntlMessages id='common.forgetPasswordTextOne' /> <br />\r\n              <IntlMessages id='common.forgetPasswordTextTwo' />\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              email: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(data, {setSubmitting, resetForm}) => {\r\n              setSubmitting(true);\r\n              dispatch(onForgetPasswordFirebaseUser(data.email));\r\n              setSubmitting(false);\r\n              resetForm();\r\n            }}>\r\n            {({isSubmitting}) => (\r\n              <Form className={classes.form}>\r\n                <Box mb={{xs: 5, lg: 8}}>\r\n                  <MyTextField\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    label={<IntlMessages id='common.emailAddress' />}\r\n                    className={classes.textField}\r\n                    variant='outlined'\r\n                  />\r\n                </Box>\r\n                <Box mb={4}>\r\n                  <Button\r\n                    variant='contained'\r\n                    color='secondary'\r\n                    disabled={isSubmitting}\r\n                    className={classes.btnRoot}\r\n                    type='submit'>\r\n                    <IntlMessages id='common.sendNewPassword' />\r\n                  </Button>\r\n                </Box>\r\n\r\n                <Box\r\n                  pt={3}\r\n                  textAlign='center'\r\n                  fontSize={15}\r\n                  className={classes.textGrey}>\r\n                  <IntlMessages id='common.alreadyHavePassword' />\r\n                  <Link\r\n                    to='/signin'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.textSecondary,\r\n                    )}>\r\n                    <IntlMessages id='common.signIn' />\r\n                  </Link>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n\r\n          <InfoView />\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordFirebase;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onResetCognitoPassword} from '../../../redux/actions';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport clsx from 'clsx';\r\n\r\nconst MyTextField = (props) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n});\r\n\r\nconst ForgetPasswordAwsCognito = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    image: {\r\n      display: 'inline-block',\r\n      cursor: 'pointer',\r\n      width: 140,\r\n    },\r\n    card: {\r\n      maxWidth: 576,\r\n      width: '100%',\r\n      textAlign: 'center',\r\n      padding: 24,\r\n      overflow: 'hidden',\r\n      position: 'relative',\r\n      boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n      [theme.breakpoints.up('sm')]: {\r\n        padding: 40,\r\n      },\r\n      [theme.breakpoints.up('md')]: {\r\n        padding: 48,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        paddingLeft: 48,\r\n        paddingRight: 48,\r\n      },\r\n      '&:before': {\r\n        content: \"''\",\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        width: 130,\r\n        height: 9,\r\n        borderBottomRightRadius: 80,\r\n        borderBottomLeftRadius: 80,\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        backgroundColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n    form: {\r\n      textAlign: 'left',\r\n    },\r\n    textField: {\r\n      width: '100%',\r\n    },\r\n    btnRoot: {\r\n      width: '100%',\r\n      fontWeight: Fonts.REGULAR,\r\n      textTransform: 'capitalize',\r\n      fontSize: 16,\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n    },\r\n    textSecondary: {\r\n      color: theme.palette.primary.main,\r\n      marginLeft: 10,\r\n    },\r\n    underlineNone: {\r\n      textDecoration: 'none',\r\n    },\r\n    textGrey: {\r\n      color: theme.palette.grey[500],\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column' justifyContent='center'>\r\n      <Box mb={{xs: 6, md: 8, xl: 18}} textAlign='center'>\r\n        <img\r\n          className={classes.image}\r\n          src={'/assets/images/logo-white-with-name.png'}\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Card className={classes.card}>\r\n          <Box\r\n            component='h2'\r\n            mb={{xs: 6, xl: 8}}\r\n            color='text.primary'\r\n            fontWeight={Fonts.REGULAR}\r\n            fontSize={{xs: 24, xl: 26}}>\r\n            <IntlMessages id='common.forgetPassword' />\r\n          </Box>\r\n          <Box mb={{xs: 6, xl: 12}} fontSize={18}>\r\n            <Typography>\r\n              <IntlMessages id='common.forgetPasswordTextOne' /> <br />\r\n              <IntlMessages id='common.forgetPasswordTextTwo' />\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              email: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(data, {setSubmitting, resetForm}) => {\r\n              setSubmitting(true);\r\n              dispatch(onResetCognitoPassword(data.email, history));\r\n              setSubmitting(false);\r\n              resetForm();\r\n            }}>\r\n            {({isSubmitting}) => (\r\n              <Form className={classes.form}>\r\n                <Box mb={{xs: 5, lg: 8}}>\r\n                  <MyTextField\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    label={<IntlMessages id='common.emailAddress' />}\r\n                    className={classes.textField}\r\n                    variant='outlined'\r\n                  />\r\n                </Box>\r\n\r\n                <Box mb={4}>\r\n                  <Button\r\n                    variant='contained'\r\n                    color='secondary'\r\n                    disabled={isSubmitting}\r\n                    className={classes.btnRoot}\r\n                    type='submit'>\r\n                    <IntlMessages id='common.sendNewPassword' />\r\n                  </Button>\r\n                </Box>\r\n\r\n                <Box\r\n                  pt={3}\r\n                  textAlign='center'\r\n                  fontSize={15}\r\n                  className={classes.textGrey}>\r\n                  <IntlMessages id='common.alreadyHavePassword' />\r\n                  <Link\r\n                    to='/signin'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.textSecondary,\r\n                    )}>\r\n                    <IntlMessages id='common.signIn' />\r\n                  </Link>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n\r\n          <InfoView />\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordAwsCognito;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onResetCognitoPassword} from '../../../redux/actions';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image: {\r\n    display: 'inline-block',\r\n    cursor: 'pointer',\r\n    width: 140,\r\n  },\r\n  card: {\r\n    maxWidth: 576,\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    padding: 24,\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: 40,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: 48,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 48,\r\n      paddingRight: 48,\r\n    },\r\n    '&:before': {\r\n      content: \"''\",\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      width: 130,\r\n      height: 9,\r\n      borderBottomRightRadius: 80,\r\n      borderBottomLeftRadius: 80,\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  form: {\r\n    textAlign: 'left',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n  },\r\n  btnRoot: {\r\n    width: '100%',\r\n    fontWeight: Fonts.REGULAR,\r\n    textTransform: 'capitalize',\r\n    fontSize: 16,\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n  },\r\n  textSecondary: {\r\n    color: theme.palette.primary.main,\r\n    marginLeft: 10,\r\n  },\r\n  underlineNone: {\r\n    textDecoration: 'none',\r\n  },\r\n  textGrey: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst MyTextField = (props) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n});\r\n\r\nconst ForgetPasswordJwtAuth = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column' justifyContent='center'>\r\n      <Box mb={{xs: 6, md: 8, xl: 18}} textAlign='center'>\r\n        <img\r\n          className={classes.image}\r\n          src={'/assets/images/logo-white-with-name.png'}\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Card className={classes.card}>\r\n          <Box\r\n            component='h2'\r\n            mb={{xs: 6, xl: 8}}\r\n            color='text.primary'\r\n            fontWeight={Fonts.REGULAR}\r\n            fontSize={{xs: 24, xl: 26}}\r\n            textTransform='uppercase'>\r\n            <IntlMessages id='common.forgetPassword' />\r\n          </Box>\r\n          <Box mb={{xs: 6, xl: 12}} fontSize={18}>\r\n            <Typography>\r\n              <IntlMessages id='common.forgetPasswordTextOne' /> <br />\r\n              <IntlMessages id='common.forgetPasswordTextTwo' />\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              email: '',\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(data, {setSubmitting, resetForm}) => {\r\n              setSubmitting(true);\r\n              dispatch(onResetCognitoPassword(data.email, history));\r\n              setSubmitting(false);\r\n              resetForm();\r\n            }}>\r\n            {({isSubmitting}) => (\r\n              <Form className={classes.form}>\r\n                <Box mb={{xs: 5, lg: 8}}>\r\n                  <MyTextField\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    label={<IntlMessages id='common.emailAddress' />}\r\n                    className={classes.textField}\r\n                    variant='outlined'\r\n                  />\r\n                </Box>\r\n\r\n                <Box mb={4}>\r\n                  <Button\r\n                    variant='contained'\r\n                    color='secondary'\r\n                    disabled={isSubmitting}\r\n                    className={classes.btnRoot}\r\n                    type='submit'>\r\n                    <IntlMessages id='common.sendNewPassword' />\r\n                  </Button>\r\n                </Box>\r\n\r\n                <Box\r\n                  pt={3}\r\n                  textAlign='center'\r\n                  fontSize={15}\r\n                  className={classes.textGrey}>\r\n                  <IntlMessages id='common.alreadyHavePassword' />\r\n                  <Link\r\n                    to='/signin'\r\n                    className={clsx(\r\n                      classes.underlineNone,\r\n                      classes.textSecondary,\r\n                    )}>\r\n                    <IntlMessages id='common.signIn' />\r\n                  </Link>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n\r\n          <InfoView />\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForgetPasswordJwtAuth;\r\n","import React from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport ForgetPasswordFirebase from './ForgetPasswordFirebase';\r\nimport ForgetPasswordAwsCognito from './ForgetPasswordAwsCognito';\r\nimport ForgetPasswordJwtAuth from './ForgetPasswordJwtAuth';\r\n\r\nconst ForgetPassword = () => {\r\n  const location = useLocation();\r\n\r\n  const tab = (location.state && location.state.tab) || 'firebase';\r\n\r\n  return (\r\n    <>\r\n      {tab === 'firebase' && <ForgetPasswordFirebase />}\r\n      {tab === 'awsCognito' && <ForgetPasswordAwsCognito />}\r\n      {tab === 'jwtAuth' && <ForgetPasswordJwtAuth />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n"],"sourceRoot":""}