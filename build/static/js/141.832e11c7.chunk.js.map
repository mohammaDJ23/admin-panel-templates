{"version":3,"sources":["modules/thirdParty/googleMap/MapClustering/Components/MarkerClustererEx.js","modules/thirdParty/googleMap/MapClustering/index.js","webpack:///./src/modules/thirdParty/googleMap/MapClustering/Components/MarkerClustererEx.js?d7b2"],"names":["MarkerClustererExampleGoogleMap","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","averageCenter","enableRetinaIcons","gridSize","markers","map","marker","position","latitude","longitude","key","photo_id","MarkerClustererExample","state","fetch","then","res","json","data","setState","photos","containerElement","className","mapElement","this","Component","MapClusteringEx","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","MapClustering","source"],"mappings":"sPAMMA,EAAkCC,yBAAc,SAACC,GAAD,OACpD,kBAAC,YAAD,CAAWC,YAAa,EAAGC,cAAe,CAACC,IAAK,WAAYC,IAAK,UAC/D,kBAAC,IAAD,CAAiBC,eAAa,EAACC,mBAAiB,EAACC,SAAU,IACxDP,EAAMQ,QAAQC,KAAI,SAACC,GAAD,OACjB,kBAAC,SAAD,CACEC,SAAU,CAACR,IAAKO,EAAOE,SAAUR,IAAKM,EAAOG,WAC7CC,IAAKJ,EAAOK,mBAODC,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXT,QAAS,IAHC,E,gEAOO,IAAD,OAClBU,IAAM,yHAGHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKC,SAAS,CAACf,QAASc,EAAKE,c,+BAKjC,OACE,kBAAC1B,EAAD,CACE2B,iBACE,yBAAKC,UAAU,kDAEjBC,WAAY,yBAAKD,UAAU,6BAC3BlB,QAASoB,KAAKX,MAAMT,c,GAzBwBqB,aCcrCC,UAtBS,WACtB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,mBACNC,YAAY,mCACZC,OAAO,sFAGT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEP,MAAM,uBACNQ,UAAWC,EACXC,OCzBG","file":"static/js/141.832e11c7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport fetch from 'isomorphic-fetch';\r\nimport {GoogleMap, Marker, withGoogleMap} from 'react-google-maps';\r\nimport MarkerClusterer from 'react-google-maps/lib/components/addons/MarkerClusterer';\r\n\r\nconst MarkerClustererExampleGoogleMap = withGoogleMap((props) => (\r\n  <GoogleMap defaultZoom={3} defaultCenter={{lat: 25.0391667, lng: 121.525}}>\r\n    <MarkerClusterer averageCenter enableRetinaIcons gridSize={60}>\r\n      {props.markers.map((marker) => (\r\n        <Marker\r\n          position={{lat: marker.latitude, lng: marker.longitude}}\r\n          key={marker.photo_id}\r\n        />\r\n      ))}\r\n    </MarkerClusterer>\r\n  </GoogleMap>\r\n));\r\n\r\nexport default class MarkerClustererExample extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      markers: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `https://gist.githubusercontent.com/farrrr/dfda7dd7fccfec5474d3/raw/758852bbc1979f6c4522ab4e92d1c92cba8fb0dc/data.json`,\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({markers: data.photos});\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MarkerClustererExampleGoogleMap\r\n        containerElement={\r\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\r\n        }\r\n        mapElement={<div className='cr-embed-responsive-item' />}\r\n        markers={this.state.markers}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nimport MapClustering from './Components/MarkerClustererEx.js';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapClusteringSource from '!raw-loader!./Components/MarkerClustererEx.js';\r\n\r\nconst MapClusteringEx = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Marker Clusterer'\r\n        description='A wrapper around MarkerClusterer'\r\n        refUrl='https://github.com/mahnunchik/markerclustererplus/blob/master/docs/reference.html'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Marker Clusterer Map'\r\n            component={MapClustering}\r\n            source={MapClusteringSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapClusteringEx;\r\n","export default \"import React, {Component} from 'react';\\r\\n\\r\\nimport fetch from 'isomorphic-fetch';\\r\\nimport {GoogleMap, Marker, withGoogleMap} from 'react-google-maps';\\r\\nimport MarkerClusterer from 'react-google-maps/lib/components/addons/MarkerClusterer';\\r\\n\\r\\nconst MarkerClustererExampleGoogleMap = withGoogleMap((props) => (\\r\\n  <GoogleMap defaultZoom={3} defaultCenter={{lat: 25.0391667, lng: 121.525}}>\\r\\n    <MarkerClusterer averageCenter enableRetinaIcons gridSize={60}>\\r\\n      {props.markers.map((marker) => (\\r\\n        <Marker\\r\\n          position={{lat: marker.latitude, lng: marker.longitude}}\\r\\n          key={marker.photo_id}\\r\\n        />\\r\\n      ))}\\r\\n    </MarkerClusterer>\\r\\n  </GoogleMap>\\r\\n));\\r\\n\\r\\nexport default class MarkerClustererExample extends Component {\\r\\n  constructor() {\\r\\n    super();\\r\\n    this.state = {\\r\\n      markers: [],\\r\\n    };\\r\\n  }\\r\\n\\r\\n  componentDidMount() {\\r\\n    fetch(\\r\\n      `https://gist.githubusercontent.com/farrrr/dfda7dd7fccfec5474d3/raw/758852bbc1979f6c4522ab4e92d1c92cba8fb0dc/data.json`,\\r\\n    )\\r\\n      .then((res) => res.json())\\r\\n      .then((data) => {\\r\\n        this.setState({markers: data.photos});\\r\\n      });\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <MarkerClustererExampleGoogleMap\\r\\n        containerElement={\\r\\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\\r\\n        }\\r\\n        mapElement={<div className='cr-embed-responsive-item' />}\\r\\n        markers={this.state.markers}\\r\\n      />\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\";"],"sourceRoot":""}