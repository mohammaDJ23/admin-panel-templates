{"version":3,"sources":["../node_modules/@material-ui/icons/Facebook.js","../node_modules/@material-ui/icons/Twitter.js","../node_modules/@material-ui/icons/GitHub.js","modules/auth/Signup/SignupAwsCognito.js","modules/auth/Signup/SignupJwtAuth.js","modules/auth/Signup/SignupFirebase.js","modules/auth/Signup/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","MyTextField","props","useField","field","meta","errorText","error","touched","TextField","helperText","validationSchema","yup","name","required","IntlMessages","id","email","password","confirmPassword","useStyles","makeStyles","theme","formRoot","textAlign","myTextFieldRoot","width","checkboxRoot","marginLeft","pointer","cursor","btnRoot","borderRadius","overrides","MuiCard","root","fontWeight","Fonts","LIGHT","fontSize","textTransform","dividerRoot","marginBottom","marginRight","breakpoints","up","iconButtonRoot","color","palette","grey","text","primary","textLg","textPrimary","colorTextPrimary","main","underlineNone","textDecoration","textGrey","SignupAwsCognito","dispatch","useDispatch","history","useHistory","classes","Box","flex","display","flexDirection","px","xs","sm","xl","pt","validateOnChange","initialValues","onSubmit","data","setSubmitting","setErrors","onSignUpCognitoUser","isSubmitting","className","noValidate","autoComplete","mb","label","variant","Grid","item","md","type","alignItems","Checkbox","component","mr","justifyContent","Button","disabled","ml","mt","to","clsx","bgcolor","py","IconButton","onClick","Auth","federatedSignIn","provider","InfoView","btnRootFull","SignupJwtAuth","onJwtUserSignUp","SignupFirebase","onSignUpFirebaseUser","signInUserWithGoogle","signInUserWithFacebook","signInUserWithGithub","signInUserWithTwitter","imgRoot","cardRoot","maxWidth","overflow","boxShadow","position","paddingTop","content","left","right","top","height","borderBottomRightRadius","borderBottomLeftRadius","backgroundColor","muiTabsFull","borderBottom","muiTab","MEDIUM","paddingBottom","secondary","textUppercase","Signup","useState","setValue","a11yProps","index","src","alt","Card","REGULAR","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","Tab"],"mappings":"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","file":"static/js/82.be58c141.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2m13 2h-2.5A3.5 3.5 0 0 0 12 8.5V11h-2v3h2v7h3v-7h3v-3h-3V9a1 1 0 0 1 1-1h2V5z\"\n}), 'Facebook');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"\n}), 'Twitter');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"\n}), 'GitHub');\n\nexports.default = _default;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Auth} from 'aws-amplify';\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {onSignUpCognitoUser} from '../../../redux/actions';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport {GridContainer} from '../../../@crema';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nconst MyTextField = (props) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(<IntlMessages id='validation.nameRequired' />),\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  password: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.passwordRequired' />),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.reTypePassword' />),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formRoot: {\r\n    textAlign: 'left',\r\n  },\r\n  myTextFieldRoot: {\r\n    width: '100%',\r\n  },\r\n  checkboxRoot: {\r\n    marginLeft: -12,\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  btnRoot: {\r\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    width: '10rem',\r\n    fontWeight: Fonts.LIGHT,\r\n    fontSize: 16,\r\n    textTransform: 'capitalize',\r\n  },\r\n  dividerRoot: {\r\n    marginBottom: 10,\r\n    marginLeft: -48,\r\n    marginRight: -48,\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 20,\r\n    },\r\n  },\r\n  iconButtonRoot: {\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    color: theme.palette.grey[500],\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n  textLg: {\r\n    fontSize: 18,\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  colorTextPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  underlineNone: {\r\n    textDecoration: 'none',\r\n  },\r\n  textGrey: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst SignupAwsCognito = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column'>\r\n      <Box\r\n        px={{xs: 6, sm: 10, xl: 15}}\r\n        pt={8}\r\n        flex={1}\r\n        display='flex'\r\n        flexDirection='column'>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setSubmitting, setErrors}) => {\r\n            if (data.password !== data.confirmPassword) {\r\n              setErrors({\r\n                confirmPassword: (\r\n                  <IntlMessages id='validation.passwordMisMatch' />\r\n                ),\r\n              });\r\n            } else {\r\n              setSubmitting(true);\r\n              dispatch(\r\n                onSignUpCognitoUser(\r\n                  {email: data.email, password: data.password, name: data.name},\r\n                  history,\r\n                ),\r\n              );\r\n              setSubmitting(false);\r\n            }\r\n          }}>\r\n          {({isSubmitting}) => (\r\n            <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  label={<IntlMessages id='common.name' />}\r\n                  name='name'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  label={<IntlMessages id='common.email' />}\r\n                  name='email'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <GridContainer>\r\n                <Grid item xs={12} md={6}>\r\n                  <Box mb={{xs: 0, xl: 4}}>\r\n                    <MyTextField\r\n                      label={<IntlMessages id='common.password' />}\r\n                      name='password'\r\n                      type='password'\r\n                      variant='outlined'\r\n                      className={classes.myTextFieldRoot}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                  <Box mb={{xs: 3, xl: 4}}>\r\n                    <MyTextField\r\n                      label={<IntlMessages id='common.retypePassword' />}\r\n                      name='confirmPassword'\r\n                      type='password'\r\n                      variant='outlined'\r\n                      className={classes.myTextFieldRoot}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n              </GridContainer>\r\n\r\n              <Box\r\n                mb={{xs: 3, xl: 4}}\r\n                display='flex'\r\n                alignItems='center'\r\n                fontSize={15}>\r\n                <Box display='flex' alignItems='center'>\r\n                  <Checkbox className={classes.checkboxRoot} />\r\n                  <Box\r\n                    className={classes.textGrey}\r\n                    component='span'\r\n                    mr={2}\r\n                    fontSize={15}>\r\n                    <IntlMessages id='common.iAgreeTo' />\r\n                  </Box>\r\n                </Box>\r\n                <Box\r\n                  component='span'\r\n                  color='primary.main'\r\n                  fontSize={15}\r\n                  className={classes.pointer}>\r\n                  <IntlMessages id='common.termConditions' />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box\r\n                mb={6}\r\n                display='flex'\r\n                flexDirection={{xs: 'column', sm: 'row'}}\r\n                alignItems={{sm: 'center'}}\r\n                justifyContent={{sm: 'space-between'}}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  disabled={isSubmitting}\r\n                  className={classes.btnRoot}\r\n                  type='submit'>\r\n                  <IntlMessages id='common.signup' />\r\n                </Button>\r\n\r\n                <Box\r\n                  color='text.secondary'\r\n                  ml={{sm: 4}}\r\n                  mt={{xs: 3, sm: 0}}\r\n                  fontSize={15}>\r\n                  <Box className={classes.textGrey} component='span' mr={1}>\r\n                    <IntlMessages id='common.alreadyHaveAccount' />\r\n                  </Box>\r\n                  <Box component='span'>\r\n                    <Link\r\n                      to='/signIn'\r\n                      className={clsx(\r\n                        classes.underlineNone,\r\n                        classes.colorTextPrimary,\r\n                      )}>\r\n                      <IntlMessages id='common.signIn' />\r\n                    </Link>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n\r\n      <Box\r\n        bgcolor={grey[100]}\r\n        px={{xs: 6, sm: 10}}\r\n        py={2}\r\n        display='flex'\r\n        flexDirection={{xs: 'column', sm: 'row'}}\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Box component='span' className={classes.textGrey} mr={4} fontSize={15}>\r\n          <IntlMessages id='auth.orSignupWith' />\r\n        </Box>\r\n        <Box display='flex' alignItems='center'>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => Auth.federatedSignIn({provider: 'Google'})}>\r\n            <i className='zmdi zmdi-google' />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => Auth.federatedSignIn({provider: 'Facebook'})}>\r\n            <FacebookIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignupAwsCognito;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {onJwtUserSignUp} from '../../../redux/actions';\r\nimport {Link} from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {GridContainer} from '../../../@crema';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formRoot: {\r\n    textAlign: 'left',\r\n  },\r\n  myTextFieldRoot: {\r\n    width: '100%',\r\n  },\r\n  checkboxRoot: {\r\n    marginLeft: -12,\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  btnRoot: {\r\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    width: '10rem',\r\n    fontWeight: Fonts.LIGHT,\r\n    fontSize: 16,\r\n    textTransform: 'capitalize',\r\n  },\r\n  btnRootFull: {\r\n    width: '100%',\r\n  },\r\n  dividerRoot: {\r\n    marginBottom: 10,\r\n    marginLeft: -48,\r\n    marginRight: -48,\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 20,\r\n    },\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  colorTextPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  underlineNone: {\r\n    textDecoration: 'none',\r\n  },\r\n  textGrey: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst MyTextField = (props) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(<IntlMessages id='validation.nameRequired' />),\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  password: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.passwordRequired' />),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.reTypePassword' />),\r\n});\r\n\r\nconst SignupJwtAuth = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column'>\r\n      <Box\r\n        px={{xs: 6, sm: 10, xl: 15}}\r\n        pt={8}\r\n        flex={1}\r\n        display='flex'\r\n        flexDirection='column'>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setErrors, setSubmitting}) => {\r\n            if (data.password !== data.confirmPassword) {\r\n              setErrors({\r\n                confirmPassword: (\r\n                  <IntlMessages id='validation.passwordMisMatch' />\r\n                ),\r\n              });\r\n            } else {\r\n              setSubmitting(true);\r\n              dispatch(\r\n                onJwtUserSignUp({\r\n                  email: data.email,\r\n                  password: data.password,\r\n                  name: data.name,\r\n                }),\r\n              );\r\n              setSubmitting(false);\r\n            }\r\n          }}>\r\n          {({isSubmitting}) => (\r\n            <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  label={<IntlMessages id='common.name' />}\r\n                  name='name'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  label={<IntlMessages id='common.email' />}\r\n                  name='email'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <GridContainer>\r\n                <Grid item xs={12} md={6}>\r\n                  <Box mb={{xs: 0, xl: 4}}>\r\n                    <MyTextField\r\n                      label={<IntlMessages id='common.password' />}\r\n                      name='password'\r\n                      type='password'\r\n                      variant='outlined'\r\n                      className={classes.myTextFieldRoot}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                  <Box mb={{xs: 3, xl: 4}}>\r\n                    <MyTextField\r\n                      label={<IntlMessages id='common.retypePassword' />}\r\n                      name='confirmPassword'\r\n                      type='password'\r\n                      variant='outlined'\r\n                      className={classes.myTextFieldRoot}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n              </GridContainer>\r\n\r\n              <Box\r\n                mb={{xs: 3, xl: 4}}\r\n                display='flex'\r\n                alignItems='center'\r\n                fontSize={15}>\r\n                <Box display='flex' alignItems='center'>\r\n                  <Checkbox className={classes.checkboxRoot} />\r\n                  <Box\r\n                    className={classes.textGrey}\r\n                    component='span'\r\n                    mr={2}\r\n                    fontSize={15}>\r\n                    <IntlMessages id='common.iAgreeTo' />\r\n                  </Box>\r\n                </Box>\r\n                <Box\r\n                  component='span'\r\n                  color='primary.main'\r\n                  fontSize={15}\r\n                  className={classes.pointer}>\r\n                  <IntlMessages id='common.termConditions' />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box\r\n                mb={6}\r\n                display='flex'\r\n                flexDirection={{xs: 'column', sm: 'row'}}\r\n                alignItems={{sm: 'center'}}\r\n                justifyContent={{sm: 'space-between'}}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  disabled={isSubmitting}\r\n                  className={classes.btnRoot}\r\n                  type='submit'>\r\n                  <IntlMessages id='common.signup' />\r\n                </Button>\r\n\r\n                <Box\r\n                  color='text.secondary'\r\n                  ml={{sm: 4}}\r\n                  mt={{xs: 3, sm: 0}}\r\n                  fontSize={15}>\r\n                  <Box className={classes.textGrey} component='span' mr={1}>\r\n                    <IntlMessages id='common.alreadyHaveAccount' />\r\n                  </Box>\r\n                  <Box component='span'>\r\n                    <Link\r\n                      to='/signIn'\r\n                      className={clsx(\r\n                        classes.underlineNone,\r\n                        classes.colorTextPrimary,\r\n                      )}>\r\n                      <IntlMessages id='common.signIn' />\r\n                    </Link>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n\r\n      <Box\r\n        bgcolor={grey[100]}\r\n        px={{xs: 6, sm: 10, xl: 15}}\r\n        py={{xs: 3, xl: 4}}\r\n        display='flex'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          type='submit'\r\n          className={clsx(classes.btnRoot, classes.btnRootFull)}>\r\n          <IntlMessages id='auth.signupWithJwt' />\r\n        </Button>\r\n      </Box>\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignupJwtAuth;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {\r\n  onSignUpFirebaseUser,\r\n  signInUserWithFacebook,\r\n  signInUserWithGithub,\r\n  signInUserWithGoogle,\r\n  signInUserWithTwitter,\r\n} from '../../../redux/actions';\r\nimport {Link} from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {GridContainer} from '../../../@crema';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formRoot: {\r\n    textAlign: 'left',\r\n  },\r\n  myTextFieldRoot: {\r\n    width: '100%',\r\n  },\r\n  checkboxRoot: {\r\n    marginLeft: -12,\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  btnRoot: {\r\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    width: '10rem',\r\n    fontWeight: Fonts.LIGHT,\r\n    fontSize: 16,\r\n    textTransform: 'capitalize',\r\n  },\r\n  dividerRoot: {\r\n    marginBottom: 10,\r\n    marginLeft: -48,\r\n    marginRight: -48,\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 20,\r\n    },\r\n  },\r\n  iconButtonRoot: {\r\n    marginLeft: 4,\r\n    marginRight: 4,\r\n    color: theme.palette.grey[500],\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n    },\r\n  },\r\n  textLg: {\r\n    fontSize: 18,\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  colorTextPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  underlineNone: {\r\n    textDecoration: 'none',\r\n  },\r\n  textGrey: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst MyTextField = (props) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(<IntlMessages id='validation.nameRequired' />),\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  password: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.passwordRequired' />),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.reTypePassword' />),\r\n});\r\n\r\nconst SignupFirebase = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column'>\r\n      <Box\r\n        px={{xs: 6, sm: 10, xl: 15}}\r\n        pt={8}\r\n        flex={1}\r\n        display='flex'\r\n        flexDirection='column'>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setErrors, setSubmitting}) => {\r\n            if (data.password !== data.confirmPassword) {\r\n              setErrors({\r\n                confirmPassword: (\r\n                  <IntlMessages id='validation.passwordMisMatch' />\r\n                ),\r\n              });\r\n            } else {\r\n              setSubmitting(true);\r\n              dispatch(\r\n                onSignUpFirebaseUser({\r\n                  email: data.email,\r\n                  password: data.password,\r\n                  name: data.name,\r\n                }),\r\n              );\r\n              setSubmitting(false);\r\n            }\r\n          }}>\r\n          {({isSubmitting}) => (\r\n            <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  label={<IntlMessages id='common.name' />}\r\n                  name='name'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  label={<IntlMessages id='common.email' />}\r\n                  name='email'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <GridContainer>\r\n                <Grid item xs={12} md={6}>\r\n                  <Box mb={{xs: 0, xl: 4}}>\r\n                    <MyTextField\r\n                      label={<IntlMessages id='common.password' />}\r\n                      name='password'\r\n                      type='password'\r\n                      variant='outlined'\r\n                      className={classes.myTextFieldRoot}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                  <Box mb={{xs: 3, xl: 4}}>\r\n                    <MyTextField\r\n                      label={<IntlMessages id='common.retypePassword' />}\r\n                      name='confirmPassword'\r\n                      type='password'\r\n                      variant='outlined'\r\n                      className={classes.myTextFieldRoot}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n              </GridContainer>\r\n\r\n              <Box\r\n                mb={{xs: 3, xl: 4}}\r\n                display='flex'\r\n                alignItems='center'\r\n                fontSize={15}>\r\n                <Box display='flex' alignItems='center'>\r\n                  <Checkbox className={classes.checkboxRoot} />\r\n                  <Box\r\n                    className={classes.textGrey}\r\n                    component='span'\r\n                    mr={2}\r\n                    fontSize={15}>\r\n                    <IntlMessages id='common.iAgreeTo' />\r\n                  </Box>\r\n                </Box>\r\n                <Box\r\n                  color='primary.main'\r\n                  component='span'\r\n                  fontSize={15}\r\n                  className={classes.pointer}>\r\n                  <IntlMessages id='common.termConditions' />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box\r\n                mb={6}\r\n                display='flex'\r\n                flexDirection={{xs: 'column', sm: 'row'}}\r\n                alignItems={{sm: 'center'}}\r\n                justifyContent={{sm: 'space-between'}}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  disabled={isSubmitting}\r\n                  className={classes.btnRoot}\r\n                  type='submit'>\r\n                  <IntlMessages id='common.signup' />\r\n                </Button>\r\n\r\n                <Box\r\n                  ml={{sm: 4}}\r\n                  mt={{xs: 3, sm: 0}}\r\n                  color='text.secondary'\r\n                  fontSize={15}>\r\n                  <Box className={classes.textGrey} component='span' mr={1}>\r\n                    <IntlMessages id='common.alreadyHaveAccount' />\r\n                  </Box>\r\n                  <Box component='span'>\r\n                    <Link\r\n                      to='/signin'\r\n                      className={clsx(\r\n                        classes.underlineNone,\r\n                        classes.colorTextPrimary,\r\n                      )}>\r\n                      <IntlMessages id='common.signIn' />\r\n                    </Link>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n\r\n      <Box\r\n        bgcolor={grey[100]}\r\n        px={{xs: 6, sm: 10, xl: 15}}\r\n        py={2}\r\n        display='flex'\r\n        flexDirection={{xs: 'column', sm: 'row'}}\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Box\r\n          component='span'\r\n          className={classes.textGrey}\r\n          mr={{sm: 4}}\r\n          fontSize={15}>\r\n          <IntlMessages id='auth.orSignupWith' />\r\n        </Box>\r\n        <Box display='inline-block'>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithGoogle())}>\r\n            <i className='zmdi zmdi-google' />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithFacebook())}>\r\n            <FacebookIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithGithub())}>\r\n            <GitHubIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButtonRoot}\r\n            onClick={() => dispatch(signInUserWithTwitter())}>\r\n            <TwitterIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignupFirebase;\r\n","import React, {useState} from 'react';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport SignupAwsCognito from './SignupAwsCognito';\r\nimport SignupJwtAuth from './SignupJwtAuth';\r\nimport SignupFirebase from './SignupFirebase';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  imgRoot: {\r\n    cursor: 'pointer',\r\n    display: 'inline-block',\r\n    width: 140,\r\n  },\r\n  cardRoot: {\r\n    maxWidth: '36rem',\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n    textAlign: 'center',\r\n    position: 'relative',\r\n    paddingTop: 20,\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingTop: 32,\r\n    },\r\n    '&:before': {\r\n      content: \"''\",\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      width: 130,\r\n      height: 9,\r\n      borderBottomRightRadius: 80,\r\n      borderBottomLeftRadius: 80,\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  muiTabsFull: {\r\n    marginLeft: 0,\r\n    marginRight: 0,\r\n    borderBottom: `1px solid ${theme.palette.grey[300]}`,\r\n    '& .MuiTabs-flexContainer': {\r\n      '& .MuiTab-root': {\r\n        flex: 1,\r\n      },\r\n    },\r\n  },\r\n  muiTab: {\r\n    fontWeight: Fonts.MEDIUM,\r\n    fontSize: 16,\r\n    paddingBottom: 16,\r\n    paddingTop: 16,\r\n    marginLeft: 8,\r\n    marginRight: 8,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  textUppercase: {\r\n    textTransform: 'uppercase',\r\n  },\r\n}));\r\nconst Signup = (props) => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  };\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column' justifyContent='center'>\r\n      <Box mb={{xs: 6, md: 8, xl: 18}} textAlign='center'>\r\n        <img\r\n          className={classes.imgRoot}\r\n          src={'/assets/images/logo-white-with-name.png'}\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Card className={classes.cardRoot}>\r\n          <Box px={{xs: 6, sm: 10, xl: 15}}>\r\n            <Box\r\n              component='h2'\r\n              mb={{xs: 3, xl: 6}}\r\n              color='text.primary'\r\n              fontWeight={Fonts.REGULAR}\r\n              fontSize={{xs: 24, xl: 26}}>\r\n              <IntlMessages id='common.signup' />\r\n            </Box>\r\n          </Box>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor='primary'\r\n            textColor='primary'\r\n            aria-label='simple tabs example'\r\n            className={classes.muiTabsFull}>\r\n            <Tab\r\n              className={classes.muiTab}\r\n              label='aws cognito'\r\n              {...a11yProps(1)}\r\n            />\r\n            <Tab\r\n              className={classes.muiTab}\r\n              label='jwt auth'\r\n              {...a11yProps(2)}\r\n            />\r\n            <Tab\r\n              className={classes.muiTab}\r\n              label='firebase'\r\n              {...a11yProps(0)}\r\n            />\r\n          </Tabs>\r\n\r\n          <>\r\n            {value === 0 && <SignupAwsCognito />}\r\n            {value === 1 && <SignupJwtAuth />}\r\n            {value === 2 && <SignupFirebase />}\r\n          </>\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"sourceRoot":""}