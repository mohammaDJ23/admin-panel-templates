{"version":3,"sources":["../node_modules/react-google-maps/lib/components/drawing/DrawingManager.js","modules/thirdParty/googleMap/DrawingView/Components/DrawingView.js","modules/thirdParty/googleMap/DrawingView/index.js","webpack:///./src/modules/thirdParty/googleMap/DrawingView/Components/DrawingView.js?7b30"],"names":["Object","defineProperty","exports","value","DrawingManager","undefined","_defineProperty3","_interopRequireDefault","require","_getPrototypeOf2","_classCallCheck3","_createClass3","_possibleConstructorReturn3","_inherits3","_invariant2","_react2","_propTypes2","_MapChildHelper","_constants","obj","__esModule","default","_React$PureComponent","props","context","this","_this","__proto__","call","google","maps","drawing","drawingManager","construct","propTypes","updaterMap","setMap","MAP","state","DRAWING_MANAGER","key","componentDidMount","eventMap","prevProps","componentDidUpdate","componentWillUnmount","getDrawingMode","PureComponent","defaultDrawingMode","any","defaultOptions","drawingMode","options","onCircleComplete","func","onMarkerComplete","onOverlayComplete","onPolygonComplete","onPolylineComplete","onRectangleComplete","contextTypes","object","instance","_drawingMode","setDrawingMode","_options","setOptions","window","DrawingExampleGoogleMap","withGoogleMap","defaultZoom","defaultCenter","LatLng","OverlayType","CIRCLE","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","POLYGON","POLYLINE","RECTANGLE","circleOptions","fillColor","fillOpacity","strokeWeight","clickable","editable","zIndex","rectangleOptions","DrawingView","containerElement","className","mapElement","Component","DrawingViewEx","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","source"],"mappings":"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","file":"static/js/110.f585d1b1.chunk.js","sourcesContent":["\"use strict\"\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true,\n})\nexports.DrawingManager = undefined\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\")\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2)\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\")\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf)\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\")\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2)\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\")\n\nvar _createClass3 = _interopRequireDefault(_createClass2)\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\")\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(\n  _possibleConstructorReturn2\n)\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\")\n\nvar _inherits3 = _interopRequireDefault(_inherits2)\n\nvar _invariant = require(\"invariant\")\n\nvar _invariant2 = _interopRequireDefault(_invariant)\n\nvar _react = require(\"react\")\n\nvar _react2 = _interopRequireDefault(_react)\n\nvar _propTypes = require(\"prop-types\")\n\nvar _propTypes2 = _interopRequireDefault(_propTypes)\n\nvar _MapChildHelper = require(\"../../utils/MapChildHelper\")\n\nvar _constants = require(\"../../constants\")\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj }\n}\n\n/**\n * A wrapper around `google.maps.drawing.DrawingManager`\n *\n * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#DrawingManager\n */\nvar DrawingManager = (exports.DrawingManager = (function(_React$PureComponent) {\n  ;(0, _inherits3.default)(DrawingManager, _React$PureComponent)\n\n  /*\n   * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#DrawingManager\n   */\n  function DrawingManager(props, context) {\n    ;(0, _classCallCheck3.default)(this, DrawingManager)\n\n    var _this = (0, _possibleConstructorReturn3.default)(\n      this,\n      (\n        DrawingManager.__proto__ ||\n        (0, _getPrototypeOf2.default)(DrawingManager)\n      ).call(this, props, context)\n    )\n\n    ;(0, _invariant2.default)(\n      google.maps.drawing,\n      'Did you include \"libraries=drawing\" in the URL?'\n    )\n    var drawingManager = new google.maps.drawing.DrawingManager()\n    ;(0, _MapChildHelper.construct)(\n      DrawingManager.propTypes,\n      updaterMap,\n      _this.props,\n      drawingManager\n    )\n    drawingManager.setMap(_this.context[_constants.MAP])\n    _this.state = (0, _defineProperty3.default)(\n      {},\n      _constants.DRAWING_MANAGER,\n      drawingManager\n    )\n    return _this\n  }\n\n  ;(0, _createClass3.default)(DrawingManager, [\n    {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        ;(0, _MapChildHelper.componentDidMount)(\n          this,\n          this.state[_constants.DRAWING_MANAGER],\n          eventMap\n        )\n      },\n    },\n    {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        ;(0, _MapChildHelper.componentDidUpdate)(\n          this,\n          this.state[_constants.DRAWING_MANAGER],\n          eventMap,\n          updaterMap,\n          prevProps\n        )\n      },\n    },\n    {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        ;(0, _MapChildHelper.componentWillUnmount)(this)\n        var drawingManager = this.state[_constants.DRAWING_MANAGER]\n        if (drawingManager) {\n          drawingManager.setMap(null)\n        }\n      },\n    },\n    {\n      key: \"render\",\n      value: function render() {\n        return false\n      },\n\n      /**\n       * Returns the `DrawingManager`'s drawing mode.\n       * @type OverlayTypeDrawingManager\n       * @public\n       */\n    },\n    {\n      key: \"getDrawingMode\",\n      value: function getDrawingMode() {\n        return this.state[_constants.DRAWING_MANAGER].getDrawingMode()\n      },\n    },\n  ])\n  return DrawingManager\n})(\n  _react2.default.PureComponent\n)) /*\n                                   * -----------------------------------------------------------------------------\n                                   * This file is auto-generated from the corresponding file at `src/macros/`.\n                                   * Please **DO NOT** edit this file directly when creating PRs.\n                                   * -----------------------------------------------------------------------------\n                                   */\n/* global google */\n\nDrawingManager.propTypes = {\n  /**\n   * @type OverlayType\n   */\n  defaultDrawingMode: _propTypes2.default.any,\n\n  /**\n   * @type DrawingManagerOptions\n   */\n  defaultOptions: _propTypes2.default.any,\n\n  /**\n   * @type OverlayType\n   */\n  drawingMode: _propTypes2.default.any,\n\n  /**\n   * @type DrawingManagerOptions\n   */\n  options: _propTypes2.default.any,\n\n  /**\n   * function\n   */\n  onCircleComplete: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onMarkerComplete: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onOverlayComplete: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onPolygonComplete: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onPolylineComplete: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onRectangleComplete: _propTypes2.default.func,\n}\nDrawingManager.contextTypes = (0, _defineProperty3.default)(\n  {},\n  _constants.MAP,\n  _propTypes2.default.object\n)\nexports.default = DrawingManager\n\nvar eventMap = {\n  onCircleComplete: \"circlecomplete\",\n  onMarkerComplete: \"markercomplete\",\n  onOverlayComplete: \"overlaycomplete\",\n  onPolygonComplete: \"polygoncomplete\",\n  onPolylineComplete: \"polylinecomplete\",\n  onRectangleComplete: \"rectanglecomplete\",\n}\n\nvar updaterMap = {\n  drawingMode: function drawingMode(instance, _drawingMode) {\n    instance.setDrawingMode(_drawingMode)\n  },\n  options: function options(instance, _options) {\n    instance.setOptions(_options)\n  },\n}\n","import React, {Component} from 'react';\r\nimport {GoogleMap, withGoogleMap} from 'react-google-maps';\r\nimport DrawingManager from 'react-google-maps/lib/components/drawing/DrawingManager';\r\n\r\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\n\r\n/*\r\n * https://developers.google.com/maps/documentation/javascript/examples/drawing-tools\r\n *\r\n * Note: requires the Google Maps drawing API library in your script src\r\n *\r\n * Credits: thanks @idolize for the contribution!\r\n */\r\n\r\nconst google = window.google;\r\n\r\nconst DrawingExampleGoogleMap = withGoogleMap((props) => (\r\n  <GoogleMap\r\n    defaultZoom={15}\r\n    defaultCenter={new google.maps.LatLng(47.646935, -122.303763)}>\r\n    <DrawingManager\r\n      defaultDrawingMode={google.maps.drawing.OverlayType.CIRCLE}\r\n      defaultOptions={{\r\n        drawingControl: true,\r\n        drawingControlOptions: {\r\n          position: google.maps.ControlPosition.TOP_CENTER,\r\n          drawingModes: [\r\n            google.maps.drawing.OverlayType.CIRCLE,\r\n            google.maps.drawing.OverlayType.POLYGON,\r\n            google.maps.drawing.OverlayType.POLYLINE,\r\n            google.maps.drawing.OverlayType.RECTANGLE,\r\n          ],\r\n        },\r\n        circleOptions: {\r\n          fillColor: '#ff0000',\r\n          fillOpacity: 0.2,\r\n          strokeWeight: 3,\r\n          clickable: false,\r\n          editable: true,\r\n          zIndex: 1,\r\n        },\r\n        rectangleOptions: {\r\n          fillColor: '#ff0000',\r\n          fillOpacity: 0.2,\r\n          strokeWeight: 3,\r\n          clickable: false,\r\n          editable: true,\r\n          zIndex: 1,\r\n        },\r\n      }}\r\n    />\r\n  </GoogleMap>\r\n));\r\nexport default class DrawingView extends Component {\r\n  render() {\r\n    return (\r\n      <DrawingExampleGoogleMap\r\n        containerElement={\r\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\r\n        }\r\n        mapElement={<div className='cr-embed-responsive-item' />}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport DrawingView from './Components/DrawingView';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport DrawingViewSource from '!raw-loader!./Components/DrawingView';\r\n\r\nconst DrawingViewEx = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Drawing View Google Map'\r\n        description='A wrapper around google.maps.drawing.DrawingManager'\r\n        refUrl='https://developers.google.com/maps/documentation/javascript/reference/#DrawingManager/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Drawing View Map'\r\n            component={DrawingView}\r\n            source={DrawingViewSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DrawingViewEx;\r\n","export default \"import React, {Component} from 'react';\\r\\nimport {GoogleMap, withGoogleMap} from 'react-google-maps';\\r\\nimport DrawingManager from 'react-google-maps/lib/components/drawing/DrawingManager';\\r\\n\\r\\n/*\\r\\n * Add <script src=\\\"https://maps.googleapis.com/maps/api/js\\\"></script> to your HTML to provide google.maps reference\\r\\n */\\r\\n\\r\\n/*\\r\\n * https://developers.google.com/maps/documentation/javascript/examples/drawing-tools\\r\\n *\\r\\n * Note: requires the Google Maps drawing API library in your script src\\r\\n *\\r\\n * Credits: thanks @idolize for the contribution!\\r\\n */\\r\\n\\r\\nconst google = window.google;\\r\\n\\r\\nconst DrawingExampleGoogleMap = withGoogleMap((props) => (\\r\\n  <GoogleMap\\r\\n    defaultZoom={15}\\r\\n    defaultCenter={new google.maps.LatLng(47.646935, -122.303763)}>\\r\\n    <DrawingManager\\r\\n      defaultDrawingMode={google.maps.drawing.OverlayType.CIRCLE}\\r\\n      defaultOptions={{\\r\\n        drawingControl: true,\\r\\n        drawingControlOptions: {\\r\\n          position: google.maps.ControlPosition.TOP_CENTER,\\r\\n          drawingModes: [\\r\\n            google.maps.drawing.OverlayType.CIRCLE,\\r\\n            google.maps.drawing.OverlayType.POLYGON,\\r\\n            google.maps.drawing.OverlayType.POLYLINE,\\r\\n            google.maps.drawing.OverlayType.RECTANGLE,\\r\\n          ],\\r\\n        },\\r\\n        circleOptions: {\\r\\n          fillColor: '#ff0000',\\r\\n          fillOpacity: 0.2,\\r\\n          strokeWeight: 3,\\r\\n          clickable: false,\\r\\n          editable: true,\\r\\n          zIndex: 1,\\r\\n        },\\r\\n        rectangleOptions: {\\r\\n          fillColor: '#ff0000',\\r\\n          fillOpacity: 0.2,\\r\\n          strokeWeight: 3,\\r\\n          clickable: false,\\r\\n          editable: true,\\r\\n          zIndex: 1,\\r\\n        },\\r\\n      }}\\r\\n    />\\r\\n  </GoogleMap>\\r\\n));\\r\\nexport default class DrawingView extends Component {\\r\\n  render() {\\r\\n    return (\\r\\n      <DrawingExampleGoogleMap\\r\\n        containerElement={\\r\\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\\r\\n        }\\r\\n        mapElement={<div className='cr-embed-responsive-item' />}\\r\\n      />\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\";"],"sourceRoot":""}