{"version":3,"sources":["@crema/services/db/extraPages/portFolio/sales.js","@crema/services/db/extraPages/portFolio/installation.js","modules/extraPages/KnowledgeBase/KBItem.js","modules/extraPages/KnowledgeBase/Sales.js","modules/extraPages/KnowledgeBase/Installation.js","modules/extraPages/KnowledgeBase/index.js"],"names":["salesData","id","ques","ans","tags","installationData","useStyles","makeStyles","theme","scrollBar","padding","marginBottom","maxHeight","chip","margin","fontWeight","Fonts","MEDIUM","KbItem","data","classes","Grid","item","xs","sm","md","Box","p","clone","Card","mb","component","fontSize","BOLD","Scrollbar","className","mx","map","tag","index","Chip","label","variant","key","Sales","saleQueries","lg","color","IntlMessages","GridContainer","sale","KBItem","Installation","installationQueries","divider","marginTop","breakpoints","up","KnowledgeBase","messages","useIntl","useState","filterText","setFilterText","filter","includes","AppAnimate","animation","delay","flex","textAlign","maxWidth","TextField","placeholder","style","width","InputProps","startAdornment","InputAdornment","position","value","onChange","event","target","Divider"],"mappings":"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","file":"static/js/119.03aff6c0.chunk.js","sourcesContent":["export const salesData = [\r\n  {\r\n    id: 2001,\r\n    ques: 'How much one could earn using your products?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2002,\r\n    ques: 'What are some common taxes applied to these products?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2003,\r\n    ques: 'What is the commission structues you are offering to affiliates?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2004,\r\n    ques: 'How much incentive do you pay if someone reaches the sale goal?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2005,\r\n    ques: 'How much one could earn using your products?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n];\r\n","export const installationData = [\r\n  {\r\n    id: 2001,\r\n    ques: 'Approximately how many people work in your company?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2002,\r\n    ques: 'What are some common system requirement to install your software?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2003,\r\n    ques: 'What are some pre-requisites before installing your software?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2004,\r\n    ques:\r\n      'Is there any document available for instructions regarding to installation of software?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n  {\r\n    id: 2005,\r\n    ques: 'What are some common system requirement to install your software?',\r\n    ans:\r\n      \"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\",\r\n    tags: ['SALES', 'EARNING', 'PRE-SALES'],\r\n  },\r\n];\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Box from '@material-ui/core/Box';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport Scrollbar from '../../../@crema/core/Scrollbar';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  scrollBar: {\r\n    padding: 0,\r\n    marginBottom: 20,\r\n    maxHeight: 130,\r\n  },\r\n  chip: {\r\n    margin: 8,\r\n    fontWeight: Fonts.MEDIUM,\r\n  },\r\n}));\r\n\r\nconst KbItem = ({data}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4}>\r\n      <Box p={5} clone>\r\n        <Card>\r\n          <Box mb={2} component='h5' fontSize={16} fontWeight={Fonts.BOLD}>\r\n            {data.ques}\r\n          </Box>\r\n          <Scrollbar className={classes.scrollBar}>\r\n            <Box component='p'>{data.ans}</Box>\r\n          </Scrollbar>\r\n          <Box mx={-2}>\r\n            {data.tags.map((tag, index) => {\r\n              return (\r\n                <Chip\r\n                  label={tag}\r\n                  variant='outlined'\r\n                  className={classes.chip}\r\n                  key={index}\r\n                />\r\n              );\r\n            })}\r\n          </Box>\r\n        </Card>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default KbItem;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport KBItem from './KBItem';\r\nimport GridContainer from '../../../@crema/core/GridContainer';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Sales = ({saleQueries}) => {\r\n  return (\r\n    <Box mb={{xs: 6, lg: 10}}>\r\n      <Box\r\n        component='h3'\r\n        color='text.primary'\r\n        mb={{xs: 4, lg: 6}}\r\n        fontSize={16}\r\n        fontWeight={Fonts.BOLD}>\r\n        <IntlMessages id='knowledge.sales' />\r\n      </Box>\r\n      <GridContainer>\r\n        {saleQueries.map((sale, index) => (\r\n          <KBItem data={sale} key={index} />\r\n        ))}\r\n      </GridContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n\r\nSales.propTypes = {\r\n  saleQueries: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport KBItem from './KBItem';\r\nimport GridContainer from '../../../@crema/core/GridContainer';\r\nimport PropTypes from 'prop-types';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst Installation = ({installationQueries}) => {\r\n  return (\r\n    <Box mb={2}>\r\n      <Box\r\n        component='h3'\r\n        color='text.primary'\r\n        mb={{xs: 4, lg: 6}}\r\n        fontSize={16}\r\n        fontWeight={Fonts.BOLD}>\r\n        <IntlMessages id='knowledge.installation' />\r\n      </Box>\r\n      <GridContainer>\r\n        {installationQueries.map((data) => (\r\n          <KBItem data={data} key={data.id} />\r\n        ))}\r\n      </GridContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Installation;\r\n\r\nInstallation.propTypes = {\r\n  installationQueries: PropTypes.array.isRequired,\r\n};\r\n","import React, {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {salesData} from '../../../@crema/services/db/extraPages/portFolio/sales';\r\nimport {installationData} from '../../../@crema/services/db/extraPages/portFolio/installation';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport Box from '@material-ui/core/Box';\r\nimport Sales from './Sales';\r\nimport Installation from './Installation';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    divider: {\r\n      marginTop: 16,\r\n      marginBottom: 16,\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginTop: 24,\r\n        marginBottom: 24,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        marginTop: 32,\r\n        marginBottom: 32,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        marginTop: 40,\r\n        marginBottom: 40,\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst KnowledgeBase = () => {\r\n  const {messages} = useIntl();\r\n\r\n  const [filterText, setFilterText] = useState('');\r\n\r\n  const saleQueries =\r\n    filterText !== ''\r\n      ? salesData.filter((data) => data.ques.includes(filterText))\r\n      : salesData;\r\n\r\n  const installationQueries =\r\n    filterText !== ''\r\n      ? installationData.filter((data) => data.ques.includes(filterText))\r\n      : installationData;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n      <Box flex={1}>\r\n        <Box mx='auto' textAlign='center' maxWidth={768}>\r\n          <Box\r\n            component='h2'\r\n            color='text.primary'\r\n            mb={6}\r\n            fontSize={20}\r\n            fontWeight={Fonts.BOLD}>\r\n            <IntlMessages id='knowledge.howHelp' />\r\n          </Box>\r\n\r\n          <TextField\r\n            id='outlined-with-placeholder'\r\n            placeholder={messages['knowledge.Skeleton']}\r\n            style={{width: '100%'}}\r\n            variant='outlined'\r\n            InputProps={{\r\n              startAdornment: (\r\n                <Box fontWeight={Fonts.MEDIUM} clone>\r\n                  <InputAdornment position='start'>\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                </Box>\r\n              ),\r\n            }}\r\n            value={filterText}\r\n            onChange={(event) => setFilterText(event.target.value)}\r\n          />\r\n        </Box>\r\n\r\n        <Divider className={classes.divider} />\r\n\r\n        <Sales saleQueries={saleQueries} />\r\n\r\n        <Installation installationQueries={installationQueries} />\r\n      </Box>\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default KnowledgeBase;\r\n"],"sourceRoot":""}