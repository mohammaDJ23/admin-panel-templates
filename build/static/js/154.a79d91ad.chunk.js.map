{"version":3,"sources":["modules/thirdParty/recharts/Area/Components/data.js","modules/thirdParty/recharts/Area/Components/SimpleAreaChart.js","modules/thirdParty/recharts/Area/Components/StackedAreaChart.js","modules/thirdParty/recharts/Area/Components/PercentAreaChart.js","modules/thirdParty/recharts/Area/Components/AreaChartConnectNulls.js","modules/thirdParty/recharts/Area/Components/SynchronizedAreaChart.js","modules/thirdParty/recharts/Area/index.js","webpack:///./src/modules/thirdParty/recharts/Area/Components/SimpleAreaChart.js?bd1c","webpack:///./src/modules/thirdParty/recharts/Area/Components/StackedAreaChart.js?83d8","webpack:///./src/modules/thirdParty/recharts/Area/Components/AreaChartConnectNulls.js?85d6","webpack:///./src/modules/thirdParty/recharts/Area/Components/SynchronizedAreaChart.js?6854","webpack:///./src/modules/thirdParty/recharts/Area/Components/PercentAreaChart.js?4ebc"],"names":["data","name","uv","pv","amt","SimpleAreaChart","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","stroke","fill","StackedAreaChart","stackId","month","a","b","c","toPercent","decimal","fixed","toFixed","renderTooltipContent","o","payload","label","total","reduce","result","entry","value","className","map","index","key","style","color","getPercent","PercentAreaChart","stackOffset","tickFormatter","content","AreaChartConnectNulls","Box","mb","connectNulls","SynchronizedAreaChart","component","syncId","AreaChart","match","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","source"],"mappings":"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","file":"static/js/154.a79d91ad.chunk.js","sourcesContent":["const data = [\r\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n  {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\r\n  {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n  {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\nexport default data;\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst SimpleAreaChart = () => {\r\n  return (\r\n    <ResponsiveContainer width='100%' height={200}>\r\n      <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n        <XAxis dataKey='name' />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray='3 3' />\r\n        <Tooltip />\r\n        <Area type='monotone' dataKey='uv' stroke='#4299E1' fill='#4299E1' />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default SimpleAreaChart;\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst StackedAreaChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='uv'\r\n        stackId='1'\r\n        stroke='#4299E1'\r\n        fill='#4299E1'\r\n      />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='pv'\r\n        stackId='1'\r\n        stroke='#59AA2B'\r\n        fill='#59AA2B'\r\n      />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='amt'\r\n        stackId='1'\r\n        stroke='#F04F47'\r\n        fill='#F04F47'\r\n      />\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default StackedAreaChart;\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {month: '2015.01', a: 4000, b: 2400, c: 2400},\r\n  {month: '2015.02', a: 3000, b: 1398, c: 2210},\r\n  {month: '2015.03', a: 2000, b: 9800, c: 2290},\r\n  {month: '2015.04', a: 2780, b: 3908, c: 2000},\r\n  {month: '2015.05', a: 1890, b: 4800, c: 2181},\r\n  {month: '2015.06', a: 2390, b: 3800, c: 2500},\r\n  {month: '2015.07', a: 3490, b: 4300, c: 2100},\r\n];\r\n\r\nconst getPercent = (value, total) => {\r\n  const ratio = total > 0 ? value / total : 0;\r\n\r\n  return toPercent(ratio, 2);\r\n};\r\n\r\nconst toPercent = (decimal, fixed = 0) => {\r\n  return `${(decimal * 100).toFixed(fixed)}%`;\r\n};\r\nconst renderTooltipContent = (o) => {\r\n  const {payload, label} = o;\r\n  const total = payload.reduce((result, entry) => result + entry.value, 0);\r\n\r\n  return (\r\n    <div className='customized-tooltip-content'>\r\n      <p className='total'>{`${label} (Total: ${total})`}</p>\r\n      <ul className='list'>\r\n        {payload.map((entry, index) => (\r\n          <li key={`item-${index}`} style={{color: entry.color}}>\r\n            {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nconst PercentAreaChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <AreaChart\r\n      data={data}\r\n      stackOffset='expand'\r\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='month' />\r\n      <YAxis tickFormatter={toPercent} />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip content={renderTooltipContent} />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='a'\r\n        stackId='1'\r\n        stroke='#4299E1'\r\n        fill='#4299E1'\r\n      />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='b'\r\n        stackId='1'\r\n        stroke='#59AA2B'\r\n        fill='#59AA2B'\r\n      />\r\n      <Area\r\n        type='monotone'\r\n        dataKey='c'\r\n        stackId='1'\r\n        stroke='#F04F47'\r\n        fill='#F04F47'\r\n      />\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default PercentAreaChart;\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst data = [\r\n  {name: 'Page A', uv: 4000},\r\n  {name: 'Page B', uv: 3000},\r\n  {name: 'Page C', uv: 2000},\r\n  {name: 'Page D'},\r\n  {name: 'Page E', uv: 1890},\r\n  {name: 'Page F', uv: 2390},\r\n  {name: 'Page G', uv: 3490},\r\n];\r\nconst AreaChartConnectNulls = () => (\r\n  <ResponsiveContainer width='100%'>\r\n    <div>\r\n      <Box mb={5}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <AreaChart\r\n            data={data}\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Area\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n      <Box mb={4}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <AreaChart\r\n            data={data}\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Area\r\n              connectNulls={true}\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n    </div>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default AreaChartConnectNulls;\r\n","import React from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst SynchronizedAreaChart = () => (\r\n  <ResponsiveContainer width='100%'>\r\n    <div>\r\n      <Box component='p' mb={4}>\r\n        A demo of synchronized AreaCharts\r\n      </Box>\r\n      <Box mb={4}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <AreaChart\r\n            data={data}\r\n            syncId='anyId'\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Area\r\n              type='monotone'\r\n              dataKey='uv'\r\n              stroke='#4299E1'\r\n              fill='#4299E1'\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n      <Box component='p' mb={4}>\r\n        Maybe some other content\r\n      </Box>\r\n      <Box mb={4}>\r\n        <ResponsiveContainer width='100%' height={200}>\r\n          <AreaChart\r\n            data={data}\r\n            syncId='anyId'\r\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n            <XAxis dataKey='name' />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray='3 3' />\r\n            <Tooltip />\r\n            <Area\r\n              type='monotone'\r\n              dataKey='pv'\r\n              stroke='#F04F47'\r\n              fill='#F04F47'\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n    </div>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default SynchronizedAreaChart;\r\n","import React from 'react';\r\nimport SimpleAreaChart from './Components/SimpleAreaChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SimpleAreaChartSource from '!raw-loader!./Components/SimpleAreaChart';\r\nimport StackedAreaChart from './Components/StackedAreaChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport StackedAreaChartSource from '!raw-loader!./Components/StackedAreaChart';\r\nimport PercentAreaChart from './Components/PercentAreaChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport PercentAreaChartSource from '!raw-loader!./Components/PercentAreaChart';\r\nimport AreaChartConnectNulls from './Components/AreaChartConnectNulls';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport AreaChartConnectNullsSource from '!raw-loader!./Components/AreaChartConnectNulls';\r\nimport SynchronizedAreaChart from './Components/SynchronizedAreaChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SynchronizedAreaChartSource from '!raw-loader!./Components/SynchronizedAreaChart';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nconst AreaChart = ({match}) => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Area Chart'\r\n        description='All svg elements can be added into the AreaChart component, such as defs, linearGradient, etc.'\r\n        refUrl='http://recharts.org/en-US/api/AreaChart/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Simple modal'\r\n            component={SimpleAreaChart}\r\n            source={SimpleAreaChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Stacked Area Chart'\r\n            component={StackedAreaChart}\r\n            source={StackedAreaChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='AreaChart Connect Nulls'\r\n            component={AreaChartConnectNulls}\r\n            source={AreaChartConnectNullsSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Synchronized Area Chart'\r\n            component={SynchronizedAreaChart}\r\n            source={SynchronizedAreaChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Percent Area Chart'\r\n            component={PercentAreaChart}\r\n            source={PercentAreaChartSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\nexport default AreaChart;\r\n","export default \"import React from 'react';\\r\\nimport {\\r\\n  Area,\\r\\n  AreaChart,\\r\\n  CartesianGrid,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst SimpleAreaChart = () => {\\r\\n  return (\\r\\n    <ResponsiveContainer width='100%' height={200}>\\r\\n      <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n        <XAxis dataKey='name' />\\r\\n        <YAxis />\\r\\n        <CartesianGrid strokeDasharray='3 3' />\\r\\n        <Tooltip />\\r\\n        <Area type='monotone' dataKey='uv' stroke='#4299E1' fill='#4299E1' />\\r\\n      </AreaChart>\\r\\n    </ResponsiveContainer>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default SimpleAreaChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Area,\\r\\n  AreaChart,\\r\\n  CartesianGrid,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst StackedAreaChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <AreaChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Area\\r\\n        type='monotone'\\r\\n        dataKey='uv'\\r\\n        stackId='1'\\r\\n        stroke='#4299E1'\\r\\n        fill='#4299E1'\\r\\n      />\\r\\n      <Area\\r\\n        type='monotone'\\r\\n        dataKey='pv'\\r\\n        stackId='1'\\r\\n        stroke='#59AA2B'\\r\\n        fill='#59AA2B'\\r\\n      />\\r\\n      <Area\\r\\n        type='monotone'\\r\\n        dataKey='amt'\\r\\n        stackId='1'\\r\\n        stroke='#F04F47'\\r\\n        fill='#F04F47'\\r\\n      />\\r\\n    </AreaChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default StackedAreaChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Area,\\r\\n  AreaChart,\\r\\n  CartesianGrid,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport Box from '@material-ui/core/Box';\\r\\n\\r\\nconst data = [\\r\\n  {name: 'Page A', uv: 4000},\\r\\n  {name: 'Page B', uv: 3000},\\r\\n  {name: 'Page C', uv: 2000},\\r\\n  {name: 'Page D'},\\r\\n  {name: 'Page E', uv: 1890},\\r\\n  {name: 'Page F', uv: 2390},\\r\\n  {name: 'Page G', uv: 3490},\\r\\n];\\r\\nconst AreaChartConnectNulls = () => (\\r\\n  <ResponsiveContainer width='100%'>\\r\\n    <div>\\r\\n      <Box mb={5}>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <AreaChart\\r\\n            data={data}\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Area\\r\\n              type='monotone'\\r\\n              dataKey='uv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n          </AreaChart>\\r\\n        </ResponsiveContainer>\\r\\n      </Box>\\r\\n      <Box mb={4}>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <AreaChart\\r\\n            data={data}\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Area\\r\\n              connectNulls={true}\\r\\n              type='monotone'\\r\\n              dataKey='uv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n          </AreaChart>\\r\\n        </ResponsiveContainer>\\r\\n      </Box>\\r\\n    </div>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default AreaChartConnectNulls;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Area,\\r\\n  AreaChart,\\r\\n  CartesianGrid,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\nimport Box from '@material-ui/core/Box';\\r\\n\\r\\nconst SynchronizedAreaChart = () => (\\r\\n  <ResponsiveContainer width='100%'>\\r\\n    <div>\\r\\n      <Box component='p' mb={4}>\\r\\n        A demo of synchronized AreaCharts\\r\\n      </Box>\\r\\n      <Box mb={4}>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <AreaChart\\r\\n            data={data}\\r\\n            syncId='anyId'\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Area\\r\\n              type='monotone'\\r\\n              dataKey='uv'\\r\\n              stroke='#4299E1'\\r\\n              fill='#4299E1'\\r\\n            />\\r\\n          </AreaChart>\\r\\n        </ResponsiveContainer>\\r\\n      </Box>\\r\\n      <Box component='p' mb={4}>\\r\\n        Maybe some other content\\r\\n      </Box>\\r\\n      <Box mb={4}>\\r\\n        <ResponsiveContainer width='100%' height={200}>\\r\\n          <AreaChart\\r\\n            data={data}\\r\\n            syncId='anyId'\\r\\n            margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n            <XAxis dataKey='name' />\\r\\n            <YAxis />\\r\\n            <CartesianGrid strokeDasharray='3 3' />\\r\\n            <Tooltip />\\r\\n            <Area\\r\\n              type='monotone'\\r\\n              dataKey='pv'\\r\\n              stroke='#F04F47'\\r\\n              fill='#F04F47'\\r\\n            />\\r\\n          </AreaChart>\\r\\n        </ResponsiveContainer>\\r\\n      </Box>\\r\\n    </div>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default SynchronizedAreaChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Area,\\r\\n  AreaChart,\\r\\n  CartesianGrid,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\n\\r\\nconst data = [\\r\\n  {month: '2015.01', a: 4000, b: 2400, c: 2400},\\r\\n  {month: '2015.02', a: 3000, b: 1398, c: 2210},\\r\\n  {month: '2015.03', a: 2000, b: 9800, c: 2290},\\r\\n  {month: '2015.04', a: 2780, b: 3908, c: 2000},\\r\\n  {month: '2015.05', a: 1890, b: 4800, c: 2181},\\r\\n  {month: '2015.06', a: 2390, b: 3800, c: 2500},\\r\\n  {month: '2015.07', a: 3490, b: 4300, c: 2100},\\r\\n];\\r\\n\\r\\nconst getPercent = (value, total) => {\\r\\n  const ratio = total > 0 ? value / total : 0;\\r\\n\\r\\n  return toPercent(ratio, 2);\\r\\n};\\r\\n\\r\\nconst toPercent = (decimal, fixed = 0) => {\\r\\n  return `${(decimal * 100).toFixed(fixed)}%`;\\r\\n};\\r\\nconst renderTooltipContent = (o) => {\\r\\n  const {payload, label} = o;\\r\\n  const total = payload.reduce((result, entry) => result + entry.value, 0);\\r\\n\\r\\n  return (\\r\\n    <div className='customized-tooltip-content'>\\r\\n      <p className='total'>{`${label} (Total: ${total})`}</p>\\r\\n      <ul className='list'>\\r\\n        {payload.map((entry, index) => (\\r\\n          <li key={`item-${index}`} style={{color: entry.color}}>\\r\\n            {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\\r\\n          </li>\\r\\n        ))}\\r\\n      </ul>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\nconst PercentAreaChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <AreaChart\\r\\n      data={data}\\r\\n      stackOffset='expand'\\r\\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='month' />\\r\\n      <YAxis tickFormatter={toPercent} />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip content={renderTooltipContent} />\\r\\n      <Area\\r\\n        type='monotone'\\r\\n        dataKey='a'\\r\\n        stackId='1'\\r\\n        stroke='#4299E1'\\r\\n        fill='#4299E1'\\r\\n      />\\r\\n      <Area\\r\\n        type='monotone'\\r\\n        dataKey='b'\\r\\n        stackId='1'\\r\\n        stroke='#59AA2B'\\r\\n        fill='#59AA2B'\\r\\n      />\\r\\n      <Area\\r\\n        type='monotone'\\r\\n        dataKey='c'\\r\\n        stackId='1'\\r\\n        stroke='#F04F47'\\r\\n        fill='#F04F47'\\r\\n      />\\r\\n    </AreaChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default PercentAreaChart;\\r\\n\";"],"sourceRoot":""}