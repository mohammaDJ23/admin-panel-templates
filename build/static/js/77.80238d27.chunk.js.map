{"version":3,"sources":["../node_modules/@material-ui/icons/Favorite.js","../node_modules/@material-ui/icons/FavoriteBorder.js","../node_modules/@material-ui/icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/icons/CheckBox.js","modules/muiComponents/inputs/Checkboxes/DefaultCheckboxes.js","webpack:///./src/modules/muiComponents/inputs/Checkboxes/DefaultCheckboxes.js?6d16","modules/muiComponents/inputs/Checkboxes/FormControlLabelCB.js","webpack:///./src/modules/muiComponents/inputs/Checkboxes/FormControlLabelCB.js?90df","modules/muiComponents/inputs/Checkboxes/CheckboxesFormGroup.js","modules/muiComponents/inputs/Checkboxes/LabelPlacement.js","modules/muiComponents/inputs/Checkboxes/index.js","webpack:///./src/modules/muiComponents/inputs/Checkboxes/CheckboxesFormGroup.js?a9ea","webpack:///./src/modules/muiComponents/inputs/Checkboxes/LabelPlacement.js?9810"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Checkboxes","React","useState","checkedA","checkedB","checkedF","state","setState","handleChange","name","event","target","checked","Checkbox","onChange","inputProps","color","disabled","indeterminate","defaultChecked","GreenCheckbox","withStyles","root","green","props","CheckboxLabels","checkedG","FormGroup","row","FormControlLabel","control","label","icon","checkedIcon","fontSize","useStyles","makeStyles","theme","display","flexDirection","breakpoints","up","formControl","margin","spacing","CheckboxesGroup","classes","gilad","jason","antoine","error","filter","v","length","Box","className","FormControl","component","FormLabel","FormHelperText","required","FormControlLabelPosition","setValue","aria-label","labelPlacement","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","DefaultCheckboxes","source","FormControlLabelCB","lg","CheckboxesFormGroup","LabelPlacement"],"mappings":"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","file":"static/js/77.80238d27.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\n\nexports.default = _default;","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function Checkboxes() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({...state, [name]: event.target.checked});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Checkbox\r\n        checked={state.checkedA}\r\n        onChange={handleChange('checkedA')}\r\n        value='checkedA'\r\n        inputProps={{\r\n          'aria-label': 'primary checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        checked={state.checkedB}\r\n        onChange={handleChange('checkedB')}\r\n        value='checkedB'\r\n        color='primary'\r\n        inputProps={{\r\n          'aria-label': 'secondary checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        value='checkedC'\r\n        inputProps={{\r\n          'aria-label': 'uncontrolled-checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        disabled\r\n        value='checkedD'\r\n        inputProps={{\r\n          'aria-label': 'disabled checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        disabled\r\n        checked\r\n        value='checkedE'\r\n        inputProps={{\r\n          'aria-label': 'disabled checked checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        checked={state.checkedF}\r\n        onChange={handleChange('checkedF')}\r\n        value='checkedF'\r\n        indeterminate\r\n        inputProps={{\r\n          'aria-label': 'indeterminate checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        defaultChecked\r\n        color='default'\r\n        value='checkedG'\r\n        inputProps={{\r\n          'aria-label': 'checkbox with default color',\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport Checkbox from '@material-ui/core/Checkbox';\\r\\n\\r\\nexport default function Checkboxes() {\\r\\n  const [state, setState] = React.useState({\\r\\n    checkedA: true,\\r\\n    checkedB: true,\\r\\n    checkedF: true,\\r\\n  });\\r\\n\\r\\n  const handleChange = (name) => (event) => {\\r\\n    setState({...state, [name]: event.target.checked});\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Checkbox\\r\\n        checked={state.checkedA}\\r\\n        onChange={handleChange('checkedA')}\\r\\n        value='checkedA'\\r\\n        inputProps={{\\r\\n          'aria-label': 'primary checkbox',\\r\\n        }}\\r\\n      />\\r\\n      <Checkbox\\r\\n        checked={state.checkedB}\\r\\n        onChange={handleChange('checkedB')}\\r\\n        value='checkedB'\\r\\n        color='primary'\\r\\n        inputProps={{\\r\\n          'aria-label': 'secondary checkbox',\\r\\n        }}\\r\\n      />\\r\\n      <Checkbox\\r\\n        value='checkedC'\\r\\n        inputProps={{\\r\\n          'aria-label': 'uncontrolled-checkbox',\\r\\n        }}\\r\\n      />\\r\\n      <Checkbox\\r\\n        disabled\\r\\n        value='checkedD'\\r\\n        inputProps={{\\r\\n          'aria-label': 'disabled checkbox',\\r\\n        }}\\r\\n      />\\r\\n      <Checkbox\\r\\n        disabled\\r\\n        checked\\r\\n        value='checkedE'\\r\\n        inputProps={{\\r\\n          'aria-label': 'disabled checked checkbox',\\r\\n        }}\\r\\n      />\\r\\n      <Checkbox\\r\\n        checked={state.checkedF}\\r\\n        onChange={handleChange('checkedF')}\\r\\n        value='checkedF'\\r\\n        indeterminate\\r\\n        inputProps={{\\r\\n          'aria-label': 'indeterminate checkbox',\\r\\n        }}\\r\\n      />\\r\\n      <Checkbox\\r\\n        defaultChecked\\r\\n        color='default'\\r\\n        value='checkedG'\\r\\n        inputProps={{\\r\\n          'aria-label': 'checkbox with default color',\\r\\n        }}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {green} from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color='default' {...props} />);\r\n\r\nexport default function CheckboxLabels() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n    checkedG: true,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({...state, [name]: event.target.checked});\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedA}\r\n            onChange={handleChange('checkedA')}\r\n            value='checkedA'\r\n          />\r\n        }\r\n        label='Secondary'\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedB}\r\n            onChange={handleChange('checkedB')}\r\n            value='checkedB'\r\n            color='primary'\r\n          />\r\n        }\r\n        label='Primary'\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox value='checkedC' />}\r\n        label='Uncontrolled'\r\n      />\r\n      <FormControlLabel\r\n        disabled\r\n        control={<Checkbox value='checkedD' />}\r\n        label='Disabled'\r\n      />\r\n      <FormControlLabel\r\n        disabled\r\n        control={<Checkbox checked value='checkedE' />}\r\n        label='Disabled'\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedF}\r\n            onChange={handleChange('checkedF')}\r\n            value='checkedF'\r\n            indeterminate\r\n          />\r\n        }\r\n        label='Indeterminate'\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <GreenCheckbox\r\n            checked={state.checkedG}\r\n            onChange={handleChange('checkedG')}\r\n            value='checkedG'\r\n          />\r\n        }\r\n        label='Custom color'\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            icon={<FavoriteBorder />}\r\n            checkedIcon={<Favorite />}\r\n            value='checkedH'\r\n          />\r\n        }\r\n        label='Custom icon'\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            icon={<CheckBoxOutlineBlankIcon fontSize='small' />}\r\n            checkedIcon={<CheckBoxIcon fontSize='small' />}\r\n            value='checkedI'\r\n          />\r\n        }\r\n        label='Custom size'\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {withStyles} from '@material-ui/core/styles';\\r\\nimport {green} from '@material-ui/core/colors';\\r\\nimport FormGroup from '@material-ui/core/FormGroup';\\r\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\r\\nimport Checkbox from '@material-ui/core/Checkbox';\\r\\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\\r\\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\\r\\nimport Favorite from '@material-ui/icons/Favorite';\\r\\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\\r\\n\\r\\nconst GreenCheckbox = withStyles({\\r\\n  root: {\\r\\n    color: green[400],\\r\\n    '&$checked': {\\r\\n      color: green[600],\\r\\n    },\\r\\n  },\\r\\n  checked: {},\\r\\n})((props) => <Checkbox color='default' {...props} />);\\r\\n\\r\\nexport default function CheckboxLabels() {\\r\\n  const [state, setState] = React.useState({\\r\\n    checkedA: true,\\r\\n    checkedB: true,\\r\\n    checkedF: true,\\r\\n    checkedG: true,\\r\\n  });\\r\\n\\r\\n  const handleChange = (name) => (event) => {\\r\\n    setState({...state, [name]: event.target.checked});\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <FormGroup row>\\r\\n      <FormControlLabel\\r\\n        control={\\r\\n          <Checkbox\\r\\n            checked={state.checkedA}\\r\\n            onChange={handleChange('checkedA')}\\r\\n            value='checkedA'\\r\\n          />\\r\\n        }\\r\\n        label='Secondary'\\r\\n      />\\r\\n      <FormControlLabel\\r\\n        control={\\r\\n          <Checkbox\\r\\n            checked={state.checkedB}\\r\\n            onChange={handleChange('checkedB')}\\r\\n            value='checkedB'\\r\\n            color='primary'\\r\\n          />\\r\\n        }\\r\\n        label='Primary'\\r\\n      />\\r\\n      <FormControlLabel\\r\\n        control={<Checkbox value='checkedC' />}\\r\\n        label='Uncontrolled'\\r\\n      />\\r\\n      <FormControlLabel\\r\\n        disabled\\r\\n        control={<Checkbox value='checkedD' />}\\r\\n        label='Disabled'\\r\\n      />\\r\\n      <FormControlLabel\\r\\n        disabled\\r\\n        control={<Checkbox checked value='checkedE' />}\\r\\n        label='Disabled'\\r\\n      />\\r\\n      <FormControlLabel\\r\\n        control={\\r\\n          <Checkbox\\r\\n            checked={state.checkedF}\\r\\n            onChange={handleChange('checkedF')}\\r\\n            value='checkedF'\\r\\n            indeterminate\\r\\n          />\\r\\n        }\\r\\n        label='Indeterminate'\\r\\n      />\\r\\n      <FormControlLabel\\r\\n        control={\\r\\n          <GreenCheckbox\\r\\n            checked={state.checkedG}\\r\\n            onChange={handleChange('checkedG')}\\r\\n            value='checkedG'\\r\\n          />\\r\\n        }\\r\\n        label='Custom color'\\r\\n      />\\r\\n      <FormControlLabel\\r\\n        control={\\r\\n          <Checkbox\\r\\n            icon={<FavoriteBorder />}\\r\\n            checkedIcon={<Favorite />}\\r\\n            value='checkedH'\\r\\n          />\\r\\n        }\\r\\n        label='Custom icon'\\r\\n      />\\r\\n      <FormControlLabel\\r\\n        control={\\r\\n          <Checkbox\\r\\n            icon={<CheckBoxOutlineBlankIcon fontSize='small' />}\\r\\n            checkedIcon={<CheckBoxIcon fontSize='small' />}\\r\\n            value='checkedI'\\r\\n          />\\r\\n        }\\r\\n        label='Custom size'\\r\\n      />\\r\\n    </FormGroup>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function CheckboxesGroup() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    gilad: true,\r\n    jason: false,\r\n    antoine: false,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({...state, [name]: event.target.checked});\r\n  };\r\n\r\n  const {gilad, jason, antoine} = state;\r\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <FormControl component='fieldset' className={classes.formControl}>\r\n        <FormLabel component='legend'>Assign responsibility</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={gilad}\r\n                onChange={handleChange('gilad')}\r\n                value='gilad'\r\n              />\r\n            }\r\n            label='Gilad Gray'\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={jason}\r\n                onChange={handleChange('jason')}\r\n                value='jason'\r\n              />\r\n            }\r\n            label='Jason Killian'\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={antoine}\r\n                onChange={handleChange('antoine')}\r\n                value='antoine'\r\n              />\r\n            }\r\n            label='Antoine Llorca'\r\n          />\r\n        </FormGroup>\r\n        <FormHelperText>Be careful</FormHelperText>\r\n      </FormControl>\r\n      <FormControl\r\n        required\r\n        error={error}\r\n        component='fieldset'\r\n        className={classes.formControl}>\r\n        <FormLabel component='legend'>Pick two</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={gilad}\r\n                onChange={handleChange('gilad')}\r\n                value='gilad'\r\n              />\r\n            }\r\n            label='Gilad Gray'\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={jason}\r\n                onChange={handleChange('jason')}\r\n                value='jason'\r\n              />\r\n            }\r\n            label='Jason Killian'\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={antoine}\r\n                onChange={handleChange('antoine')}\r\n                value='antoine'\r\n              />\r\n            }\r\n            label='Antoine Llorca'\r\n          />\r\n        </FormGroup>\r\n        <FormHelperText>You can display an error</FormHelperText>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nfunction FormControlLabelPosition() {\r\n  const [value, setValue] = React.useState('female');\r\n\r\n  function handleChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <FormControl component='fieldset'>\r\n      <FormLabel component='legend'>labelPlacement</FormLabel>\r\n      <FormGroup\r\n        aria-label='position'\r\n        name='position'\r\n        value={value}\r\n        onChange={handleChange}\r\n        row>\r\n        <FormControlLabel\r\n          value='top'\r\n          control={<Checkbox color='primary' />}\r\n          label='Top'\r\n          labelPlacement='top'\r\n        />\r\n        <FormControlLabel\r\n          value='start'\r\n          control={<Checkbox color='primary' />}\r\n          label='Start'\r\n          labelPlacement='start'\r\n        />\r\n        <FormControlLabel\r\n          value='bottom'\r\n          control={<Checkbox color='primary' />}\r\n          label='Bottom'\r\n          labelPlacement='bottom'\r\n        />\r\n        <FormControlLabel\r\n          value='end'\r\n          control={<Checkbox color='primary' />}\r\n          label='End'\r\n          labelPlacement='end'\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default FormControlLabelPosition;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\nimport DefaultCheckboxes from './DefaultCheckboxes';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport DefaultCheckboxesSource from '!raw-loader!./DefaultCheckboxes';\r\nimport FormControlLabelCB from './FormControlLabelCB';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport FormControlLabelCBSource from '!raw-loader!./FormControlLabelCB';\r\nimport CheckboxesFormGroup from './CheckboxesFormGroup';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport CheckboxesFormGroupSource from '!raw-loader!./CheckboxesFormGroup';\r\nimport LabelPlacement from './LabelPlacement';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport LabelPlacementSource from '!raw-loader!./LabelPlacement';\r\n\r\nconst Checkboxes = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Checkboxes'\r\n        description='Checkboxes allow the user to select one or more items from a set.'\r\n        refUrl='https://material-ui.com/components/checkboxes/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Checkboxes'\r\n            component={DefaultCheckboxes}\r\n            source={DefaultCheckboxesSource}\r\n            description='Checkboxes can be used to turn an option on or off.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='FormControl Label Checkboxes'\r\n            component={FormControlLabelCB}\r\n            source={FormControlLabelCBSource}\r\n            description='Checkbox can also be used with a label description thanks to the FormControlLabel component.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Checkboxes with FormGroup'\r\n            component={CheckboxesFormGroup}\r\n            source={CheckboxesFormGroupSource}\r\n            description='FormGroup is a helpful wrapper used to group selection controls components that provides an easier API.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Label placement'\r\n            component={LabelPlacement}\r\n            source={LabelPlacementSource}\r\n            description='You can change the placement of the label'\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkboxes;\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport FormLabel from '@material-ui/core/FormLabel';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport FormGroup from '@material-ui/core/FormGroup';\\r\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\r\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\r\\nimport Checkbox from '@material-ui/core/Checkbox';\\r\\nimport Box from '@material-ui/core/Box';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    flexDirection: 'column',\\r\\n    [theme.breakpoints.up('sm')]: {\\r\\n      flexDirection: 'row',\\r\\n    },\\r\\n  },\\r\\n  formControl: {\\r\\n    margin: theme.spacing(3),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CheckboxesGroup() {\\r\\n  const classes = useStyles();\\r\\n  const [state, setState] = React.useState({\\r\\n    gilad: true,\\r\\n    jason: false,\\r\\n    antoine: false,\\r\\n  });\\r\\n\\r\\n  const handleChange = (name) => (event) => {\\r\\n    setState({...state, [name]: event.target.checked});\\r\\n  };\\r\\n\\r\\n  const {gilad, jason, antoine} = state;\\r\\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <FormControl component='fieldset' className={classes.formControl}>\\r\\n        <FormLabel component='legend'>Assign responsibility</FormLabel>\\r\\n        <FormGroup>\\r\\n          <FormControlLabel\\r\\n            control={\\r\\n              <Checkbox\\r\\n                checked={gilad}\\r\\n                onChange={handleChange('gilad')}\\r\\n                value='gilad'\\r\\n              />\\r\\n            }\\r\\n            label='Gilad Gray'\\r\\n          />\\r\\n          <FormControlLabel\\r\\n            control={\\r\\n              <Checkbox\\r\\n                checked={jason}\\r\\n                onChange={handleChange('jason')}\\r\\n                value='jason'\\r\\n              />\\r\\n            }\\r\\n            label='Jason Killian'\\r\\n          />\\r\\n          <FormControlLabel\\r\\n            control={\\r\\n              <Checkbox\\r\\n                checked={antoine}\\r\\n                onChange={handleChange('antoine')}\\r\\n                value='antoine'\\r\\n              />\\r\\n            }\\r\\n            label='Antoine Llorca'\\r\\n          />\\r\\n        </FormGroup>\\r\\n        <FormHelperText>Be careful</FormHelperText>\\r\\n      </FormControl>\\r\\n      <FormControl\\r\\n        required\\r\\n        error={error}\\r\\n        component='fieldset'\\r\\n        className={classes.formControl}>\\r\\n        <FormLabel component='legend'>Pick two</FormLabel>\\r\\n        <FormGroup>\\r\\n          <FormControlLabel\\r\\n            control={\\r\\n              <Checkbox\\r\\n                checked={gilad}\\r\\n                onChange={handleChange('gilad')}\\r\\n                value='gilad'\\r\\n              />\\r\\n            }\\r\\n            label='Gilad Gray'\\r\\n          />\\r\\n          <FormControlLabel\\r\\n            control={\\r\\n              <Checkbox\\r\\n                checked={jason}\\r\\n                onChange={handleChange('jason')}\\r\\n                value='jason'\\r\\n              />\\r\\n            }\\r\\n            label='Jason Killian'\\r\\n          />\\r\\n          <FormControlLabel\\r\\n            control={\\r\\n              <Checkbox\\r\\n                checked={antoine}\\r\\n                onChange={handleChange('antoine')}\\r\\n                value='antoine'\\r\\n              />\\r\\n            }\\r\\n            label='Antoine Llorca'\\r\\n          />\\r\\n        </FormGroup>\\r\\n        <FormHelperText>You can display an error</FormHelperText>\\r\\n      </FormControl>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport Checkbox from '@material-ui/core/Checkbox';\\r\\nimport FormGroup from '@material-ui/core/FormGroup';\\r\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\r\\nimport FormControl from '@material-ui/core/FormControl';\\r\\nimport FormLabel from '@material-ui/core/FormLabel';\\r\\n\\r\\nfunction FormControlLabelPosition() {\\r\\n  const [value, setValue] = React.useState('female');\\r\\n\\r\\n  function handleChange(event) {\\r\\n    setValue(event.target.value);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <FormControl component='fieldset'>\\r\\n      <FormLabel component='legend'>labelPlacement</FormLabel>\\r\\n      <FormGroup\\r\\n        aria-label='position'\\r\\n        name='position'\\r\\n        value={value}\\r\\n        onChange={handleChange}\\r\\n        row>\\r\\n        <FormControlLabel\\r\\n          value='top'\\r\\n          control={<Checkbox color='primary' />}\\r\\n          label='Top'\\r\\n          labelPlacement='top'\\r\\n        />\\r\\n        <FormControlLabel\\r\\n          value='start'\\r\\n          control={<Checkbox color='primary' />}\\r\\n          label='Start'\\r\\n          labelPlacement='start'\\r\\n        />\\r\\n        <FormControlLabel\\r\\n          value='bottom'\\r\\n          control={<Checkbox color='primary' />}\\r\\n          label='Bottom'\\r\\n          labelPlacement='bottom'\\r\\n        />\\r\\n        <FormControlLabel\\r\\n          value='end'\\r\\n          control={<Checkbox color='primary' />}\\r\\n          label='End'\\r\\n          labelPlacement='end'\\r\\n        />\\r\\n      </FormGroup>\\r\\n    </FormControl>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default FormControlLabelPosition;\\r\\n\";"],"sourceRoot":""}