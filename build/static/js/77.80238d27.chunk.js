(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[77],{1457:function(e,r,n){"use strict";var a=n(49);Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=a(n(0)),t=(0,a(n(69)).default)(o.default.createElement("path",{d:"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"}),"Favorite");r.default=t},1590:function(e,r,n){"use strict";var a=n(49);Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=a(n(0)),t=(0,a(n(69)).default)(o.default.createElement("path",{d:"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"}),"FavoriteBorder");r.default=t},2323:function(e,r,n){"use strict";var a=n(49);Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=a(n(0)),t=(0,a(n(69)).default)(o.default.createElement("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank");r.default=t},2324:function(e,r,n){"use strict";var a=n(49);Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=a(n(0)),t=(0,a(n(69)).default)(o.default.createElement("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox");r.default=t},3120:function(e,r,n){"use strict";n.r(r);var a=n(0),o=n.n(a),t=n(359),c=n(408),l=n(407),i=n(406),m=n(3),d=n(5),h=n(23),u=n(532);function s(){var e=o.a.useState({checkedA:!0,checkedB:!0,checkedF:!0}),r=Object(h.a)(e,2),n=r[0],a=r[1],t=function(e){return function(r){a(Object(d.a)(Object(d.a)({},n),{},Object(m.a)({},e,r.target.checked)))}};return o.a.createElement("div",null,o.a.createElement(u.a,{checked:n.checkedA,onChange:t("checkedA"),value:"checkedA",inputProps:{"aria-label":"primary checkbox"}}),o.a.createElement(u.a,{checked:n.checkedB,onChange:t("checkedB"),value:"checkedB",color:"primary",inputProps:{"aria-label":"secondary checkbox"}}),o.a.createElement(u.a,{value:"checkedC",inputProps:{"aria-label":"uncontrolled-checkbox"}}),o.a.createElement(u.a,{disabled:!0,value:"checkedD",inputProps:{"aria-label":"disabled checkbox"}}),o.a.createElement(u.a,{disabled:!0,checked:!0,value:"checkedE",inputProps:{"aria-label":"disabled checked checkbox"}}),o.a.createElement(u.a,{checked:n.checkedF,onChange:t("checkedF"),value:"checkedF",indeterminate:!0,inputProps:{"aria-label":"indeterminate checkbox"}}),o.a.createElement(u.a,{defaultChecked:!0,color:"default",value:"checkedG",inputProps:{"aria-label":"checkbox with default color"}}))}var b=n(10),k=n(196),p=n(368),C=n(491),f=n(2323),v=n.n(f),F=n(2324),x=n.n(F),g=n(1457),E=n.n(g),L=n(1590),y=n.n(L),B=Object(b.a)({root:{color:k.a[400],"&$checked":{color:k.a[600]}},checked:{}})((function(e){return o.a.createElement(u.a,Object.assign({color:"default"},e))}));function G(){var e=o.a.useState({checkedA:!0,checkedB:!0,checkedF:!0,checkedG:!0}),r=Object(h.a)(e,2),n=r[0],a=r[1],t=function(e){return function(r){a(Object(d.a)(Object(d.a)({},n),{},Object(m.a)({},e,r.target.checked)))}};return o.a.createElement(p.a,{row:!0},o.a.createElement(C.a,{control:o.a.createElement(u.a,{checked:n.checkedA,onChange:t("checkedA"),value:"checkedA"}),label:"Secondary"}),o.a.createElement(C.a,{control:o.a.createElement(u.a,{checked:n.checkedB,onChange:t("checkedB"),value:"checkedB",color:"primary"}),label:"Primary"}),o.a.createElement(C.a,{control:o.a.createElement(u.a,{value:"checkedC"}),label:"Uncontrolled"}),o.a.createElement(C.a,{disabled:!0,control:o.a.createElement(u.a,{value:"checkedD"}),label:"Disabled"}),o.a.createElement(C.a,{disabled:!0,control:o.a.createElement(u.a,{checked:!0,value:"checkedE"}),label:"Disabled"}),o.a.createElement(C.a,{control:o.a.createElement(u.a,{checked:n.checkedF,onChange:t("checkedF"),value:"checkedF",indeterminate:!0}),label:"Indeterminate"}),o.a.createElement(C.a,{control:o.a.createElement(B,{checked:n.checkedG,onChange:t("checkedG"),value:"checkedG"}),label:"Custom color"}),o.a.createElement(C.a,{control:o.a.createElement(u.a,{icon:o.a.createElement(y.a,null),checkedIcon:o.a.createElement(E.a,null),value:"checkedH"}),label:"Custom icon"}),o.a.createElement(C.a,{control:o.a.createElement(u.a,{icon:o.a.createElement(v.a,{fontSize:"small"}),checkedIcon:o.a.createElement(x.a,{fontSize:"small"}),value:"checkedI"}),label:"Custom size"}))}var j=n(167),P=n(370),S=n(367),O=n(369),A=n(68),w=Object(j.a)((function(e){return{root:Object(m.a)({display:"flex",flexDirection:"column"},e.breakpoints.up("sm"),{flexDirection:"row"}),formControl:{margin:e.spacing(3)}}}));function I(){var e=w(),r=o.a.useState({gilad:!0,jason:!1,antoine:!1}),n=Object(h.a)(r,2),a=n[0],t=n[1],c=function(e){return function(r){t(Object(d.a)(Object(d.a)({},a),{},Object(m.a)({},e,r.target.checked)))}},l=a.gilad,i=a.jason,s=a.antoine,b=2!==[l,i,s].filter((function(e){return e})).length;return o.a.createElement(A.a,{className:e.root},o.a.createElement(S.a,{component:"fieldset",className:e.formControl},o.a.createElement(P.a,{component:"legend"},"Assign responsibility"),o.a.createElement(p.a,null,o.a.createElement(C.a,{control:o.a.createElement(u.a,{checked:l,onChange:c("gilad"),value:"gilad"}),label:"Gilad Gray"}),o.a.createElement(C.a,{control:o.a.createElement(u.a,{checked:i,onChange:c("jason"),value:"jason"}),label:"Jason Killian"}),o.a.createElement(C.a,{control:o.a.createElement(u.a,{checked:s,onChange:c("antoine"),value:"antoine"}),label:"Antoine Llorca"})),o.a.createElement(O.a,null,"Be careful")),o.a.createElement(S.a,{required:!0,error:b,component:"fieldset",className:e.formControl},o.a.createElement(P.a,{component:"legend"},"Pick two"),o.a.createElement(p.a,null,o.a.createElement(C.a,{control:o.a.createElement(u.a,{checked:l,onChange:c("gilad"),value:"gilad"}),label:"Gilad Gray"}),o.a.createElement(C.a,{control:o.a.createElement(u.a,{checked:i,onChange:c("jason"),value:"jason"}),label:"Jason Killian"}),o.a.createElement(C.a,{control:o.a.createElement(u.a,{checked:s,onChange:c("antoine"),value:"antoine"}),label:"Antoine Llorca"})),o.a.createElement(O.a,null,"You can display an error")))}var z=function(){var e=o.a.useState("female"),r=Object(h.a)(e,2),n=r[0],a=r[1];return o.a.createElement(S.a,{component:"fieldset"},o.a.createElement(P.a,{component:"legend"},"labelPlacement"),o.a.createElement(p.a,{"aria-label":"position",name:"position",value:n,onChange:function(e){a(e.target.value)},row:!0},o.a.createElement(C.a,{value:"top",control:o.a.createElement(u.a,{color:"primary"}),label:"Top",labelPlacement:"top"}),o.a.createElement(C.a,{value:"start",control:o.a.createElement(u.a,{color:"primary"}),label:"Start",labelPlacement:"start"}),o.a.createElement(C.a,{value:"bottom",control:o.a.createElement(u.a,{color:"primary"}),label:"Bottom",labelPlacement:"bottom"}),o.a.createElement(C.a,{value:"end",control:o.a.createElement(u.a,{color:"primary"}),label:"End",labelPlacement:"end"})))};r.default=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(l.a,{title:"Checkboxes",description:"Checkboxes allow the user to select one or more items from a set.",refUrl:"https://material-ui.com/components/checkboxes/"}),o.a.createElement(i.a,null,o.a.createElement(t.a,{item:!0,xs:12},o.a.createElement(c.a,{title:"Checkboxes",component:s,source:"import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function Checkboxes() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({...state, [name]: event.target.checked});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Checkbox\r\n        checked={state.checkedA}\r\n        onChange={handleChange('checkedA')}\r\n        value='checkedA'\r\n        inputProps={{\r\n          'aria-label': 'primary checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        checked={state.checkedB}\r\n        onChange={handleChange('checkedB')}\r\n        value='checkedB'\r\n        color='primary'\r\n        inputProps={{\r\n          'aria-label': 'secondary checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        value='checkedC'\r\n        inputProps={{\r\n          'aria-label': 'uncontrolled-checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        disabled\r\n        value='checkedD'\r\n        inputProps={{\r\n          'aria-label': 'disabled checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        disabled\r\n        checked\r\n        value='checkedE'\r\n        inputProps={{\r\n          'aria-label': 'disabled checked checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        checked={state.checkedF}\r\n        onChange={handleChange('checkedF')}\r\n        value='checkedF'\r\n        indeterminate\r\n        inputProps={{\r\n          'aria-label': 'indeterminate checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        defaultChecked\r\n        color='default'\r\n        value='checkedG'\r\n        inputProps={{\r\n          'aria-label': 'checkbox with default color',\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",description:"Checkboxes can be used to turn an option on or off."})),o.a.createElement(t.a,{item:!0,xs:12},o.a.createElement(c.a,{title:"FormControl Label Checkboxes",component:G,source:"import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {green} from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color='default' {...props} />);\r\n\r\nexport default function CheckboxLabels() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n    checkedG: true,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({...state, [name]: event.target.checked});\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedA}\r\n            onChange={handleChange('checkedA')}\r\n            value='checkedA'\r\n          />\r\n        }\r\n        label='Secondary'\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedB}\r\n            onChange={handleChange('checkedB')}\r\n            value='checkedB'\r\n            color='primary'\r\n          />\r\n        }\r\n        label='Primary'\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox value='checkedC' />}\r\n        label='Uncontrolled'\r\n      />\r\n      <FormControlLabel\r\n        disabled\r\n        control={<Checkbox value='checkedD' />}\r\n        label='Disabled'\r\n      />\r\n      <FormControlLabel\r\n        disabled\r\n        control={<Checkbox checked value='checkedE' />}\r\n        label='Disabled'\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedF}\r\n            onChange={handleChange('checkedF')}\r\n            value='checkedF'\r\n            indeterminate\r\n          />\r\n        }\r\n        label='Indeterminate'\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <GreenCheckbox\r\n            checked={state.checkedG}\r\n            onChange={handleChange('checkedG')}\r\n            value='checkedG'\r\n          />\r\n        }\r\n        label='Custom color'\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            icon={<FavoriteBorder />}\r\n            checkedIcon={<Favorite />}\r\n            value='checkedH'\r\n          />\r\n        }\r\n        label='Custom icon'\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            icon={<CheckBoxOutlineBlankIcon fontSize='small' />}\r\n            checkedIcon={<CheckBoxIcon fontSize='small' />}\r\n            value='checkedI'\r\n          />\r\n        }\r\n        label='Custom size'\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n",description:"Checkbox can also be used with a label description thanks to the FormControlLabel component."})),o.a.createElement(t.a,{item:!0,xs:12,lg:6},o.a.createElement(c.a,{title:"Checkboxes with FormGroup",component:I,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function CheckboxesGroup() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    gilad: true,\r\n    jason: false,\r\n    antoine: false,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setState({...state, [name]: event.target.checked});\r\n  };\r\n\r\n  const {gilad, jason, antoine} = state;\r\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <FormControl component='fieldset' className={classes.formControl}>\r\n        <FormLabel component='legend'>Assign responsibility</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={gilad}\r\n                onChange={handleChange('gilad')}\r\n                value='gilad'\r\n              />\r\n            }\r\n            label='Gilad Gray'\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={jason}\r\n                onChange={handleChange('jason')}\r\n                value='jason'\r\n              />\r\n            }\r\n            label='Jason Killian'\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={antoine}\r\n                onChange={handleChange('antoine')}\r\n                value='antoine'\r\n              />\r\n            }\r\n            label='Antoine Llorca'\r\n          />\r\n        </FormGroup>\r\n        <FormHelperText>Be careful</FormHelperText>\r\n      </FormControl>\r\n      <FormControl\r\n        required\r\n        error={error}\r\n        component='fieldset'\r\n        className={classes.formControl}>\r\n        <FormLabel component='legend'>Pick two</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={gilad}\r\n                onChange={handleChange('gilad')}\r\n                value='gilad'\r\n              />\r\n            }\r\n            label='Gilad Gray'\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={jason}\r\n                onChange={handleChange('jason')}\r\n                value='jason'\r\n              />\r\n            }\r\n            label='Jason Killian'\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={antoine}\r\n                onChange={handleChange('antoine')}\r\n                value='antoine'\r\n              />\r\n            }\r\n            label='Antoine Llorca'\r\n          />\r\n        </FormGroup>\r\n        <FormHelperText>You can display an error</FormHelperText>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n",description:"FormGroup is a helpful wrapper used to group selection controls components that provides an easier API."})),o.a.createElement(t.a,{item:!0,xs:12,lg:6},o.a.createElement(c.a,{title:"Label placement",component:z,source:"import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nfunction FormControlLabelPosition() {\r\n  const [value, setValue] = React.useState('female');\r\n\r\n  function handleChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <FormControl component='fieldset'>\r\n      <FormLabel component='legend'>labelPlacement</FormLabel>\r\n      <FormGroup\r\n        aria-label='position'\r\n        name='position'\r\n        value={value}\r\n        onChange={handleChange}\r\n        row>\r\n        <FormControlLabel\r\n          value='top'\r\n          control={<Checkbox color='primary' />}\r\n          label='Top'\r\n          labelPlacement='top'\r\n        />\r\n        <FormControlLabel\r\n          value='start'\r\n          control={<Checkbox color='primary' />}\r\n          label='Start'\r\n          labelPlacement='start'\r\n        />\r\n        <FormControlLabel\r\n          value='bottom'\r\n          control={<Checkbox color='primary' />}\r\n          label='Bottom'\r\n          labelPlacement='bottom'\r\n        />\r\n        <FormControlLabel\r\n          value='end'\r\n          control={<Checkbox color='primary' />}\r\n          label='End'\r\n          labelPlacement='end'\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default FormControlLabelPosition;\r\n",description:"You can change the placement of the label"}))))}}}]);
//# sourceMappingURL=77.80238d27.chunk.js.map