{"version":3,"sources":["modules/thirdParty/recharts/Bar/Components/data.js","modules/thirdParty/recharts/Bar/Components/TinyBarChart.js","modules/thirdParty/recharts/Bar/Components/StackedBarChart.js","modules/thirdParty/recharts/Bar/Components/MixBarChart.js","modules/thirdParty/recharts/Bar/Components/CustomShapeBarChart.js","modules/thirdParty/recharts/Bar/Components/PositiveAndNegativeBarChart.js","modules/thirdParty/recharts/Bar/Components/BarChartStackedBySign.js","modules/thirdParty/recharts/Bar/Components/BiaxialBarChart.js","modules/thirdParty/recharts/Bar/index.js","webpack:///./src/modules/thirdParty/recharts/Bar/Components/TinyBarChart.js?d5d4","webpack:///./src/modules/thirdParty/recharts/Bar/Components/StackedBarChart.js?d414","webpack:///./src/modules/thirdParty/recharts/Bar/Components/MixBarChart.js?c65f","webpack:///./src/modules/thirdParty/recharts/Bar/Components/CustomShapeBarChart.js?546a","webpack:///./src/modules/thirdParty/recharts/Bar/Components/PositiveAndNegativeBarChart.js?1cc5","webpack:///./src/modules/thirdParty/recharts/Bar/Components/BarChartStackedBySign.js?dd2d","webpack:///./src/modules/thirdParty/recharts/Bar/Components/BiaxialBarChart.js?2294"],"names":["data","name","uv","pv","amt","TinyBarChart","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","fill","StackedBarChart","stackId","MixBarChart","getPath","x","y","TriangleBar","props","d","stroke","CustomShapeBarChart","shape","label","PositiveAndNegativeBarChart","BarChartStackedBySign","stackOffset","BiaxialBarChart","yAxisId","orientation","BarChart","match","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","component","source"],"mappings":"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","file":"static/js/155.9e3b968a.chunk.js","sourcesContent":["const data = [\r\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n  {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\r\n  {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n  {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\nexport default data;\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst TinyBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey='pv' fill='#4299E1' />\r\n      <Bar dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default TinyBarChart;\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst StackedBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey='pv' stackId='a' fill='#4299E1' />\r\n      <Bar dataKey='uv' stackId='a' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default StackedBarChart;\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst MixBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey='amt' stackId='a' fill='#4299E1' />\r\n      <Bar dataKey='pv' stackId='a' fill='#F04F47' />\r\n      <Bar dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default MixBarChart;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst getPath = (x, y, width, height) => {\r\n  return `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${\r\n    x + width / 2\r\n  }, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${\r\n    y + height\r\n  } ${x + width}, ${y + height}\r\n          Z`;\r\n};\r\n\r\nconst TriangleBar = (props) => {\r\n  const {fill, x, y, width, height} = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke='none' fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\nconst CustomShapeBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Bar dataKey='uv' fill='#4299E1' shape={<TriangleBar />} label />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default CustomShapeBarChart;\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\r\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\n\r\nconst PositiveAndNegativeBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <ReferenceLine y={0} stroke='#000' />\r\n      <Bar dataKey='pv' fill='#4299E1' />\r\n      <Bar dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default PositiveAndNegativeBarChart;\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\r\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\n\r\nconst BarChartStackedBySign = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart\r\n      data={data}\r\n      stackOffset='sign'\r\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <ReferenceLine y={0} stroke='#000' />\r\n      <Bar dataKey='pv' fill='#4299E1' stackId='stack' />\r\n      <Bar dataKey='uv' fill='#F04F47' stackId='stack' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default BarChartStackedBySign;\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport data from './data';\r\n\r\nconst BiaxialBarChart = () => (\r\n  <ResponsiveContainer width='100%' height={200}>\r\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey='name' />\r\n      <YAxis yAxisId='left' orientation='left' stroke='#03275b' />\r\n      <YAxis yAxisId='right' orientation='right' stroke='#F04F47' />\r\n      <CartesianGrid strokeDasharray='3 3' />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar yAxisId='left' dataKey='pv' fill='#4299E1' />\r\n      <Bar yAxisId='right' dataKey='uv' fill='#F04F47' />\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default BiaxialBarChart;\r\n","import React from 'react';\r\nimport TinyBarChart from './Components/TinyBarChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport TinyBarChartSource from '!raw-loader!./Components/TinyBarChart';\r\nimport StackedBarChart from './Components/StackedBarChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport StackedBarChartSource from '!raw-loader!./Components/StackedBarChart';\r\nimport MixBarChart from './Components/MixBarChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MixBarChartSource from '!raw-loader!./Components/MixBarChart';\r\nimport CustomShapeBarChart from './Components/CustomShapeBarChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport CustomShapeBarChartSource from '!raw-loader!./Components/CustomShapeBarChart';\r\nimport PositiveAndNegativeBarChart from './Components/PositiveAndNegativeBarChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport PositiveAndNegativeBarChartSource from '!raw-loader!./Components/PositiveAndNegativeBarChart';\r\nimport BarChartStackedBySign from './Components/BarChartStackedBySign';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport BarChartStackedBySignSource from '!raw-loader!./Components/BarChartStackedBySign';\r\nimport BiaxialBarChart from './Components/BiaxialBarChart';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport BiaxialBarChartSource from '!raw-loader!./Components/BiaxialBarChart';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nconst BarChart = ({match}) => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Bar Chart'\r\n        description='All svg elements can be added into the BarChart component, such as defs, linearGradient, etc.'\r\n        refUrl='http://recharts.org/en-US/api/BarChart/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Tiny Bar Chart'\r\n            component={TinyBarChart}\r\n            source={TinyBarChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Stacked Bar Chart'\r\n            component={StackedBarChart}\r\n            source={StackedBarChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Mix Bar Chart'\r\n            component={MixBarChart}\r\n            source={MixBarChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Custom Shape Bar Chart'\r\n            component={CustomShapeBarChart}\r\n            source={CustomShapeBarChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Positive And Negative Bar Chart'\r\n            component={PositiveAndNegativeBarChart}\r\n            source={PositiveAndNegativeBarChartSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Bar Chart Stacked By Sign'\r\n            component={BarChartStackedBySign}\r\n            source={BarChartStackedBySignSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Biaxial Bar Chart'\r\n            component={BiaxialBarChart}\r\n            source={BiaxialBarChartSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","export default \"import React from 'react';\\r\\nimport {\\r\\n  Bar,\\r\\n  BarChart,\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst TinyBarChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Bar dataKey='pv' fill='#4299E1' />\\r\\n      <Bar dataKey='uv' fill='#F04F47' />\\r\\n    </BarChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default TinyBarChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Bar,\\r\\n  BarChart,\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst StackedBarChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Bar dataKey='pv' stackId='a' fill='#4299E1' />\\r\\n      <Bar dataKey='uv' stackId='a' fill='#F04F47' />\\r\\n    </BarChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default StackedBarChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Bar,\\r\\n  BarChart,\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst MixBarChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Bar dataKey='amt' stackId='a' fill='#4299E1' />\\r\\n      <Bar dataKey='pv' stackId='a' fill='#F04F47' />\\r\\n      <Bar dataKey='uv' fill='#F04F47' />\\r\\n    </BarChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default MixBarChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport {\\r\\n  Bar,\\r\\n  BarChart,\\r\\n  CartesianGrid,\\r\\n  ResponsiveContainer,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst getPath = (x, y, width, height) => {\\r\\n  return `M${x},${y + height}\\r\\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${\\r\\n    x + width / 2\\r\\n  }, ${y}\\r\\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${\\r\\n    y + height\\r\\n  } ${x + width}, ${y + height}\\r\\n          Z`;\\r\\n};\\r\\n\\r\\nconst TriangleBar = (props) => {\\r\\n  const {fill, x, y, width, height} = props;\\r\\n\\r\\n  return <path d={getPath(x, y, width, height)} stroke='none' fill={fill} />;\\r\\n};\\r\\n\\r\\nTriangleBar.propTypes = {\\r\\n  fill: PropTypes.string,\\r\\n  x: PropTypes.number,\\r\\n  y: PropTypes.number,\\r\\n  width: PropTypes.number,\\r\\n  height: PropTypes.number,\\r\\n};\\r\\nconst CustomShapeBarChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Bar dataKey='uv' fill='#4299E1' shape={<TriangleBar />} label />\\r\\n    </BarChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default CustomShapeBarChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Bar,\\r\\n  BarChart,\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  ReferenceLine,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\n\\r\\nconst data = [\\r\\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\\r\\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\\r\\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\\r\\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\\r\\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\\r\\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\\r\\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\\r\\n];\\r\\n\\r\\nconst PositiveAndNegativeBarChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <ReferenceLine y={0} stroke='#000' />\\r\\n      <Bar dataKey='pv' fill='#4299E1' />\\r\\n      <Bar dataKey='uv' fill='#F04F47' />\\r\\n    </BarChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default PositiveAndNegativeBarChart;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Bar,\\r\\n  BarChart,\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  ReferenceLine,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\n\\r\\nconst data = [\\r\\n  {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\\r\\n  {name: 'Page B', uv: -3000, pv: 1398, amt: 2210},\\r\\n  {name: 'Page C', uv: -2000, pv: -9800, amt: 2290},\\r\\n  {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\\r\\n  {name: 'Page E', uv: -1890, pv: 4800, amt: 2181},\\r\\n  {name: 'Page F', uv: 2390, pv: -3800, amt: 2500},\\r\\n  {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\\r\\n];\\r\\n\\r\\nconst BarChartStackedBySign = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <BarChart\\r\\n      data={data}\\r\\n      stackOffset='sign'\\r\\n      margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <ReferenceLine y={0} stroke='#000' />\\r\\n      <Bar dataKey='pv' fill='#4299E1' stackId='stack' />\\r\\n      <Bar dataKey='uv' fill='#F04F47' stackId='stack' />\\r\\n    </BarChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default BarChartStackedBySign;\\r\\n\";","export default \"import React from 'react';\\r\\nimport {\\r\\n  Bar,\\r\\n  BarChart,\\r\\n  CartesianGrid,\\r\\n  Legend,\\r\\n  ResponsiveContainer,\\r\\n  Tooltip,\\r\\n  XAxis,\\r\\n  YAxis,\\r\\n} from 'recharts';\\r\\nimport data from './data';\\r\\n\\r\\nconst BiaxialBarChart = () => (\\r\\n  <ResponsiveContainer width='100%' height={200}>\\r\\n    <BarChart data={data} margin={{top: 10, right: 0, left: -25, bottom: 0}}>\\r\\n      <XAxis dataKey='name' />\\r\\n      <YAxis yAxisId='left' orientation='left' stroke='#03275b' />\\r\\n      <YAxis yAxisId='right' orientation='right' stroke='#F04F47' />\\r\\n      <CartesianGrid strokeDasharray='3 3' />\\r\\n      <Tooltip />\\r\\n      <Legend />\\r\\n      <Bar yAxisId='left' dataKey='pv' fill='#4299E1' />\\r\\n      <Bar yAxisId='right' dataKey='uv' fill='#F04F47' />\\r\\n    </BarChart>\\r\\n  </ResponsiveContainer>\\r\\n);\\r\\n\\r\\nexport default BiaxialBarChart;\\r\\n\";"],"sourceRoot":""}