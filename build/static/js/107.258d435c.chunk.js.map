{"version":3,"sources":["../node_modules/@material-ui/icons/Save.js","modules/muiComponents/feedback/Progress/CircularIndeterminate.js","webpack:///./src/modules/muiComponents/feedback/Progress/CircularIndeterminate.js?e7ef","modules/muiComponents/feedback/Progress/InteractiveIntegration.js","webpack:///./src/modules/muiComponents/feedback/Progress/InteractiveIntegration.js?23ec","modules/muiComponents/feedback/Progress/CircularDeterminate.js","webpack:///./src/modules/muiComponents/feedback/Progress/CircularDeterminate.js?de9b","modules/muiComponents/feedback/Progress/CircularStatic.js","webpack:///./src/modules/muiComponents/feedback/Progress/CircularStatic.js?bdef","modules/muiComponents/feedback/Progress/LinearIndeterminate.js","webpack:///./src/modules/muiComponents/feedback/Progress/LinearIndeterminate.js?f9fb","modules/muiComponents/feedback/Progress/LinearDeterminate.js","webpack:///./src/modules/muiComponents/feedback/Progress/LinearDeterminate.js?2fd7","modules/muiComponents/feedback/Progress/LinearBuffer.js","webpack:///./src/modules/muiComponents/feedback/Progress/LinearBuffer.js?01dc","modules/muiComponents/feedback/Progress/LinearQuery.js","webpack:///./src/modules/muiComponents/feedback/Progress/LinearQuery.js?8faa","modules/muiComponents/feedback/Progress/CustomizedProgressBars.js","webpack:///./src/modules/muiComponents/feedback/Progress/CustomizedProgressBars.js?2f74","modules/muiComponents/feedback/Progress/DelayingAppearance.js","modules/muiComponents/feedback/Progress/index.js","webpack:///./src/modules/muiComponents/feedback/Progress/DelayingAppearance.js?8b71"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","progress","margin","spacing","CircularIndeterminate","classes","CircularProgress","className","color","root","display","alignItems","wrapper","position","buttonSuccess","backgroundColor","green","fabProgress","top","left","zIndex","buttonProgress","marginTop","marginLeft","CircularIntegration","React","useState","loading","setLoading","success","setSuccess","timer","useRef","buttonClassname","clsx","handleButtonClick","current","setTimeout","useEffect","clearTimeout","Fab","aria-label","onClick","size","Button","variant","disabled","CircularDeterminate","setProgress","setInterval","oldProgress","clearInterval","CircularStatic","completed","setCompleted","prevCompleted","flexGrow","LinearIndeterminate","LinearProgress","LinearDeterminate","oldCompleted","diff","Math","random","min","LinearBuffer","buffer","setBuffer","diff2","valueBuffer","LinearQuery","ColorCircularProgress","withStyles","ColorLinearProgress","colorPrimary","barColorPrimary","BorderLinearProgress","height","lighten","bar","borderRadius","useStylesFacebook","bottom","animationDuration","FacebookProgress","props","thickness","disableShrink","CustomizedProgressBars","flexDirection","button","placeholder","DelayingAppearance","query","setQuery","timerRef","Fade","in","style","transitionDelay","unmountOnExit","prevLoading","Typography","Progress","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","component","source","InteractiveIntegration"],"mappings":"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","file":"static/js/107.258d435c.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} />\r\n      <CircularProgress className={classes.progress} color='secondary' />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  progress: {\\r\\n    margin: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CircularIndeterminate() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <CircularProgress className={classes.progress} />\\r\\n      <CircularProgress className={classes.progress} color='secondary' />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {green} from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: -6,\r\n    left: -6,\r\n    zIndex: 1,\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function CircularIntegration() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const timer = React.useRef();\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer.current);\r\n    };\r\n  }, []);\r\n\r\n  function handleButtonClick() {\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n      timer.current = setTimeout(() => {\r\n        setSuccess(true);\r\n        setLoading(false);\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.wrapper}>\r\n        <Fab\r\n          aria-label='save'\r\n          color='primary'\r\n          className={buttonClassname}\r\n          onClick={handleButtonClick}>\r\n          {success ? <CheckIcon /> : <SaveIcon />}\r\n        </Fab>\r\n        {loading && (\r\n          <CircularProgress size={68} className={classes.fabProgress} />\r\n        )}\r\n      </div>\r\n      <div className={classes.wrapper}>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          className={buttonClassname}\r\n          disabled={loading}\r\n          onClick={handleButtonClick}>\r\n          Accept terms\r\n        </Button>\r\n        {loading && (\r\n          <CircularProgress size={24} className={classes.buttonProgress} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport clsx from 'clsx';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\r\\nimport {green} from '@material-ui/core/colors';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Fab from '@material-ui/core/Fab';\\r\\nimport CheckIcon from '@material-ui/icons/Check';\\r\\nimport SaveIcon from '@material-ui/icons/Save';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    alignItems: 'center',\\r\\n  },\\r\\n  wrapper: {\\r\\n    margin: theme.spacing(1),\\r\\n    position: 'relative',\\r\\n  },\\r\\n  buttonSuccess: {\\r\\n    backgroundColor: green[500],\\r\\n    '&:hover': {\\r\\n      backgroundColor: green[700],\\r\\n    },\\r\\n  },\\r\\n  fabProgress: {\\r\\n    color: green[500],\\r\\n    position: 'absolute',\\r\\n    top: -6,\\r\\n    left: -6,\\r\\n    zIndex: 1,\\r\\n  },\\r\\n  buttonProgress: {\\r\\n    color: green[500],\\r\\n    position: 'absolute',\\r\\n    top: '50%',\\r\\n    left: '50%',\\r\\n    marginTop: -12,\\r\\n    marginLeft: -12,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CircularIntegration() {\\r\\n  const classes = useStyles();\\r\\n  const [loading, setLoading] = React.useState(false);\\r\\n  const [success, setSuccess] = React.useState(false);\\r\\n  const timer = React.useRef();\\r\\n\\r\\n  const buttonClassname = clsx({\\r\\n    [classes.buttonSuccess]: success,\\r\\n  });\\r\\n\\r\\n  React.useEffect(() => {\\r\\n    return () => {\\r\\n      clearTimeout(timer.current);\\r\\n    };\\r\\n  }, []);\\r\\n\\r\\n  function handleButtonClick() {\\r\\n    if (!loading) {\\r\\n      setSuccess(false);\\r\\n      setLoading(true);\\r\\n      timer.current = setTimeout(() => {\\r\\n        setSuccess(true);\\r\\n        setLoading(false);\\r\\n      }, 2000);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <div className={classes.wrapper}>\\r\\n        <Fab\\r\\n          aria-label='save'\\r\\n          color='primary'\\r\\n          className={buttonClassname}\\r\\n          onClick={handleButtonClick}>\\r\\n          {success ? <CheckIcon /> : <SaveIcon />}\\r\\n        </Fab>\\r\\n        {loading && (\\r\\n          <CircularProgress size={68} className={classes.fabProgress} />\\r\\n        )}\\r\\n      </div>\\r\\n      <div className={classes.wrapper}>\\r\\n        <Button\\r\\n          variant='contained'\\r\\n          color='primary'\\r\\n          className={buttonClassname}\\r\\n          disabled={loading}\\r\\n          onClick={handleButtonClick}>\\r\\n          Accept terms\\r\\n        </Button>\\r\\n        {loading && (\\r\\n          <CircularProgress size={24} className={classes.buttonProgress} />\\r\\n        )}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function CircularDeterminate() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      // reset when reaching 100%\r\n      setProgress((oldProgress) => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    }\r\n\r\n    const timer = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant='determinate'\r\n        value={progress}\r\n      />\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant='determinate'\r\n        value={progress}\r\n        color='secondary'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  progress: {\\r\\n    margin: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CircularDeterminate() {\\r\\n  const classes = useStyles();\\r\\n  const [progress, setProgress] = React.useState(0);\\r\\n\\r\\n  React.useEffect(() => {\\r\\n    function tick() {\\r\\n      // reset when reaching 100%\\r\\n      setProgress((oldProgress) => (oldProgress >= 100 ? 0 : oldProgress + 1));\\r\\n    }\\r\\n\\r\\n    const timer = setInterval(tick, 20);\\r\\n    return () => {\\r\\n      clearInterval(timer);\\r\\n    };\\r\\n  }, []);\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <CircularProgress\\r\\n        className={classes.progress}\\r\\n        variant='determinate'\\r\\n        value={progress}\\r\\n      />\\r\\n      <CircularProgress\\r\\n        className={classes.progress}\\r\\n        variant='determinate'\\r\\n        value={progress}\\r\\n        color='secondary'\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function CircularStatic() {\r\n  const classes = useStyles();\r\n  const [completed, setCompleted] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted((prevCompleted) =>\r\n        prevCompleted >= 100 ? 0 : prevCompleted + 10,\r\n      );\r\n    }\r\n\r\n    const timer = setInterval(progress, 1000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant='static'\r\n        value={5}\r\n      />\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant='static'\r\n        value={25}\r\n      />\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant='static'\r\n        value={50}\r\n      />\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant='static'\r\n        value={75}\r\n      />\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant='static'\r\n        value={100}\r\n      />\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant='static'\r\n        value={completed}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  progress: {\\r\\n    margin: theme.spacing(2),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CircularStatic() {\\r\\n  const classes = useStyles();\\r\\n  const [completed, setCompleted] = React.useState(0);\\r\\n\\r\\n  React.useEffect(() => {\\r\\n    function progress() {\\r\\n      setCompleted((prevCompleted) =>\\r\\n        prevCompleted >= 100 ? 0 : prevCompleted + 10,\\r\\n      );\\r\\n    }\\r\\n\\r\\n    const timer = setInterval(progress, 1000);\\r\\n    return () => {\\r\\n      clearInterval(timer);\\r\\n    };\\r\\n  }, []);\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <CircularProgress\\r\\n        className={classes.progress}\\r\\n        variant='static'\\r\\n        value={5}\\r\\n      />\\r\\n      <CircularProgress\\r\\n        className={classes.progress}\\r\\n        variant='static'\\r\\n        value={25}\\r\\n      />\\r\\n      <CircularProgress\\r\\n        className={classes.progress}\\r\\n        variant='static'\\r\\n        value={50}\\r\\n      />\\r\\n      <CircularProgress\\r\\n        className={classes.progress}\\r\\n        variant='static'\\r\\n        value={75}\\r\\n      />\\r\\n      <CircularProgress\\r\\n        className={classes.progress}\\r\\n        variant='static'\\r\\n        value={100}\\r\\n      />\\r\\n      <CircularProgress\\r\\n        className={classes.progress}\\r\\n        variant='static'\\r\\n        value={completed}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress />\r\n      <br />\r\n      <LinearProgress color='secondary' />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\r\\n\\r\\nconst useStyles = makeStyles({\\r\\n  root: {\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function LinearIndeterminate() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <LinearProgress />\\r\\n      <br />\\r\\n      <LinearProgress color='secondary' />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearDeterminate() {\r\n  const classes = useStyles();\r\n  const [completed, setCompleted] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted((oldCompleted) => {\r\n        if (oldCompleted === 100) {\r\n          return 0;\r\n        }\r\n        const diff = Math.random() * 10;\r\n        return Math.min(oldCompleted + diff, 100);\r\n      });\r\n    }\r\n\r\n    const timer = setInterval(progress, 500);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant='determinate' value={completed} />\r\n      <br />\r\n      <LinearProgress\r\n        color='secondary'\r\n        variant='determinate'\r\n        value={completed}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\r\\n\\r\\nconst useStyles = makeStyles({\\r\\n  root: {\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function LinearDeterminate() {\\r\\n  const classes = useStyles();\\r\\n  const [completed, setCompleted] = React.useState(0);\\r\\n\\r\\n  React.useEffect(() => {\\r\\n    function progress() {\\r\\n      setCompleted((oldCompleted) => {\\r\\n        if (oldCompleted === 100) {\\r\\n          return 0;\\r\\n        }\\r\\n        const diff = Math.random() * 10;\\r\\n        return Math.min(oldCompleted + diff, 100);\\r\\n      });\\r\\n    }\\r\\n\\r\\n    const timer = setInterval(progress, 500);\\r\\n    return () => {\\r\\n      clearInterval(timer);\\r\\n    };\\r\\n  }, []);\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <LinearProgress variant='determinate' value={completed} />\\r\\n      <br />\\r\\n      <LinearProgress\\r\\n        color='secondary'\\r\\n        variant='determinate'\\r\\n        value={completed}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearBuffer() {\r\n  const classes = useStyles();\r\n  const [completed, setCompleted] = React.useState(0);\r\n  const [buffer, setBuffer] = React.useState(10);\r\n\r\n  const progress = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progress.current = () => {\r\n      if (completed > 100) {\r\n        setCompleted(0);\r\n        setBuffer(10);\r\n      } else {\r\n        const diff = Math.random() * 10;\r\n        const diff2 = Math.random() * 10;\r\n        setCompleted(completed + diff);\r\n        setBuffer(completed + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      progress.current();\r\n    }\r\n\r\n    const timer = setInterval(tick, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant='buffer' value={completed} valueBuffer={buffer} />\r\n      <br />\r\n      <LinearProgress\r\n        color='secondary'\r\n        variant='buffer'\r\n        value={completed}\r\n        valueBuffer={buffer}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\r\\n\\r\\nconst useStyles = makeStyles({\\r\\n  root: {\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function LinearBuffer() {\\r\\n  const classes = useStyles();\\r\\n  const [completed, setCompleted] = React.useState(0);\\r\\n  const [buffer, setBuffer] = React.useState(10);\\r\\n\\r\\n  const progress = React.useRef(() => {});\\r\\n  React.useEffect(() => {\\r\\n    progress.current = () => {\\r\\n      if (completed > 100) {\\r\\n        setCompleted(0);\\r\\n        setBuffer(10);\\r\\n      } else {\\r\\n        const diff = Math.random() * 10;\\r\\n        const diff2 = Math.random() * 10;\\r\\n        setCompleted(completed + diff);\\r\\n        setBuffer(completed + diff + diff2);\\r\\n      }\\r\\n    };\\r\\n  });\\r\\n\\r\\n  React.useEffect(() => {\\r\\n    function tick() {\\r\\n      progress.current();\\r\\n    }\\r\\n\\r\\n    const timer = setInterval(tick, 500);\\r\\n\\r\\n    return () => {\\r\\n      clearInterval(timer);\\r\\n    };\\r\\n  }, []);\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <LinearProgress variant='buffer' value={completed} valueBuffer={buffer} />\\r\\n      <br />\\r\\n      <LinearProgress\\r\\n        color='secondary'\\r\\n        variant='buffer'\\r\\n        value={completed}\\r\\n        valueBuffer={buffer}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearQuery() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant='query' />\r\n      <br />\r\n      <LinearProgress color='secondary' variant='query' />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\r\\n\\r\\nconst useStyles = makeStyles({\\r\\n  root: {\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function LinearQuery() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <LinearProgress variant='query' />\\r\\n      <br />\\r\\n      <LinearProgress color='secondary' variant='query' />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {lighten, makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst ColorCircularProgress = withStyles({\r\n  root: {\r\n    color: '#00695c',\r\n  },\r\n})(CircularProgress);\r\n\r\nconst ColorLinearProgress = withStyles({\r\n  colorPrimary: {\r\n    backgroundColor: '#b2dfdb',\r\n  },\r\n  barColorPrimary: {\r\n    backgroundColor: '#00695c',\r\n  },\r\n})(LinearProgress);\r\n\r\nconst BorderLinearProgress = withStyles({\r\n  root: {\r\n    height: 10,\r\n    backgroundColor: lighten('#ff6c5c', 0.5),\r\n  },\r\n  bar: {\r\n    borderRadius: 20,\r\n    backgroundColor: '#ff6c5c',\r\n  },\r\n})(LinearProgress);\r\n\r\n// Inspired by the Facebook spinners.\r\nconst useStylesFacebook = makeStyles({\r\n  root: {\r\n    position: 'relative',\r\n  },\r\n  top: {\r\n    color: '#eef3fd',\r\n  },\r\n  bottom: {\r\n    color: '#6798e5',\r\n    animationDuration: '550ms',\r\n    position: 'absolute',\r\n    left: 0,\r\n  },\r\n});\r\n\r\nfunction FacebookProgress(props) {\r\n  const classes = useStylesFacebook();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress\r\n        variant='determinate'\r\n        value={100}\r\n        className={classes.top}\r\n        size={24}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n      <CircularProgress\r\n        variant='indeterminate'\r\n        disableShrink\r\n        className={classes.bottom}\r\n        size={24}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedProgressBars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ColorCircularProgress size={30} thickness={5} />\r\n      <ColorLinearProgress className={classes.margin} />\r\n      <BorderLinearProgress\r\n        className={classes.margin}\r\n        variant='determinate'\r\n        color='secondary'\r\n        value={50}\r\n      />\r\n      <FacebookProgress />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {lighten, makeStyles, withStyles} from '@material-ui/core/styles';\\r\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\r\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\r\\n\\r\\nconst ColorCircularProgress = withStyles({\\r\\n  root: {\\r\\n    color: '#00695c',\\r\\n  },\\r\\n})(CircularProgress);\\r\\n\\r\\nconst ColorLinearProgress = withStyles({\\r\\n  colorPrimary: {\\r\\n    backgroundColor: '#b2dfdb',\\r\\n  },\\r\\n  barColorPrimary: {\\r\\n    backgroundColor: '#00695c',\\r\\n  },\\r\\n})(LinearProgress);\\r\\n\\r\\nconst BorderLinearProgress = withStyles({\\r\\n  root: {\\r\\n    height: 10,\\r\\n    backgroundColor: lighten('#ff6c5c', 0.5),\\r\\n  },\\r\\n  bar: {\\r\\n    borderRadius: 20,\\r\\n    backgroundColor: '#ff6c5c',\\r\\n  },\\r\\n})(LinearProgress);\\r\\n\\r\\n// Inspired by the Facebook spinners.\\r\\nconst useStylesFacebook = makeStyles({\\r\\n  root: {\\r\\n    position: 'relative',\\r\\n  },\\r\\n  top: {\\r\\n    color: '#eef3fd',\\r\\n  },\\r\\n  bottom: {\\r\\n    color: '#6798e5',\\r\\n    animationDuration: '550ms',\\r\\n    position: 'absolute',\\r\\n    left: 0,\\r\\n  },\\r\\n});\\r\\n\\r\\nfunction FacebookProgress(props) {\\r\\n  const classes = useStylesFacebook();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <CircularProgress\\r\\n        variant='determinate'\\r\\n        value={100}\\r\\n        className={classes.top}\\r\\n        size={24}\\r\\n        thickness={4}\\r\\n        {...props}\\r\\n      />\\r\\n      <CircularProgress\\r\\n        variant='indeterminate'\\r\\n        disableShrink\\r\\n        className={classes.bottom}\\r\\n        size={24}\\r\\n        thickness={4}\\r\\n        {...props}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n  margin: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CustomizedProgressBars() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <ColorCircularProgress size={30} thickness={5} />\\r\\n      <ColorLinearProgress className={classes.margin} />\\r\\n      <BorderLinearProgress\\r\\n        className={classes.margin}\\r\\n        variant='determinate'\\r\\n        color='secondary'\\r\\n        value={50}\\r\\n      />\\r\\n      <FacebookProgress />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  placeholder: {\r\n    height: 40,\r\n  },\r\n}));\r\n\r\nexport default function DelayingAppearance() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [query, setQuery] = React.useState('idle');\r\n  const timerRef = React.useRef();\r\n\r\n  React.useEffect(\r\n    () => () => {\r\n      clearTimeout(timerRef.current);\r\n    },\r\n    [],\r\n  );\r\n\r\n  function handleClickLoading() {\r\n    setLoading((prevLoading) => !prevLoading);\r\n  }\r\n\r\n  function handleClickQuery() {\r\n    clearTimeout(timerRef.current);\r\n\r\n    if (query !== 'idle') {\r\n      setQuery('idle');\r\n      return;\r\n    }\r\n\r\n    setQuery('progress');\r\n    timerRef.current = setTimeout(() => {\r\n      setQuery('success');\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.placeholder}>\r\n        <Fade\r\n          in={loading}\r\n          style={{\r\n            transitionDelay: loading ? '800ms' : '0ms',\r\n          }}\r\n          unmountOnExit>\r\n          <CircularProgress />\r\n        </Fade>\r\n      </div>\r\n      <Button onClick={handleClickLoading} className={classes.button}>\r\n        {loading ? 'Stop loading' : 'Loading'}\r\n      </Button>\r\n      <div className={classes.placeholder}>\r\n        {query === 'success' ? (\r\n          <Typography>Success!</Typography>\r\n        ) : (\r\n          <Fade\r\n            in={query === 'progress'}\r\n            style={{\r\n              transitionDelay: query === 'progress' ? '800ms' : '0ms',\r\n            }}\r\n            unmountOnExit>\r\n            <CircularProgress />\r\n          </Fade>\r\n        )}\r\n      </div>\r\n      <Button onClick={handleClickQuery} className={classes.button}>\r\n        {query !== 'idle' ? 'Reset' : 'Simulate a load'}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\nimport CircularIndeterminate from './CircularIndeterminate';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport CircularIndeterminateSource from '!raw-loader!./CircularIndeterminate';\r\nimport InteractiveIntegration from './InteractiveIntegration';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport InteractiveIntegrationSource from '!raw-loader!./InteractiveIntegration';\r\nimport CircularDeterminate from './CircularDeterminate';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport CircularDeterminateSource from '!raw-loader!./CircularDeterminate';\r\nimport CircularStatic from './CircularStatic';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport CircularStaticSource from '!raw-loader!./CircularStatic';\r\nimport LinearIndeterminate from './LinearIndeterminate';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport LinearIndeterminateSource from '!raw-loader!./LinearIndeterminate';\r\nimport LinearDeterminate from './LinearDeterminate';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport LinearDeterminateSource from '!raw-loader!./LinearDeterminate';\r\nimport LinearBuffer from './LinearBuffer';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport LinearBufferSource from '!raw-loader!./LinearBuffer';\r\nimport LinearQuery from './LinearQuery';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport LinearQuerySource from '!raw-loader!./LinearQuery';\r\nimport CustomizedProgressBars from './CustomizedProgressBars';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport CustomizedProgressBarsSource from '!raw-loader!./CustomizedProgressBars';\r\nimport DelayingAppearance from './DelayingAppearance';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport DelayingAppearanceSource from '!raw-loader!./DelayingAppearance';\r\n\r\nconst Progress = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Progress'\r\n        description='Progress indicators commonly known as spinners, express an unspecified wait time or display the length of a process. The animation works with CSS, not JavaScript.'\r\n        refUrl='https://material-ui.com/components/progress/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Circular Progress'\r\n            component={CircularIndeterminate}\r\n            source={CircularIndeterminateSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Interactive Integration'\r\n            component={InteractiveIntegration}\r\n            source={InteractiveIntegrationSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Circular Determinate'\r\n            component={CircularDeterminate}\r\n            source={CircularDeterminateSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Circular Static'\r\n            component={CircularStatic}\r\n            source={CircularStaticSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Linear Indeterminate'\r\n            component={LinearIndeterminate}\r\n            source={LinearIndeterminateSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Linear Determinate'\r\n            component={LinearDeterminate}\r\n            source={LinearDeterminateSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Linear Buffer'\r\n            component={LinearBuffer}\r\n            source={LinearBufferSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Linear Query'\r\n            component={LinearQuery}\r\n            source={LinearQuerySource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Customized progress bars'\r\n            component={CustomizedProgressBars}\r\n            source={CustomizedProgressBarsSource}\r\n            description='Here are some examples of customizing the component. You can learn more about this in the overrides documentation page.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Delaying appearance'\r\n            component={DelayingAppearance}\r\n            source={DelayingAppearanceSource}\r\n            description=\"There are 3 important limits to know around response time. The ripple effect of the ButtonBase component ensures that the user feels that the system is reacting instantaneously. Normally, no special feedback is necessary during delays of more than 0.1 but less than 1.0 second. After 1.0 second, you can display a loader to keep user's flow of thought uninterrupted.\"\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Fade from '@material-ui/core/Fade';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    flexDirection: 'column',\\r\\n    alignItems: 'center',\\r\\n  },\\r\\n  button: {\\r\\n    margin: theme.spacing(2),\\r\\n  },\\r\\n  placeholder: {\\r\\n    height: 40,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function DelayingAppearance() {\\r\\n  const classes = useStyles();\\r\\n  const [loading, setLoading] = React.useState(false);\\r\\n  const [query, setQuery] = React.useState('idle');\\r\\n  const timerRef = React.useRef();\\r\\n\\r\\n  React.useEffect(\\r\\n    () => () => {\\r\\n      clearTimeout(timerRef.current);\\r\\n    },\\r\\n    [],\\r\\n  );\\r\\n\\r\\n  function handleClickLoading() {\\r\\n    setLoading((prevLoading) => !prevLoading);\\r\\n  }\\r\\n\\r\\n  function handleClickQuery() {\\r\\n    clearTimeout(timerRef.current);\\r\\n\\r\\n    if (query !== 'idle') {\\r\\n      setQuery('idle');\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    setQuery('progress');\\r\\n    timerRef.current = setTimeout(() => {\\r\\n      setQuery('success');\\r\\n    }, 2000);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <div className={classes.placeholder}>\\r\\n        <Fade\\r\\n          in={loading}\\r\\n          style={{\\r\\n            transitionDelay: loading ? '800ms' : '0ms',\\r\\n          }}\\r\\n          unmountOnExit>\\r\\n          <CircularProgress />\\r\\n        </Fade>\\r\\n      </div>\\r\\n      <Button onClick={handleClickLoading} className={classes.button}>\\r\\n        {loading ? 'Stop loading' : 'Loading'}\\r\\n      </Button>\\r\\n      <div className={classes.placeholder}>\\r\\n        {query === 'success' ? (\\r\\n          <Typography>Success!</Typography>\\r\\n        ) : (\\r\\n          <Fade\\r\\n            in={query === 'progress'}\\r\\n            style={{\\r\\n              transitionDelay: query === 'progress' ? '800ms' : '0ms',\\r\\n            }}\\r\\n            unmountOnExit>\\r\\n            <CircularProgress />\\r\\n          </Fade>\\r\\n        )}\\r\\n      </div>\\r\\n      <Button onClick={handleClickQuery} className={classes.button}>\\r\\n        {query !== 'idle' ? 'Reset' : 'Simulate a load'}\\r\\n      </Button>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}