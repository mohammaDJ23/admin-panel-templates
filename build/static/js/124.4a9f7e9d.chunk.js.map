{"version":3,"sources":["modules/muiComponents/feedback/Snacksbars/SimpleSnackbars.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/SimpleSnackbars.js?b637","modules/muiComponents/feedback/Snacksbars/CustomizedSnackbars.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/CustomizedSnackbars.js?bc01","modules/muiComponents/feedback/Snacksbars/PositionedSnackbars.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/PositionedSnackbars.js?3084","modules/muiComponents/feedback/Snacksbars/MessageLength.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/MessageLength.js?6aa2","modules/muiComponents/feedback/Snacksbars/TransitionsSnckbar.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/TransitionsSnckbar.js?056a","modules/muiComponents/feedback/Snacksbars/SnackbarsFAB.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/SnackbarsFAB.js?b909","modules/muiComponents/feedback/Snacksbars/ControlSlideDirection.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/ControlSlideDirection.js?1904","modules/muiComponents/feedback/Snacksbars/SnackbarNotistack.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/SnackbarNotistack.js?ebae","modules/muiComponents/feedback/Snacksbars/ChangeTransition.js","modules/muiComponents/feedback/Snacksbars/index.js","webpack:///./src/modules/muiComponents/feedback/Snacksbars/ChangeTransition.js?9d06"],"names":["useStyles","makeStyles","theme","close","padding","spacing","SimpleSnackbar","classes","React","useState","open","setOpen","handleClose","event","reason","Button","onClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","key","color","size","IconButton","aria-label","className","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","MySnackbarContentWrapper","props","variant","other","Icon","SnackbarContent","clsx","aria-describedby","useStyles2","margin","CustomizedSnackbars","PositionedSnackbar","state","setState","handleClick","newState","root","maxWidth","snackbar","LongTextSnackbar","ConsecutiveSnackbars","queueRef","useRef","undefined","messageInfo","setMessageInfo","processQueue","current","length","shift","push","Date","getTime","onExited","body","background","paper","menuButton","fab","position","bottom","right","breakpoints","down","FabIntegrationSnackbar","Fragment","CssBaseline","AppBar","Toolbar","edge","Typography","Fab","TransitionLeft","Slide","direction","TransitionUp","TransitionRight","TransitionDown","DirectionSnackbar","transition","setTransition","Transition","TransitionComponent","MyApp","enqueueSnackbar","useSnackbar","IntegrationNotistack","maxSnack","SlideTransition","GrowTransition","Grow","TransitionsSnackbar","Fade","Snacksbars","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","component","MessageLength","source","PositionedSnackbars","SimpleSnackbars","TransitionsSnckbar","SnackbarsFAB","ChangeTransition","ControlSlideDirection","SnackbarNotistack"],"mappings":"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","file":"static/js/124.4a9f7e9d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSnackbar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id='message-id'>Note archived</span>}\r\n        action={[\r\n          <Button\r\n            key='undo'\r\n            color='secondary'\r\n            size='small'\r\n            onClick={handleClose}>\r\n            UNDO\r\n          </Button>,\r\n          <IconButton\r\n            key='close'\r\n            aria-label='close'\r\n            color='inherit'\r\n            className={classes.close}\r\n            onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Snackbar from '@material-ui/core/Snackbar';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport CloseIcon from '@material-ui/icons/Close';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  close: {\\r\\n    padding: theme.spacing(0.5),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SimpleSnackbar() {\\r\\n  const classes = useStyles();\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  function handleClick() {\\r\\n    setOpen(true);\\r\\n  }\\r\\n\\r\\n  function handleClose(event, reason) {\\r\\n    if (reason === 'clickaway') {\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    setOpen(false);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button onClick={handleClick}>Open simple snackbar</Button>\\r\\n      <Snackbar\\r\\n        anchorOrigin={{\\r\\n          vertical: 'bottom',\\r\\n          horizontal: 'left',\\r\\n        }}\\r\\n        open={open}\\r\\n        autoHideDuration={6000}\\r\\n        onClose={handleClose}\\r\\n        ContentProps={{\\r\\n          'aria-describedby': 'message-id',\\r\\n        }}\\r\\n        message={<span id='message-id'>Note archived</span>}\\r\\n        action={[\\r\\n          <Button\\r\\n            key='undo'\\r\\n            color='secondary'\\r\\n            size='small'\\r\\n            onClick={handleClose}>\\r\\n            UNDO\\r\\n          </Button>,\\r\\n          <IconButton\\r\\n            key='close'\\r\\n            aria-label='close'\\r\\n            color='inherit'\\r\\n            className={classes.close}\\r\\n            onClick={handleClose}>\\r\\n            <CloseIcon />\\r\\n          </IconButton>,\\r\\n        ]}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const {className, message, onClose, variant, ...other} = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby='client-snackbar'\r\n      message={\r\n        <span id='client-snackbar' className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key='close'\r\n          aria-label='close'\r\n          color='inherit'\r\n          onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant='outlined'\r\n        className={classes.margin}\r\n        onClick={handleClick}>\r\n        Open success snackbar\r\n      </Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}>\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant='success'\r\n          message='This is a success message!'\r\n        />\r\n      </Snackbar>\r\n      <MySnackbarContentWrapper\r\n        variant='error'\r\n        className={classes.margin}\r\n        message='This is an error message!'\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant='warning'\r\n        className={classes.margin}\r\n        message='This is a warning message!'\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant='info'\r\n        className={classes.margin}\r\n        message='This is an information message!'\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant='success'\r\n        className={classes.margin}\r\n        message='This is a success message!'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport clsx from 'clsx';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\\r\\nimport ErrorIcon from '@material-ui/icons/Error';\\r\\nimport InfoIcon from '@material-ui/icons/Info';\\r\\nimport CloseIcon from '@material-ui/icons/Close';\\r\\nimport {amber, green} from '@material-ui/core/colors';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport Snackbar from '@material-ui/core/Snackbar';\\r\\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\\r\\nimport WarningIcon from '@material-ui/icons/Warning';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\n\\r\\nconst variantIcon = {\\r\\n  success: CheckCircleIcon,\\r\\n  warning: WarningIcon,\\r\\n  error: ErrorIcon,\\r\\n  info: InfoIcon,\\r\\n};\\r\\n\\r\\nconst useStyles1 = makeStyles((theme) => ({\\r\\n  success: {\\r\\n    backgroundColor: green[600],\\r\\n  },\\r\\n  error: {\\r\\n    backgroundColor: theme.palette.error.dark,\\r\\n  },\\r\\n  info: {\\r\\n    backgroundColor: theme.palette.primary.main,\\r\\n  },\\r\\n  warning: {\\r\\n    backgroundColor: amber[700],\\r\\n  },\\r\\n  icon: {\\r\\n    fontSize: 20,\\r\\n  },\\r\\n  iconVariant: {\\r\\n    opacity: 0.9,\\r\\n    marginRight: theme.spacing(1),\\r\\n  },\\r\\n  message: {\\r\\n    display: 'flex',\\r\\n    alignItems: 'center',\\r\\n  },\\r\\n}));\\r\\n\\r\\nfunction MySnackbarContentWrapper(props) {\\r\\n  const classes = useStyles1();\\r\\n  const {className, message, onClose, variant, ...other} = props;\\r\\n  const Icon = variantIcon[variant];\\r\\n\\r\\n  return (\\r\\n    <SnackbarContent\\r\\n      className={clsx(classes[variant], className)}\\r\\n      aria-describedby='client-snackbar'\\r\\n      message={\\r\\n        <span id='client-snackbar' className={classes.message}>\\r\\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\\r\\n          {message}\\r\\n        </span>\\r\\n      }\\r\\n      action={[\\r\\n        <IconButton\\r\\n          key='close'\\r\\n          aria-label='close'\\r\\n          color='inherit'\\r\\n          onClick={onClose}>\\r\\n          <CloseIcon className={classes.icon} />\\r\\n        </IconButton>,\\r\\n      ]}\\r\\n      {...other}\\r\\n    />\\r\\n  );\\r\\n}\\r\\n\\r\\nMySnackbarContentWrapper.propTypes = {\\r\\n  className: PropTypes.string,\\r\\n  message: PropTypes.string,\\r\\n  onClose: PropTypes.func,\\r\\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\\r\\n};\\r\\n\\r\\nconst useStyles2 = makeStyles((theme) => ({\\r\\n  margin: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function CustomizedSnackbars() {\\r\\n  const classes = useStyles2();\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  function handleClick() {\\r\\n    setOpen(true);\\r\\n  }\\r\\n\\r\\n  function handleClose(event, reason) {\\r\\n    if (reason === 'clickaway') {\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    setOpen(false);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button\\r\\n        variant='outlined'\\r\\n        className={classes.margin}\\r\\n        onClick={handleClick}>\\r\\n        Open success snackbar\\r\\n      </Button>\\r\\n      <Snackbar\\r\\n        anchorOrigin={{\\r\\n          vertical: 'bottom',\\r\\n          horizontal: 'left',\\r\\n        }}\\r\\n        open={open}\\r\\n        autoHideDuration={6000}\\r\\n        onClose={handleClose}>\\r\\n        <MySnackbarContentWrapper\\r\\n          onClose={handleClose}\\r\\n          variant='success'\\r\\n          message='This is a success message!'\\r\\n        />\\r\\n      </Snackbar>\\r\\n      <MySnackbarContentWrapper\\r\\n        variant='error'\\r\\n        className={classes.margin}\\r\\n        message='This is an error message!'\\r\\n      />\\r\\n      <MySnackbarContentWrapper\\r\\n        variant='warning'\\r\\n        className={classes.margin}\\r\\n        message='This is a warning message!'\\r\\n      />\\r\\n      <MySnackbarContentWrapper\\r\\n        variant='info'\\r\\n        className={classes.margin}\\r\\n        message='This is an information message!'\\r\\n      />\\r\\n      <MySnackbarContentWrapper\\r\\n        variant='success'\\r\\n        className={classes.margin}\\r\\n        message='This is a success message!'\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport default function PositionedSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n\r\n  const {vertical, horizontal, open} = state;\r\n\r\n  const handleClick = (newState) => () => {\r\n    setState({open: true, ...newState});\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({...state, open: false});\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'center'})}>\r\n        Top-Center\r\n      </Button>\r\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'right'})}>\r\n        Top-Right\r\n      </Button>\r\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'right'})}>\r\n        Bottom-Right\r\n      </Button>\r\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'center'})}>\r\n        Bottom-Center\r\n      </Button>\r\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'left'})}>\r\n        Bottom-Left\r\n      </Button>\r\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'left'})}>\r\n        Top-Left\r\n      </Button>\r\n      <Snackbar\r\n        anchorOrigin={{vertical, horizontal}}\r\n        key={`${vertical},${horizontal}`}\r\n        open={open}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id='message-id'>I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Snackbar from '@material-ui/core/Snackbar';\\r\\n\\r\\nexport default function PositionedSnackbar() {\\r\\n  const [state, setState] = React.useState({\\r\\n    open: false,\\r\\n    vertical: 'top',\\r\\n    horizontal: 'center',\\r\\n  });\\r\\n\\r\\n  const {vertical, horizontal, open} = state;\\r\\n\\r\\n  const handleClick = (newState) => () => {\\r\\n    setState({open: true, ...newState});\\r\\n  };\\r\\n\\r\\n  function handleClose() {\\r\\n    setState({...state, open: false});\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'center'})}>\\r\\n        Top-Center\\r\\n      </Button>\\r\\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'right'})}>\\r\\n        Top-Right\\r\\n      </Button>\\r\\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'right'})}>\\r\\n        Bottom-Right\\r\\n      </Button>\\r\\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'center'})}>\\r\\n        Bottom-Center\\r\\n      </Button>\\r\\n      <Button onClick={handleClick({vertical: 'bottom', horizontal: 'left'})}>\\r\\n        Bottom-Left\\r\\n      </Button>\\r\\n      <Button onClick={handleClick({vertical: 'top', horizontal: 'left'})}>\\r\\n        Top-Left\\r\\n      </Button>\\r\\n      <Snackbar\\r\\n        anchorOrigin={{vertical, horizontal}}\\r\\n        key={`${vertical},${horizontal}`}\\r\\n        open={open}\\r\\n        onClose={handleClose}\\r\\n        ContentProps={{\\r\\n          'aria-describedby': 'message-id',\\r\\n        }}\\r\\n        message={<span id='message-id'>I love snacks</span>}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\nconst action = (\r\n  <Button color='secondary' size='small'>\r\n    lorem ipsum dolorem\r\n  </Button>\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 600,\r\n  },\r\n  snackbar: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function LongTextSnackbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message='I love snacks.'\r\n        action={action}\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={\r\n          'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n        }\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message='I love candy. I love cookies. I love cupcakes.'\r\n        action={action}\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={\r\n          'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n        }\r\n        action={action}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\\r\\n\\r\\nconst action = (\\r\\n  <Button color='secondary' size='small'>\\r\\n    lorem ipsum dolorem\\r\\n  </Button>\\r\\n);\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    maxWidth: 600,\\r\\n  },\\r\\n  snackbar: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function LongTextSnackbar() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <SnackbarContent\\r\\n        className={classes.snackbar}\\r\\n        message='I love snacks.'\\r\\n        action={action}\\r\\n      />\\r\\n      <SnackbarContent\\r\\n        className={classes.snackbar}\\r\\n        message={\\r\\n          'I love candy. I love cookies. I love cupcakes. \\\\\\r\\n          I love cheesecake. I love chocolate.'\\r\\n        }\\r\\n      />\\r\\n      <SnackbarContent\\r\\n        className={classes.snackbar}\\r\\n        message='I love candy. I love cookies. I love cupcakes.'\\r\\n        action={action}\\r\\n      />\\r\\n      <SnackbarContent\\r\\n        className={classes.snackbar}\\r\\n        message={\\r\\n          'I love candy. I love cookies. I love cupcakes. \\\\\\r\\n          I love cheesecake. I love chocolate.'\\r\\n        }\\r\\n        action={action}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function ConsecutiveSnackbars() {\r\n  const queueRef = React.useRef([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\r\n\r\n  const processQueue = () => {\r\n    if (queueRef.current.length > 0) {\r\n      setMessageInfo(queueRef.current.shift());\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClick = (message) => () => {\r\n    queueRef.current.push({\r\n      message,\r\n      key: new Date().getTime(),\r\n    });\r\n\r\n    if (open) {\r\n      // immediately begin dismissing current message\r\n      // to start showing new one\r\n      setOpen(false);\r\n    } else {\r\n      processQueue();\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => {\r\n    processQueue();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick('Message A')}>Show message A</Button>\r\n      <Button onClick={handleClick('Message B')}>Show message B</Button>\r\n      <Snackbar\r\n        key={messageInfo ? messageInfo.key : undefined}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        onExited={handleExited}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={\r\n          <span id='message-id'>\r\n            {messageInfo ? messageInfo.message : undefined}\r\n          </span>\r\n        }\r\n        action={[\r\n          <Button\r\n            key='undo'\r\n            color='secondary'\r\n            size='small'\r\n            onClick={handleClose}>\r\n            UNDO\r\n          </Button>,\r\n          <IconButton\r\n            key='close'\r\n            aria-label='close'\r\n            color='inherit'\r\n            className={classes.close}\r\n            onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Snackbar from '@material-ui/core/Snackbar';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport CloseIcon from '@material-ui/icons/Close';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  close: {\\r\\n    padding: theme.spacing(0.5),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function ConsecutiveSnackbars() {\\r\\n  const queueRef = React.useRef([]);\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\\r\\n\\r\\n  const processQueue = () => {\\r\\n    if (queueRef.current.length > 0) {\\r\\n      setMessageInfo(queueRef.current.shift());\\r\\n      setOpen(true);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleClick = (message) => () => {\\r\\n    queueRef.current.push({\\r\\n      message,\\r\\n      key: new Date().getTime(),\\r\\n    });\\r\\n\\r\\n    if (open) {\\r\\n      // immediately begin dismissing current message\\r\\n      // to start showing new one\\r\\n      setOpen(false);\\r\\n    } else {\\r\\n      processQueue();\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleClose = (event, reason) => {\\r\\n    if (reason === 'clickaway') {\\r\\n      return;\\r\\n    }\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  const handleExited = () => {\\r\\n    processQueue();\\r\\n  };\\r\\n\\r\\n  const classes = useStyles();\\r\\n  return (\\r\\n    <div>\\r\\n      <Button onClick={handleClick('Message A')}>Show message A</Button>\\r\\n      <Button onClick={handleClick('Message B')}>Show message B</Button>\\r\\n      <Snackbar\\r\\n        key={messageInfo ? messageInfo.key : undefined}\\r\\n        anchorOrigin={{\\r\\n          vertical: 'bottom',\\r\\n          horizontal: 'left',\\r\\n        }}\\r\\n        open={open}\\r\\n        autoHideDuration={6000}\\r\\n        onClose={handleClose}\\r\\n        onExited={handleExited}\\r\\n        ContentProps={{\\r\\n          'aria-describedby': 'message-id',\\r\\n        }}\\r\\n        message={\\r\\n          <span id='message-id'>\\r\\n            {messageInfo ? messageInfo.message : undefined}\\r\\n          </span>\\r\\n        }\\r\\n        action={[\\r\\n          <Button\\r\\n            key='undo'\\r\\n            color='secondary'\\r\\n            size='small'\\r\\n            onClick={handleClose}>\\r\\n            UNDO\\r\\n          </Button>,\\r\\n          <IconButton\\r\\n            key='close'\\r\\n            aria-label='close'\\r\\n            color='inherit'\\r\\n            className={classes.close}\\r\\n            onClick={handleClose}>\\r\\n            <CloseIcon />\\r\\n          </IconButton>,\\r\\n        ]}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  snackbar: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      bottom: 90,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function FabIntegrationSnackbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <div>\r\n        <AppBar position='static' color='primary'>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge='start'\r\n              className={classes.menuButton}\r\n              color='inherit'\r\n              aria-label='menu'>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant='h6' color='inherit'>\r\n              App Bar\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Fab color='secondary' className={classes.fab}>\r\n          <AddIcon />\r\n        </Fab>\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={4000}\r\n          ContentProps={{\r\n            'aria-describedby': 'snackbar-fab-message-id',\r\n          }}\r\n          message={<span id='snackbar-fab-message-id'>Archived</span>}\r\n          action={\r\n            <Button color='inherit' size='small'>\r\n              Undo\r\n            </Button>\r\n          }\r\n          className={classes.snackbar}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport AppBar from '@material-ui/core/AppBar';\\r\\nimport CssBaseline from '@material-ui/core/CssBaseline';\\r\\nimport Toolbar from '@material-ui/core/Toolbar';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport MenuIcon from '@material-ui/icons/Menu';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Fab from '@material-ui/core/Fab';\\r\\nimport AddIcon from '@material-ui/icons/Add';\\r\\nimport Snackbar from '@material-ui/core/Snackbar';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  '@global': {\\r\\n    body: {\\r\\n      backgroundColor: theme.palette.background.paper,\\r\\n    },\\r\\n  },\\r\\n  menuButton: {\\r\\n    marginRight: theme.spacing(2),\\r\\n  },\\r\\n  fab: {\\r\\n    position: 'absolute',\\r\\n    bottom: theme.spacing(2),\\r\\n    right: theme.spacing(2),\\r\\n  },\\r\\n  snackbar: {\\r\\n    [theme.breakpoints.down('xs')]: {\\r\\n      bottom: 90,\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function FabIntegrationSnackbar() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <React.Fragment>\\r\\n      <CssBaseline />\\r\\n      <div>\\r\\n        <AppBar position='static' color='primary'>\\r\\n          <Toolbar>\\r\\n            <IconButton\\r\\n              edge='start'\\r\\n              className={classes.menuButton}\\r\\n              color='inherit'\\r\\n              aria-label='menu'>\\r\\n              <MenuIcon />\\r\\n            </IconButton>\\r\\n            <Typography variant='h6' color='inherit'>\\r\\n              App Bar\\r\\n            </Typography>\\r\\n          </Toolbar>\\r\\n        </AppBar>\\r\\n        <Fab color='secondary' className={classes.fab}>\\r\\n          <AddIcon />\\r\\n        </Fab>\\r\\n        <Snackbar\\r\\n          open\\r\\n          autoHideDuration={4000}\\r\\n          ContentProps={{\\r\\n            'aria-describedby': 'snackbar-fab-message-id',\\r\\n          }}\\r\\n          message={<span id='snackbar-fab-message-id'>Archived</span>}\\r\\n          action={\\r\\n            <Button color='inherit' size='small'>\\r\\n              Undo\\r\\n            </Button>\\r\\n          }\\r\\n          className={classes.snackbar}\\r\\n        />\\r\\n      </div>\\r\\n    </React.Fragment>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction='left' />;\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction='up' />;\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n  return <Slide {...props} direction='right' />;\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n  return <Slide {...props} direction='down' />;\r\n}\r\n\r\nexport default function DirectionSnackbar() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [transition, setTransition] = React.useState(undefined);\r\n\r\n  const handleClick = (Transition) => () => {\r\n    setTransition(() => Transition);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick(TransitionLeft)}>Right</Button>\r\n      <Button onClick={handleClick(TransitionUp)}>Up</Button>\r\n      <Button onClick={handleClick(TransitionRight)}>Left</Button>\r\n      <Button onClick={handleClick(TransitionDown)}>Down</Button>\r\n      <Snackbar\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={transition}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id='message-id'>I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Snackbar from '@material-ui/core/Snackbar';\\r\\nimport Slide from '@material-ui/core/Slide';\\r\\n\\r\\nfunction TransitionLeft(props) {\\r\\n  return <Slide {...props} direction='left' />;\\r\\n}\\r\\n\\r\\nfunction TransitionUp(props) {\\r\\n  return <Slide {...props} direction='up' />;\\r\\n}\\r\\n\\r\\nfunction TransitionRight(props) {\\r\\n  return <Slide {...props} direction='right' />;\\r\\n}\\r\\n\\r\\nfunction TransitionDown(props) {\\r\\n  return <Slide {...props} direction='down' />;\\r\\n}\\r\\n\\r\\nexport default function DirectionSnackbar() {\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n  const [transition, setTransition] = React.useState(undefined);\\r\\n\\r\\n  const handleClick = (Transition) => () => {\\r\\n    setTransition(() => Transition);\\r\\n    setOpen(true);\\r\\n  };\\r\\n\\r\\n  const handleClose = () => {\\r\\n    setOpen(false);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button onClick={handleClick(TransitionLeft)}>Right</Button>\\r\\n      <Button onClick={handleClick(TransitionUp)}>Up</Button>\\r\\n      <Button onClick={handleClick(TransitionRight)}>Left</Button>\\r\\n      <Button onClick={handleClick(TransitionDown)}>Down</Button>\\r\\n      <Snackbar\\r\\n        open={open}\\r\\n        onClose={handleClose}\\r\\n        TransitionComponent={transition}\\r\\n        ContentProps={{\\r\\n          'aria-describedby': 'message-id',\\r\\n        }}\\r\\n        message={<span id='message-id'>I love snacks</span>}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {SnackbarProvider, useSnackbar} from 'notistack';\r\n\r\nfunction MyApp() {\r\n  const {enqueueSnackbar} = useSnackbar();\r\n\r\n  const handleClick = () => {\r\n    enqueueSnackbar('I love snacks.');\r\n  };\r\n\r\n  const handleClickVariant = (variant) => () => {\r\n    // variant could be success, error, warning, info, or default\r\n    enqueueSnackbar('This is a warning message!', {variant});\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button onClick={handleClick}>Show snackbar</Button>\r\n      <Button onClick={handleClickVariant('warning')}>\r\n        Show warning snackbar\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function IntegrationNotistack() {\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <MyApp />\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport {SnackbarProvider, useSnackbar} from 'notistack';\\r\\n\\r\\nfunction MyApp() {\\r\\n  const {enqueueSnackbar} = useSnackbar();\\r\\n\\r\\n  const handleClick = () => {\\r\\n    enqueueSnackbar('I love snacks.');\\r\\n  };\\r\\n\\r\\n  const handleClickVariant = (variant) => () => {\\r\\n    // variant could be success, error, warning, info, or default\\r\\n    enqueueSnackbar('This is a warning message!', {variant});\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <React.Fragment>\\r\\n      <Button onClick={handleClick}>Show snackbar</Button>\\r\\n      <Button onClick={handleClickVariant('warning')}>\\r\\n        Show warning snackbar\\r\\n      </Button>\\r\\n    </React.Fragment>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default function IntegrationNotistack() {\\r\\n  return (\\r\\n    <SnackbarProvider maxSnack={3}>\\r\\n      <MyApp />\\r\\n    </SnackbarProvider>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction='up' />;\r\n}\r\n\r\nfunction GrowTransition(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\nexport default function TransitionsSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    Transition: Fade,\r\n  });\r\n\r\n  const handleClick = (Transition) => () => {\r\n    setState({\r\n      open: true,\r\n      Transition,\r\n    });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\r\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\r\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\r\n      <Snackbar\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={state.Transition}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id='message-id'>I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\nimport SimpleSnackbars from './SimpleSnackbars';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SimpleSnackbarsSource from '!raw-loader!./SimpleSnackbars';\r\nimport CustomizedSnackbars from './CustomizedSnackbars';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport CustomizedSnackbarsSource from '!raw-loader!./CustomizedSnackbars';\r\nimport PositionedSnackbars from './PositionedSnackbars';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport PositionedSnackbarsSource from '!raw-loader!./PositionedSnackbars';\r\nimport MessageLength from './MessageLength';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MessageLengthSource from '!raw-loader!./MessageLength';\r\nimport TransitionsSnckbar from './TransitionsSnckbar';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport TransitionsSnckbarSource from '!raw-loader!./TransitionsSnckbar';\r\nimport SnackbarsFAB from './SnackbarsFAB';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SnackbarsFABSource from '!raw-loader!./SnackbarsFAB';\r\nimport ControlSlideDirection from './ControlSlideDirection';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ControlSlideDirectionSource from '!raw-loader!./ControlSlideDirection';\r\nimport SnackbarNotistack from './SnackbarNotistack';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SnackbarNotistackSource from '!raw-loader!./SnackbarNotistack';\r\nimport ChangeTransition from './ChangeTransition';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ChangeTransitionSource from '!raw-loader!./ChangeTransition';\r\n\r\nconst Snacksbars = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Snackbars'\r\n        description='Snackbars provide brief messages about app processes. The component is also known as a toast.'\r\n        refUrl='https://material-ui.com/components/snackbars/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Message Length'\r\n            component={MessageLength}\r\n            source={MessageLengthSource}\r\n            description='Some snackbars with varying message length...'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Customized snackbars'\r\n            component={CustomizedSnackbars}\r\n            source={CustomizedSnackbarsSource}\r\n            description='Here are some examples of customizing the component. You can learn more about this in the overrides documentation page.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Positioned snackbars'\r\n            component={PositionedSnackbars}\r\n            source={PositionedSnackbarsSource}\r\n            description='There may be circumstances when the placement of the snackbar needs to be more flexible.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Simple snackbars'\r\n            component={SimpleSnackbars}\r\n            source={SimpleSnackbarsSource}\r\n            description=\"A basic snackbar that aims to reproduce Google Keep's snackbar behavior.\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Transitions'\r\n            component={TransitionsSnckbar}\r\n            source={TransitionsSnckbarSource}\r\n            description='Some snackbars with varying message length...'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Snackbars and floating action buttons'\r\n            component={SnackbarsFAB}\r\n            source={SnackbarsFABSource}\r\n            description='Some snackbars with varying message length...'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Change Transition'\r\n            component={ChangeTransition}\r\n            source={ChangeTransitionSource}\r\n            description='Grow is the default transition but you can use a different one.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Control Slide direction'\r\n            component={ControlSlideDirection}\r\n            source={ControlSlideDirectionSource}\r\n            description='You can change the direction of the Slide transition..'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Snackbar notistack'\r\n            component={SnackbarNotistack}\r\n            source={SnackbarNotistackSource}\r\n            description=\"In the following example, we demonstrate how to use notistack. notistack makes it easy to display snackbars (so you don't have to deal with open/close state of them). It also enables you to stack them on top of one another (although this is discouraged by the specification).\"\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Snacksbars;\r\n","export default \"import React from 'react';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport Snackbar from '@material-ui/core/Snackbar';\\r\\nimport Fade from '@material-ui/core/Fade';\\r\\nimport Slide from '@material-ui/core/Slide';\\r\\nimport Grow from '@material-ui/core/Grow';\\r\\n\\r\\nfunction SlideTransition(props) {\\r\\n  return <Slide {...props} direction='up' />;\\r\\n}\\r\\n\\r\\nfunction GrowTransition(props) {\\r\\n  return <Grow {...props} />;\\r\\n}\\r\\n\\r\\nexport default function TransitionsSnackbar() {\\r\\n  const [state, setState] = React.useState({\\r\\n    open: false,\\r\\n    Transition: Fade,\\r\\n  });\\r\\n\\r\\n  const handleClick = (Transition) => () => {\\r\\n    setState({\\r\\n      open: true,\\r\\n      Transition,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  function handleClose() {\\r\\n    setState({\\r\\n      ...state,\\r\\n      open: false,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\\r\\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\\r\\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\\r\\n      <Snackbar\\r\\n        open={state.open}\\r\\n        onClose={handleClose}\\r\\n        TransitionComponent={state.Transition}\\r\\n        ContentProps={{\\r\\n          'aria-describedby': 'message-id',\\r\\n        }}\\r\\n        message={<span id='message-id'>I love snacks</span>}\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}