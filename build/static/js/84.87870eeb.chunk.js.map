{"version":3,"sources":["../node_modules/@material-ui/icons/Done.js","../node_modules/@material-ui/icons/Face.js","../node_modules/@material-ui/icons/TagFaces.js","modules/muiComponents/dataDisplay/Chips/SimpleChip.js","webpack:///./src/modules/muiComponents/dataDisplay/Chips/SimpleChip.js?c391","modules/muiComponents/dataDisplay/Chips/OutlinedChips.js","webpack:///./src/modules/muiComponents/dataDisplay/Chips/OutlinedChips.js?6bc2","modules/muiComponents/dataDisplay/Chips/ChipArray.js","webpack:///./src/modules/muiComponents/dataDisplay/Chips/ChipArray.js?3df1","modules/muiComponents/dataDisplay/Chips/SmallChip.js","webpack:///./src/modules/muiComponents/dataDisplay/Chips/SmallChip.js?ba34","modules/muiComponents/dataDisplay/Chips/OutlinedVariant.js","modules/muiComponents/dataDisplay/Chips/index.js","webpack:///./src/modules/muiComponents/dataDisplay/Chips/OutlinedVariant.js?df6c"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","root","display","justifyContent","flexWrap","chip","margin","spacing","Chips","classes","handleDelete","alert","handleClick","className","Chip","label","avatar","Avatar","onClick","alt","src","onDelete","icon","deleteIcon","component","href","clickable","color","OutlinedChips","variant","padding","ChipsArray","React","useState","key","chipData","setChipData","Paper","map","data","chipToDelete","chips","filter","SmallChips","size","SmallOutlinedChips","ComponentHeader","title","description","refUrl","GridContainer","Grid","item","xs","ComponentCard","SimpleChip","source","SmallChip","OutlinedVariant","lg","ChipArray"],"mappings":"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","file":"static/js/84.87870eeb.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z\"\n}), 'Face');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z\"\n}), 'TagFaces');\n\nexports.default = _default;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Chips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip label='Basic Chip' className={classes.chip} />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Clickable Chip'\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        avatar={<Avatar alt='Natacha' src={'/assets/images/avatar/A15.jpg'} />}\r\n        label='Deletable Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        label='Custom delete icon Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        label='Clickable Link Chip'\r\n        className={classes.chip}\r\n        component='a'\r\n        href='#chip'\r\n        clickable\r\n      />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        label='Deletable Primary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='primary'\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Avatar from '@material-ui/core/Avatar';\\r\\nimport Chip from '@material-ui/core/Chip';\\r\\nimport FaceIcon from '@material-ui/icons/Face';\\r\\nimport DoneIcon from '@material-ui/icons/Done';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  chip: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function Chips() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  function handleDelete() {\\r\\n    alert('You clicked the delete icon.');\\r\\n  }\\r\\n\\r\\n  function handleClick() {\\r\\n    alert('You clicked the Chip.');\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Chip label='Basic Chip' className={classes.chip} />\\r\\n      <Chip\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Clickable Chip'\\r\\n        onClick={handleClick}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={<Avatar alt='Natacha' src={'/assets/images/avatar/A15.jpg'} />}\\r\\n        label='Deletable Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        label='Custom delete icon Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        label='Clickable Link Chip'\\r\\n        className={classes.chip}\\r\\n        component='a'\\r\\n        href='#chip'\\r\\n        clickable\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        label='Deletable Primary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function OutlinedChips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip label='Basic Chip' className={classes.chip} variant='outlined' />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Clickable Chip'\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        avatar={<Avatar alt='Natacha' src={'/assets/images/avatar/A16.jpg'} />}\r\n        label='Deletable Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        label='Custom delete icon Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        label='Clickable Link Chip'\r\n        className={classes.chip}\r\n        component='a'\r\n        href='#chip'\r\n        clickable\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        label='Deletable Primary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='primary'\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n        variant='outlined'\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n        variant='outlined'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Avatar from '@material-ui/core/Avatar';\\r\\nimport Chip from '@material-ui/core/Chip';\\r\\nimport FaceIcon from '@material-ui/icons/Face';\\r\\nimport DoneIcon from '@material-ui/icons/Done';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  chip: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function OutlinedChips() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  function handleDelete() {\\r\\n    alert('You clicked the delete icon.');\\r\\n  }\\r\\n\\r\\n  function handleClick() {\\r\\n    alert('You clicked the Chip.');\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Chip label='Basic Chip' className={classes.chip} variant='outlined' />\\r\\n      <Chip\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Clickable Chip'\\r\\n        onClick={handleClick}\\r\\n        className={classes.chip}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={<Avatar alt='Natacha' src={'/assets/images/avatar/A16.jpg'} />}\\r\\n        label='Deletable Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        label='Custom delete icon Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        label='Clickable Link Chip'\\r\\n        className={classes.chip}\\r\\n        component='a'\\r\\n        href='#chip'\\r\\n        clickable\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        label='Deletable Primary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n        variant='outlined'\\r\\n      />\\r\\n      <Chip\\r\\n        icon={<FaceIcon />}\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n        variant='outlined'\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function ChipsArray() {\r\n  const classes = useStyles();\r\n  const [chipData, setChipData] = React.useState([\r\n    {key: 0, label: 'Angular'},\r\n    {key: 1, label: 'jQuery'},\r\n    {key: 2, label: 'Polymer'},\r\n    {key: 3, label: 'React'},\r\n    {key: 4, label: 'Vue.js'},\r\n  ]);\r\n\r\n  const handleDelete = (chipToDelete) => () => {\r\n    if (chipToDelete.label === 'React') {\r\n      alert('Why would you want to delete React?! :)');\r\n      return;\r\n    }\r\n\r\n    setChipData((chips) =>\r\n      chips.filter((chip) => chip.key !== chipToDelete.key),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      {chipData.map((data) => {\r\n        let icon;\r\n\r\n        if (data.label === 'React') {\r\n          icon = <TagFacesIcon />;\r\n        }\r\n\r\n        return (\r\n          <Chip\r\n            key={data.key}\r\n            icon={icon}\r\n            label={data.label}\r\n            onDelete={handleDelete(data)}\r\n            className={classes.chip}\r\n          />\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Chip from '@material-ui/core/Chip';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    flexWrap: 'wrap',\\r\\n    padding: theme.spacing(0.5),\\r\\n  },\\r\\n  chip: {\\r\\n    margin: theme.spacing(0.5),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function ChipsArray() {\\r\\n  const classes = useStyles();\\r\\n  const [chipData, setChipData] = React.useState([\\r\\n    {key: 0, label: 'Angular'},\\r\\n    {key: 1, label: 'jQuery'},\\r\\n    {key: 2, label: 'Polymer'},\\r\\n    {key: 3, label: 'React'},\\r\\n    {key: 4, label: 'Vue.js'},\\r\\n  ]);\\r\\n\\r\\n  const handleDelete = (chipToDelete) => () => {\\r\\n    if (chipToDelete.label === 'React') {\\r\\n      alert('Why would you want to delete React?! :)');\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    setChipData((chips) =>\\r\\n      chips.filter((chip) => chip.key !== chipToDelete.key),\\r\\n    );\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Paper className={classes.root}>\\r\\n      {chipData.map((data) => {\\r\\n        let icon;\\r\\n\\r\\n        if (data.label === 'React') {\\r\\n          icon = <TagFacesIcon />;\\r\\n        }\\r\\n\\r\\n        return (\\r\\n          <Chip\\r\\n            key={data.key}\\r\\n            icon={icon}\\r\\n            label={data.label}\\r\\n            onDelete={handleDelete(data)}\\r\\n            className={classes.chip}\\r\\n          />\\r\\n        );\\r\\n      })}\\r\\n    </Paper>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SmallChips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip size='small' label='Basic Chip' className={classes.chip} />\r\n      <Chip\r\n        size='small'\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Clickable Chip'\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        avatar={<Avatar alt='Natacha' src={'/assets/images/avatar/A21.jpg'} />}\r\n        label='Deletable Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        label='Custom delete icon Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        label='Clickable Link Chip'\r\n        className={classes.chip}\r\n        component='a'\r\n        href='#chip'\r\n        clickable\r\n      />\r\n      <Chip\r\n        size='small'\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        label='Deletable Primary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='primary'\r\n      />\r\n      <Chip\r\n        size='small'\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n      <Chip\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Avatar from '@material-ui/core/Avatar';\\r\\nimport Chip from '@material-ui/core/Chip';\\r\\nimport FaceIcon from '@material-ui/icons/Face';\\r\\nimport DoneIcon from '@material-ui/icons/Done';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  chip: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SmallChips() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  function handleDelete() {\\r\\n    alert('You clicked the delete icon.');\\r\\n  }\\r\\n\\r\\n  function handleClick() {\\r\\n    alert('You clicked the Chip.');\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Chip size='small' label='Basic Chip' className={classes.chip} />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Clickable Chip'\\r\\n        onClick={handleClick}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={<Avatar alt='Natacha' src={'/assets/images/avatar/A21.jpg'} />}\\r\\n        label='Deletable Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        label='Custom delete icon Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        label='Clickable Link Chip'\\r\\n        className={classes.chip}\\r\\n        component='a'\\r\\n        href='#chip'\\r\\n        clickable\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        label='Deletable Primary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SmallOutlinedChips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        label='Basic Chip'\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Clickable Chip'\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size='small'\r\n        avatar={<Avatar alt='Natacha' src={'/assets/images/avatar/A19.jpg'} />}\r\n        label='Deletable Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Clickable Deletable Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        label='Custom delete icon Chip'\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        label='Clickable Link Chip'\r\n        className={classes.chip}\r\n        component='a'\r\n        href='#chip'\r\n        clickable\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Primary Clickable Chip'\r\n        clickable\r\n        className={classes.chip}\r\n        color='primary'\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        label='Deletable Primary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='primary'\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n      <Chip\r\n        variant='outlined'\r\n        size='small'\r\n        icon={<FaceIcon />}\r\n        label='Deletable Secondary Chip'\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color='secondary'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\nimport SimpleChip from './SimpleChip';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SimpleChipSource from '!raw-loader!./SimpleChip';\r\nimport OutlinedChips from './OutlinedChips';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport OutlinedChipsSource from '!raw-loader!./OutlinedChips';\r\nimport ChipArray from './ChipArray';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ChipArraySource from '!raw-loader!./ChipArray';\r\nimport SmallChip from './SmallChip';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SmallChipSource from '!raw-loader!./SmallChip';\r\nimport OutlinedVariant from './OutlinedVariant';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport OutlinedVariantSource from '!raw-loader!./OutlinedVariant';\r\n\r\nconst Chips = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Chips'\r\n        description='Chips are compact elements that represent an input, attribute, or action.'\r\n        refUrl='https://material-ui.com/components/chips/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Simple Chip'\r\n            component={SimpleChip}\r\n            source={SimpleChipSource}\r\n            description='Examples of Chips, using an image Avatar, SVG Icon Avatar, Letter and (string) Avatar..'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Outlined Chips'\r\n            component={OutlinedChips}\r\n            source={OutlinedChipsSource}\r\n            description='Outlined chips offer an alternative style.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Small Chip'\r\n            component={SmallChip}\r\n            source={SmallChipSource}\r\n            description='You can use the size prop to define a small Chip.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Outlined variant'\r\n            component={OutlinedVariant}\r\n            source={OutlinedVariantSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Chip array'\r\n            component={ChipArray}\r\n            source={ChipArraySource}\r\n            description='An example of rendering multiple Chips from an array of values. Deleting a chip removes it from the array. Note that since no onClick property is defined, the Chip can be focused, but does not gain depth while clicked or touched.'\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chips;\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Avatar from '@material-ui/core/Avatar';\\r\\nimport Chip from '@material-ui/core/Chip';\\r\\nimport FaceIcon from '@material-ui/icons/Face';\\r\\nimport DoneIcon from '@material-ui/icons/Done';\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  chip: {\\r\\n    margin: theme.spacing(1),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function SmallOutlinedChips() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  function handleDelete() {\\r\\n    alert('You clicked the delete icon.');\\r\\n  }\\r\\n\\r\\n  function handleClick() {\\r\\n    alert('You clicked the Chip.');\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        label='Basic Chip'\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Clickable Chip'\\r\\n        onClick={handleClick}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        size='small'\\r\\n        avatar={<Avatar alt='Natacha' src={'/assets/images/avatar/A19.jpg'} />}\\r\\n        label='Deletable Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Clickable Deletable Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        label='Custom delete icon Chip'\\r\\n        onClick={handleClick}\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        label='Clickable Link Chip'\\r\\n        className={classes.chip}\\r\\n        component='a'\\r\\n        href='#chip'\\r\\n        clickable\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        avatar={<Avatar>MB</Avatar>}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Primary Clickable Chip'\\r\\n        clickable\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n        onDelete={handleDelete}\\r\\n        deleteIcon={<DoneIcon />}\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        label='Deletable Primary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='primary'\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        avatar={\\r\\n          <Avatar>\\r\\n            <FaceIcon />\\r\\n          </Avatar>\\r\\n        }\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n      <Chip\\r\\n        variant='outlined'\\r\\n        size='small'\\r\\n        icon={<FaceIcon />}\\r\\n        label='Deletable Secondary Chip'\\r\\n        onDelete={handleDelete}\\r\\n        className={classes.chip}\\r\\n        color='secondary'\\r\\n      />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}