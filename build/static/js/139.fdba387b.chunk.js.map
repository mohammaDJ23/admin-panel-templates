{"version":3,"sources":["modules/thirdParty/googleMap/EventHandler/Components/EventHandler.js","modules/thirdParty/googleMap/EventHandler/index.js","webpack:///./src/modules/thirdParty/googleMap/EventHandler/Components/EventHandler.js?76bd"],"names":["google","window","GettingPropertiesExampleGoogleMap","withGoogleMap","props","ref","onMapMounted","onZoomChanged","defaultCenter","center","zoom","defaultPosition","content","EventHandler","state","handleMapMounted","bind","handleZoomChanged","map","this","_map","nextZoom","getZoom","setState","containerElement","className","mapElement","maps","LatLng","Component","EventHandlerEx","ComponentHeader","title","refUrl","GridContainer","Grid","item","xs","ComponentCard","component","source"],"mappings":"yNAGMA,EAASC,OAAOD,OAEhBE,EAAoCC,yBAAc,SAACC,GAAD,OACtD,kBAAC,YAAD,CACEC,IAAKD,EAAME,aACXC,cAAeH,EAAMG,cACrBC,cAAeJ,EAAMK,OACrBC,KAAMN,EAAMM,MACZ,kBAAC,aAAD,CAAYC,gBAAiBP,EAAMK,QACjC,6BAAML,EAAMQ,cAUGC,E,4MACnBC,MAAQ,CACNJ,KAAM,GACNE,QAAQ,yB,EAGVG,iBAAmB,EAAKA,iBAAiBC,KAAtB,gB,EACnBC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gB,+DAEHE,GACfC,KAAKC,KAAOF,I,0CAIZ,IAAMG,EAAWF,KAAKC,KAAKE,UACvBD,IAAaF,KAAKL,MAAMJ,MAG1BS,KAAKI,SAAS,CACZb,KAAMW,EACNT,QAAQ,SAAD,OAAWS,O,+BAMtB,OACE,kBAACnB,EAAD,CACEsB,iBACE,yBAAKC,UAAU,kDAEjBC,WAAY,yBAAKD,UAAU,6BAC3BnB,aAAca,KAAKJ,iBACnBR,cAAeY,KAAKF,kBACpBR,OAAQ,IAAIT,EAAO2B,KAAKC,OAAO,WAAY,YAC3ClB,KAAMS,KAAKL,MAAMJ,KACjBE,QAASO,KAAKL,MAAMF,c,GApCciB,aCU3BC,UArBQ,WACrB,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,MAAM,2BACNC,OAAO,uEAGT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CACEN,MAAM,oBACNO,UAAW1B,EACX2B,OCxBG","file":"static/js/139.fdba387b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {GoogleMap, InfoWindow, withGoogleMap} from 'react-google-maps';\r\n\r\nconst google = window.google;\r\n\r\nconst GettingPropertiesExampleGoogleMap = withGoogleMap((props) => (\r\n  <GoogleMap\r\n    ref={props.onMapMounted}\r\n    onZoomChanged={props.onZoomChanged}\r\n    defaultCenter={props.center}\r\n    zoom={props.zoom}>\r\n    <InfoWindow defaultPosition={props.center}>\r\n      <div>{props.content}</div>\r\n    </InfoWindow>\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\r\n *\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nexport default class EventHandler extends Component {\r\n  state = {\r\n    zoom: 15,\r\n    content: `Change the zoom level`,\r\n  };\r\n\r\n  handleMapMounted = this.handleMapMounted.bind(this);\r\n  handleZoomChanged = this.handleZoomChanged.bind(this);\r\n\r\n  handleMapMounted(map) {\r\n    this._map = map;\r\n  }\r\n\r\n  handleZoomChanged() {\r\n    const nextZoom = this._map.getZoom();\r\n    if (nextZoom !== this.state.zoom) {\r\n      // Notice: Check zoom equality here,\r\n      // or it will fire zoom_changed event infinitely\r\n      this.setState({\r\n        zoom: nextZoom,\r\n        content: `Zoom: ${nextZoom}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GettingPropertiesExampleGoogleMap\r\n        containerElement={\r\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\r\n        }\r\n        mapElement={<div className='cr-embed-responsive-item' />}\r\n        onMapMounted={this.handleMapMounted}\r\n        onZoomChanged={this.handleZoomChanged}\r\n        center={new google.maps.LatLng(47.646935, -122.303763)}\r\n        zoom={this.state.zoom}\r\n        content={this.state.content}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nimport EventHandler from './Components/EventHandler';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport EventHandlerSource from '!raw-loader!./Components/EventHandler';\r\n\r\nconst EventHandlerEx = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Event Handler Google Map'\r\n        refUrl='http://google-map-react.github.io/google-map-react/map/balderdash/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Event Handler Map'\r\n            component={EventHandler}\r\n            source={EventHandlerSource}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventHandlerEx;\r\n","export default \"import React, {Component} from 'react';\\r\\nimport {GoogleMap, InfoWindow, withGoogleMap} from 'react-google-maps';\\r\\n\\r\\nconst google = window.google;\\r\\n\\r\\nconst GettingPropertiesExampleGoogleMap = withGoogleMap((props) => (\\r\\n  <GoogleMap\\r\\n    ref={props.onMapMounted}\\r\\n    onZoomChanged={props.onZoomChanged}\\r\\n    defaultCenter={props.center}\\r\\n    zoom={props.zoom}>\\r\\n    <InfoWindow defaultPosition={props.center}>\\r\\n      <div>{props.content}</div>\\r\\n    </InfoWindow>\\r\\n  </GoogleMap>\\r\\n));\\r\\n\\r\\n/*\\r\\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\\r\\n *\\r\\n * Add <script src=\\\"https://maps.googleapis.com/maps/api/js\\\"></script> to your HTML to provide google.maps reference\\r\\n */\\r\\nexport default class EventHandler extends Component {\\r\\n  state = {\\r\\n    zoom: 15,\\r\\n    content: `Change the zoom level`,\\r\\n  };\\r\\n\\r\\n  handleMapMounted = this.handleMapMounted.bind(this);\\r\\n  handleZoomChanged = this.handleZoomChanged.bind(this);\\r\\n\\r\\n  handleMapMounted(map) {\\r\\n    this._map = map;\\r\\n  }\\r\\n\\r\\n  handleZoomChanged() {\\r\\n    const nextZoom = this._map.getZoom();\\r\\n    if (nextZoom !== this.state.zoom) {\\r\\n      // Notice: Check zoom equality here,\\r\\n      // or it will fire zoom_changed event infinitely\\r\\n      this.setState({\\r\\n        zoom: nextZoom,\\r\\n        content: `Zoom: ${nextZoom}`,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <GettingPropertiesExampleGoogleMap\\r\\n        containerElement={\\r\\n          <div className='cr-embed-responsive cr-embed-responsive-21by9' />\\r\\n        }\\r\\n        mapElement={<div className='cr-embed-responsive-item' />}\\r\\n        onMapMounted={this.handleMapMounted}\\r\\n        onZoomChanged={this.handleZoomChanged}\\r\\n        center={new google.maps.LatLng(47.646935, -122.303763)}\\r\\n        zoom={this.state.zoom}\\r\\n        content={this.state.content}\\r\\n      />\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\";"],"sourceRoot":""}