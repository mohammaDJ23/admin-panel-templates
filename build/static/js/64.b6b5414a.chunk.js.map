{"version":3,"sources":["../node_modules/classnames/index.js","../node_modules/@material-ui/core/styles/withStyles.js","../node_modules/@material-ui/icons/Mail.js","../node_modules/@material-ui/icons/MoveToInbox.js","../node_modules/@material-ui/icons/ChevronRight.js","../node_modules/@material-ui/core/utils/capitalize.js","../node_modules/@material-ui/core/SvgIcon/SvgIcon.js","../node_modules/@material-ui/icons/ChevronLeft.js","modules/muiComponents/navigation/Drawers/TemporaryDrawer.js","webpack:///./src/modules/muiComponents/navigation/Drawers/TemporaryDrawer.js?d0e3","modules/muiComponents/navigation/Drawers/SwipeableTemporaryDrawer.js","webpack:///./src/modules/muiComponents/navigation/Drawers/SwipeableTemporaryDrawer.js?ad12","modules/muiComponents/navigation/Drawers/ResponsiveDrawer.js","modules/muiComponents/navigation/Drawers/PersistentDrawer.js","webpack:///./src/modules/muiComponents/navigation/Drawers/PersistentDrawer.js?9ecb","modules/muiComponents/navigation/Drawers/PersistentDrawerRight.js","webpack:///./src/modules/muiComponents/navigation/Drawers/PersistentDrawerRight.js?3b66","modules/muiComponents/navigation/Drawers/MiniDrawer.js","webpack:///./src/modules/muiComponents/navigation/Drawers/MiniDrawer.js?c3fe","modules/muiComponents/navigation/Drawers/PermanentDrawer.js","webpack:///./src/modules/muiComponents/navigation/Drawers/PermanentDrawer.js?ac7f","modules/muiComponents/navigation/Drawers/FullHeightNavigationRight.js","webpack:///./src/modules/muiComponents/navigation/Drawers/FullHeightNavigationRight.js?f437","modules/muiComponents/navigation/Drawers/ClippedUnderAappbar.js","modules/muiComponents/navigation/Drawers/index.js","webpack:///./src/modules/muiComponents/navigation/Drawers/ResponsiveDrawer.js?579a","webpack:///./src/modules/muiComponents/navigation/Drawers/ClippedUnderAappbar.js?3c31"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","_interopRequireDefault","require","Object","defineProperty","value","_extends2","_styles","_defaultTheme","_default","stylesOrCreator","options","withStyles","defaultTheme","_react","createElement","d","string","Error","_utils","formatMuiErrorMessage","charAt","toUpperCase","slice","_interopRequireWildcard","styles","_objectWithoutProperties2","React","_clsx","_withStyles","_capitalize","theme","root","userSelect","width","height","display","fill","flexShrink","fontSize","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","color","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","SvgIcon","forwardRef","props","ref","children","className","_props$color","_props$component","component","Component","_props$fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","other","concat","focusable","undefined","role","muiName","name","useStyles","makeStyles","list","fullList","TemporaryDrawer","useState","top","left","bottom","right","state","setState","toggleDrawer","side","open","event","type","sideList","onClick","onKeyDown","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","Divider","Button","Drawer","onClose","anchor","SwipeableTemporaryDrawer","SwipeableDrawer","onOpen","ResponsiveDrawer","mobileOpen","handleDrawerToggle","this","drawer","toolbar","appFrame","AppBar","appBar","Toolbar","IconButton","aria-label","navIconHide","Typography","variant","noWrap","Hidden","mdUp","direction","paper","drawerPaper","ModalProps","keepMounted","smDown","implementation","content","gutterBottom","marginTop","spacing","zIndex","overflow","position","backgroundColor","marginLeft","breakpoints","up","drawerHeader","mixins","background","padding","withTheme","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","alignItems","justifyContent","flexGrow","contentShift","PersistentDrawerLeft","useTheme","setOpen","CssBaseline","clsx","edge","paragraph","title","PersistentDrawerRight","whiteSpace","drawerOpen","drawerClose","overflowX","MiniDrawer","Box","PermanentDrawerLeft","PermanentDrawerRight","ClippedDrawer","Drawers","ComponentHeader","description","refUrl","GridContainer","Grid","item","xs","lg","ComponentCard","source","PersistentDrawer","PermanentDrawer","FullHeightNavigationRight","ClippedUnderAappbar"],"mappings":"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","file":"static/js/64.b6b5414a.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _styles = require(\"@material-ui/styles\");\n\nvar _defaultTheme = _interopRequireDefault(require(\"./defaultTheme\"));\n\nfunction withStyles(stylesOrCreator, options) {\n  return (0, _styles.withStyles)(stylesOrCreator, (0, _extends2.default)({\n    defaultTheme: _defaultTheme.default\n  }, options));\n}\n\nvar _default = withStyles;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Mail');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 3H4.99c-1.11 0-1.98.9-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10zm-3-5h-2V7h-4v3H8l4 4 4-4z\"\n}), 'MoveToInbox');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = capitalize;\n\nvar _utils = require(\"@material-ui/utils\");\n\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nfunction capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: capitalize(string) expects a string argument.\" : (0, _utils.formatMuiErrorMessage)(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _capitalize = _interopRequireDefault(require(\"../utils/capitalize\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\n\nexports.styles = styles;\nvar SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n  return /*#__PURE__*/React.createElement(Component, (0, _extends2.default)({\n    className: (0, _clsx.default)(classes.root, className, color !== 'inherit' && classes[\"color\".concat((0, _capitalize.default)(color))], fontSize !== 'default' && classes[\"fontSize\".concat((0, _capitalize.default)(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: _propTypes.default.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: _propTypes.default.oneOf(['default', 'inherit', 'large', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: _propTypes.default.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: _propTypes.default.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: _propTypes.default.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: _propTypes.default.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}), 'ChevronLeft');\n\nexports.default = _default;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => (event) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({...state, [side]: open});\r\n  };\r\n\r\n  const sideList = (side) => (\r\n    <div\r\n      className={classes.list}\r\n      role='presentation'\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}>\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList = (side) => (\r\n    <div\r\n      className={classes.fullList}\r\n      role='presentation'\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}>\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\r\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\r\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\r\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\r\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n        {sideList('left')}\r\n      </Drawer>\r\n      <Drawer\r\n        anchor='top'\r\n        open={state.top}\r\n        onClose={toggleDrawer('top', false)}>\r\n        {fullList('top')}\r\n      </Drawer>\r\n      <Drawer\r\n        anchor='bottom'\r\n        open={state.bottom}\r\n        onClose={toggleDrawer('bottom', false)}>\r\n        {fullList('bottom')}\r\n      </Drawer>\r\n      <Drawer\r\n        anchor='right'\r\n        open={state.right}\r\n        onClose={toggleDrawer('right', false)}>\r\n        {sideList('right')}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Drawer from '@material-ui/core/Drawer';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\r\\nimport MailIcon from '@material-ui/icons/Mail';\\r\\n\\r\\nconst useStyles = makeStyles({\\r\\n  list: {\\r\\n    width: 250,\\r\\n  },\\r\\n  fullList: {\\r\\n    width: 'auto',\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function TemporaryDrawer() {\\r\\n  const classes = useStyles();\\r\\n  const [state, setState] = React.useState({\\r\\n    top: false,\\r\\n    left: false,\\r\\n    bottom: false,\\r\\n    right: false,\\r\\n  });\\r\\n\\r\\n  const toggleDrawer = (side, open) => (event) => {\\r\\n    if (\\r\\n      event.type === 'keydown' &&\\r\\n      (event.key === 'Tab' || event.key === 'Shift')\\r\\n    ) {\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    setState({...state, [side]: open});\\r\\n  };\\r\\n\\r\\n  const sideList = (side) => (\\r\\n    <div\\r\\n      className={classes.list}\\r\\n      role='presentation'\\r\\n      onClick={toggleDrawer(side, false)}\\r\\n      onKeyDown={toggleDrawer(side, false)}>\\r\\n      <List>\\r\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\r\\n          <ListItem button key={text}>\\r\\n            <ListItemIcon>\\r\\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n            </ListItemIcon>\\r\\n            <ListItemText primary={text} />\\r\\n          </ListItem>\\r\\n        ))}\\r\\n      </List>\\r\\n      <Divider />\\r\\n      <List>\\r\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\r\\n          <ListItem button key={text}>\\r\\n            <ListItemIcon>\\r\\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n            </ListItemIcon>\\r\\n            <ListItemText primary={text} />\\r\\n          </ListItem>\\r\\n        ))}\\r\\n      </List>\\r\\n    </div>\\r\\n  );\\r\\n\\r\\n  const fullList = (side) => (\\r\\n    <div\\r\\n      className={classes.fullList}\\r\\n      role='presentation'\\r\\n      onClick={toggleDrawer(side, false)}\\r\\n      onKeyDown={toggleDrawer(side, false)}>\\r\\n      <List>\\r\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\r\\n          <ListItem button key={text}>\\r\\n            <ListItemIcon>\\r\\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n            </ListItemIcon>\\r\\n            <ListItemText primary={text} />\\r\\n          </ListItem>\\r\\n        ))}\\r\\n      </List>\\r\\n      <Divider />\\r\\n      <List>\\r\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\r\\n          <ListItem button key={text}>\\r\\n            <ListItemIcon>\\r\\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n            </ListItemIcon>\\r\\n            <ListItemText primary={text} />\\r\\n          </ListItem>\\r\\n        ))}\\r\\n      </List>\\r\\n    </div>\\r\\n  );\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\\r\\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\\r\\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\\r\\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\\r\\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\\r\\n        {sideList('left')}\\r\\n      </Drawer>\\r\\n      <Drawer\\r\\n        anchor='top'\\r\\n        open={state.top}\\r\\n        onClose={toggleDrawer('top', false)}>\\r\\n        {fullList('top')}\\r\\n      </Drawer>\\r\\n      <Drawer\\r\\n        anchor='bottom'\\r\\n        open={state.bottom}\\r\\n        onClose={toggleDrawer('bottom', false)}>\\r\\n        {fullList('bottom')}\\r\\n      </Drawer>\\r\\n      <Drawer\\r\\n        anchor='right'\\r\\n        open={state.right}\\r\\n        onClose={toggleDrawer('right', false)}>\\r\\n        {sideList('right')}\\r\\n      </Drawer>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({...state, [side]: open});\r\n  };\r\n\r\n  const sideList = (side) => (\r\n    <div\r\n      className={classes.list}\r\n      role='presentation'\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}>\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList = (side) => (\r\n    <div\r\n      className={classes.fullList}\r\n      role='presentation'\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}>\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\r\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\r\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\r\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\r\n      <SwipeableDrawer\r\n        open={state.left}\r\n        onClose={toggleDrawer('left', false)}\r\n        onOpen={toggleDrawer('left', true)}>\r\n        {sideList('left')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor='top'\r\n        open={state.top}\r\n        onClose={toggleDrawer('top', false)}\r\n        onOpen={toggleDrawer('top', true)}>\r\n        {fullList('top')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor='bottom'\r\n        open={state.bottom}\r\n        onClose={toggleDrawer('bottom', false)}\r\n        onOpen={toggleDrawer('bottom', true)}>\r\n        {fullList('bottom')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor='right'\r\n        open={state.right}\r\n        onClose={toggleDrawer('right', false)}\r\n        onOpen={toggleDrawer('right', true)}>\r\n        {sideList('right')}\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\\r\\nimport Button from '@material-ui/core/Button';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\r\\nimport MailIcon from '@material-ui/icons/Mail';\\r\\n\\r\\nconst useStyles = makeStyles({\\r\\n  list: {\\r\\n    width: 250,\\r\\n  },\\r\\n  fullList: {\\r\\n    width: 'auto',\\r\\n  },\\r\\n});\\r\\n\\r\\nexport default function SwipeableTemporaryDrawer() {\\r\\n  const classes = useStyles();\\r\\n  const [state, setState] = React.useState({\\r\\n    top: false,\\r\\n    left: false,\\r\\n    bottom: false,\\r\\n    right: false,\\r\\n  });\\r\\n\\r\\n  const toggleDrawer = (side, open) => (event) => {\\r\\n    if (\\r\\n      event &&\\r\\n      event.type === 'keydown' &&\\r\\n      (event.key === 'Tab' || event.key === 'Shift')\\r\\n    ) {\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    setState({...state, [side]: open});\\r\\n  };\\r\\n\\r\\n  const sideList = (side) => (\\r\\n    <div\\r\\n      className={classes.list}\\r\\n      role='presentation'\\r\\n      onClick={toggleDrawer(side, false)}\\r\\n      onKeyDown={toggleDrawer(side, false)}>\\r\\n      <List>\\r\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\r\\n          <ListItem button key={text}>\\r\\n            <ListItemIcon>\\r\\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n            </ListItemIcon>\\r\\n            <ListItemText primary={text} />\\r\\n          </ListItem>\\r\\n        ))}\\r\\n      </List>\\r\\n      <Divider />\\r\\n      <List>\\r\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\r\\n          <ListItem button key={text}>\\r\\n            <ListItemIcon>\\r\\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n            </ListItemIcon>\\r\\n            <ListItemText primary={text} />\\r\\n          </ListItem>\\r\\n        ))}\\r\\n      </List>\\r\\n    </div>\\r\\n  );\\r\\n\\r\\n  const fullList = (side) => (\\r\\n    <div\\r\\n      className={classes.fullList}\\r\\n      role='presentation'\\r\\n      onClick={toggleDrawer(side, false)}\\r\\n      onKeyDown={toggleDrawer(side, false)}>\\r\\n      <List>\\r\\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\r\\n          <ListItem button key={text}>\\r\\n            <ListItemIcon>\\r\\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n            </ListItemIcon>\\r\\n            <ListItemText primary={text} />\\r\\n          </ListItem>\\r\\n        ))}\\r\\n      </List>\\r\\n      <Divider />\\r\\n      <List>\\r\\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\\r\\n          <ListItem button key={text}>\\r\\n            <ListItemIcon>\\r\\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n            </ListItemIcon>\\r\\n            <ListItemText primary={text} />\\r\\n          </ListItem>\\r\\n        ))}\\r\\n      </List>\\r\\n    </div>\\r\\n  );\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\\r\\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\\r\\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\\r\\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\\r\\n      <SwipeableDrawer\\r\\n        open={state.left}\\r\\n        onClose={toggleDrawer('left', false)}\\r\\n        onOpen={toggleDrawer('left', true)}>\\r\\n        {sideList('left')}\\r\\n      </SwipeableDrawer>\\r\\n      <SwipeableDrawer\\r\\n        anchor='top'\\r\\n        open={state.top}\\r\\n        onClose={toggleDrawer('top', false)}\\r\\n        onOpen={toggleDrawer('top', true)}>\\r\\n        {fullList('top')}\\r\\n      </SwipeableDrawer>\\r\\n      <SwipeableDrawer\\r\\n        anchor='bottom'\\r\\n        open={state.bottom}\\r\\n        onClose={toggleDrawer('bottom', false)}\\r\\n        onOpen={toggleDrawer('bottom', true)}>\\r\\n        {fullList('bottom')}\\r\\n      </SwipeableDrawer>\\r\\n      <SwipeableDrawer\\r\\n        anchor='right'\\r\\n        open={state.right}\\r\\n        onClose={toggleDrawer('right', false)}\\r\\n        onOpen={toggleDrawer('right', true)}>\\r\\n        {sideList('right')}\\r\\n      </SwipeableDrawer>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport classNames from 'classnames';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport InboxIcon from '@material-ui/core/SvgIcon/SvgIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: 430,\r\n    marginTop: theme.spacing(3),\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n  },\r\n  appFrame: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  appBar: {\r\n    position: 'absolute',\r\n    backgroundColor: theme.palette.primary.main,\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  navIconHide: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  drawerHeader: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: 250,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: drawerWidth,\r\n      position: 'relative',\r\n      height: '100%',\r\n    },\r\n  },\r\n  content: {\r\n    backgroundColor: theme.palette.background.default,\r\n    width: '100%',\r\n    padding: theme.spacing(3),\r\n    height: 'calc(100% - 56px)',\r\n    marginTop: 56,\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 'calc(100% - 64px)',\r\n      marginTop: 64,\r\n    },\r\n  },\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState({mobileOpen: !this.state.mobileOpen});\r\n  };\r\n\r\n  render() {\r\n    const {classes, theme} = this.props;\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.appFrame}>\r\n          <AppBar className={classNames(classes.appBar)}>\r\n            <Toolbar>\r\n              <IconButton\r\n                aria-label='open drawer'\r\n                onClick={this.handleDrawerToggle}\r\n                className={classes.navIconHide}>\r\n                <MenuIcon className='text-white' />\r\n              </IconButton>\r\n              <Typography\r\n                variant='h6'\r\n                color='inherit'\r\n                noWrap\r\n                className='text-white'>\r\n                Responsive drawer\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Hidden mdUp>\r\n            <Drawer\r\n              variant='temporary'\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              onClose={this.handleDrawerToggle}\r\n              ModalProps={{\r\n                keepMounted: true, // Better open performance on mobile.\r\n              }}>\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden smDown implementation='css'>\r\n            <Drawer\r\n              variant='permanent'\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}>\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <main className={classes.content}>\r\n            <Typography gutterBottom noWrap>\r\n              {'You think water moves fast? You should see ice.'}\r\n            </Typography>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, {withTheme: true})(ResponsiveDrawer);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n  },\r\n  appFrame: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  appBar: {\r\n    position: 'absolute',\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    height: '100%',\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    width: '100%',\r\n    marginLeft: -drawerWidth,\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginTop: 56,\r\n    [theme.breakpoints.up('sm')]: {\r\n      content: {\r\n        height: 'calc(100% - 64px)',\r\n        marginTop: 64,\r\n      },\r\n    },\r\n  },\r\n  contentShift: {\r\n    marginLeft: 0,\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleDrawerOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleDrawerClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.appFrame}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position='fixed'\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color='inherit'\r\n              aria-label='open drawer'\r\n              onClick={handleDrawerOpen}\r\n              edge='start'\r\n              className={clsx(classes.menuButton, open && classes.hide)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant='h6' noWrap>\r\n              Persistent drawer\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='persistent'\r\n          anchor='left'\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}>\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'ltr' ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        <main\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}>\r\n          <div className={classes.drawerHeader} />\r\n          <Typography paragraph>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\r\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\r\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\r\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\r\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\r\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\r\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\r\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\r\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\r\n            vivamus at augue. At augue eget arcu dictum varius duis at\r\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\r\n            donec massa sapien faucibus et molestie ac.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\r\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\r\n            elementum integer enim neque volutpat ac tincidunt. Ornare\r\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\r\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\r\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\r\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\r\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\r\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\r\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\r\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\r\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\r\n            ultrices sagittis orci a.\r\n          </Typography>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport clsx from 'clsx';\\r\\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\\r\\nimport Drawer from '@material-ui/core/Drawer';\\r\\nimport CssBaseline from '@material-ui/core/CssBaseline';\\r\\nimport AppBar from '@material-ui/core/AppBar';\\r\\nimport Toolbar from '@material-ui/core/Toolbar';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport MenuIcon from '@material-ui/icons/Menu';\\r\\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\\r\\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\r\\nimport MailIcon from '@material-ui/icons/Mail';\\r\\n\\r\\nconst drawerWidth = 240;\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n    zIndex: 1,\\r\\n    overflow: 'hidden',\\r\\n  },\\r\\n  appFrame: {\\r\\n    position: 'relative',\\r\\n    display: 'flex',\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n  },\\r\\n  appBar: {\\r\\n    position: 'absolute',\\r\\n    transition: theme.transitions.create(['margin', 'width'], {\\r\\n      easing: theme.transitions.easing.sharp,\\r\\n      duration: theme.transitions.duration.leavingScreen,\\r\\n    }),\\r\\n  },\\r\\n  appBarShift: {\\r\\n    marginLeft: drawerWidth,\\r\\n    width: `calc(100% - ${drawerWidth}px)`,\\r\\n    transition: theme.transitions.create(['margin', 'width'], {\\r\\n      easing: theme.transitions.easing.easeOut,\\r\\n      duration: theme.transitions.duration.enteringScreen,\\r\\n    }),\\r\\n  },\\r\\n  menuButton: {\\r\\n    marginLeft: 12,\\r\\n    marginRight: 20,\\r\\n  },\\r\\n  hide: {\\r\\n    display: 'none',\\r\\n  },\\r\\n  drawerPaper: {\\r\\n    position: 'relative',\\r\\n    height: '100%',\\r\\n    width: drawerWidth,\\r\\n  },\\r\\n  drawerHeader: {\\r\\n    display: 'flex',\\r\\n    alignItems: 'center',\\r\\n    justifyContent: 'flex-end',\\r\\n    padding: '0 8px',\\r\\n    ...theme.mixins.toolbar,\\r\\n  },\\r\\n  content: {\\r\\n    width: '100%',\\r\\n    marginLeft: -drawerWidth,\\r\\n    flexGrow: 1,\\r\\n    padding: theme.spacing(3),\\r\\n    transition: theme.transitions.create('margin', {\\r\\n      easing: theme.transitions.easing.sharp,\\r\\n      duration: theme.transitions.duration.leavingScreen,\\r\\n    }),\\r\\n    marginTop: 56,\\r\\n    [theme.breakpoints.up('sm')]: {\\r\\n      content: {\\r\\n        height: 'calc(100% - 64px)',\\r\\n        marginTop: 64,\\r\\n      },\\r\\n    },\\r\\n  },\\r\\n  contentShift: {\\r\\n    marginLeft: 0,\\r\\n    transition: theme.transitions.create('margin', {\\r\\n      easing: theme.transitions.easing.easeOut,\\r\\n      duration: theme.transitions.duration.enteringScreen,\\r\\n    }),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function PersistentDrawerLeft() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  function handleDrawerOpen() {\\r\\n    setOpen(true);\\r\\n  }\\r\\n\\r\\n  function handleDrawerClose() {\\r\\n    setOpen(false);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <div className={classes.appFrame}>\\r\\n        <CssBaseline />\\r\\n        <AppBar\\r\\n          position='fixed'\\r\\n          className={clsx(classes.appBar, {\\r\\n            [classes.appBarShift]: open,\\r\\n          })}>\\r\\n          <Toolbar>\\r\\n            <IconButton\\r\\n              color='inherit'\\r\\n              aria-label='open drawer'\\r\\n              onClick={handleDrawerOpen}\\r\\n              edge='start'\\r\\n              className={clsx(classes.menuButton, open && classes.hide)}>\\r\\n              <MenuIcon />\\r\\n            </IconButton>\\r\\n            <Typography variant='h6' noWrap>\\r\\n              Persistent drawer\\r\\n            </Typography>\\r\\n          </Toolbar>\\r\\n        </AppBar>\\r\\n        <Drawer\\r\\n          className={classes.drawer}\\r\\n          variant='persistent'\\r\\n          anchor='left'\\r\\n          open={open}\\r\\n          classes={{\\r\\n            paper: classes.drawerPaper,\\r\\n          }}>\\r\\n          <div className={classes.drawerHeader}>\\r\\n            <IconButton onClick={handleDrawerClose}>\\r\\n              {theme.direction === 'ltr' ? (\\r\\n                <ChevronLeftIcon />\\r\\n              ) : (\\r\\n                <ChevronRightIcon />\\r\\n              )}\\r\\n            </IconButton>\\r\\n          </div>\\r\\n          <Divider />\\r\\n          <List>\\r\\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n          <Divider />\\r\\n          <List>\\r\\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n        </Drawer>\\r\\n        <main\\r\\n          className={clsx(classes.content, {\\r\\n            [classes.contentShift]: open,\\r\\n          })}>\\r\\n          <div className={classes.drawerHeader} />\\r\\n          <Typography paragraph>\\r\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\r\\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\\r\\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\\r\\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\\r\\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\\r\\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\\r\\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\\r\\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\\r\\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\\r\\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\\r\\n            vivamus at augue. At augue eget arcu dictum varius duis at\\r\\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\\r\\n            donec massa sapien faucibus et molestie ac.\\r\\n          </Typography>\\r\\n          <Typography paragraph>\\r\\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\\r\\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\\r\\n            elementum integer enim neque volutpat ac tincidunt. Ornare\\r\\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\\r\\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\\r\\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\\r\\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\\r\\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\\r\\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\\r\\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\\r\\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\\r\\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\\r\\n            ultrices sagittis orci a.\\r\\n          </Typography>\\r\\n        </main>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n  },\r\n  appFrame: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  appBar: {\r\n    position: 'absolute',\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: drawerWidth,\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    height: '100%',\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: 0,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerRight() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleDrawerOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleDrawerClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.appFrame}>\r\n        <AppBar\r\n          position='fixed'\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}>\r\n          <Toolbar>\r\n            <Typography variant='h6' noWrap className={classes.title}>\r\n              Persistent drawer\r\n            </Typography>\r\n            <IconButton\r\n              color='inherit'\r\n              aria-label='open drawer'\r\n              edge='end'\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(open && classes.hide)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}>\r\n          <div className={classes.drawerHeader} />\r\n          <Typography paragraph>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\r\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\r\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\r\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\r\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\r\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\r\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\r\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\r\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\r\n            vivamus at augue. At augue eget arcu dictum varius duis at\r\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\r\n            donec massa sapien faucibus et molestie ac.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\r\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\r\n            elementum integer enim neque volutpat ac tincidunt. Ornare\r\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\r\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\r\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\r\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\r\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\r\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\r\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\r\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\r\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\r\n            ultrices sagittis orci a.\r\n          </Typography>\r\n        </main>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='persistent'\r\n          anchor='right'\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}>\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport clsx from 'clsx';\\r\\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\\r\\nimport Drawer from '@material-ui/core/Drawer';\\r\\nimport AppBar from '@material-ui/core/AppBar';\\r\\nimport Toolbar from '@material-ui/core/Toolbar';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport MenuIcon from '@material-ui/icons/Menu';\\r\\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\\r\\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\r\\nimport MailIcon from '@material-ui/icons/Mail';\\r\\n\\r\\nconst drawerWidth = 240;\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n    zIndex: 1,\\r\\n    overflow: 'hidden',\\r\\n  },\\r\\n  appFrame: {\\r\\n    position: 'relative',\\r\\n    display: 'flex',\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n  },\\r\\n  appBar: {\\r\\n    position: 'absolute',\\r\\n    transition: theme.transitions.create(['margin', 'width'], {\\r\\n      easing: theme.transitions.easing.sharp,\\r\\n      duration: theme.transitions.duration.leavingScreen,\\r\\n    }),\\r\\n  },\\r\\n  appBarShift: {\\r\\n    width: `calc(100% - ${drawerWidth}px)`,\\r\\n    transition: theme.transitions.create(['margin', 'width'], {\\r\\n      easing: theme.transitions.easing.easeOut,\\r\\n      duration: theme.transitions.duration.enteringScreen,\\r\\n    }),\\r\\n    marginRight: drawerWidth,\\r\\n  },\\r\\n  menuButton: {\\r\\n    marginLeft: 12,\\r\\n    marginRight: 20,\\r\\n  },\\r\\n  title: {\\r\\n    flexGrow: 1,\\r\\n  },\\r\\n  hide: {\\r\\n    display: 'none',\\r\\n  },\\r\\n  drawerPaper: {\\r\\n    position: 'relative',\\r\\n    height: '100%',\\r\\n    width: drawerWidth,\\r\\n  },\\r\\n  drawerHeader: {\\r\\n    display: 'flex',\\r\\n    alignItems: 'center',\\r\\n    padding: theme.spacing(0, 1),\\r\\n    ...theme.mixins.toolbar,\\r\\n    justifyContent: 'flex-start',\\r\\n  },\\r\\n  content: {\\r\\n    flexGrow: 1,\\r\\n    padding: theme.spacing(3),\\r\\n    transition: theme.transitions.create('margin', {\\r\\n      easing: theme.transitions.easing.sharp,\\r\\n      duration: theme.transitions.duration.leavingScreen,\\r\\n    }),\\r\\n    marginRight: -drawerWidth,\\r\\n  },\\r\\n  contentShift: {\\r\\n    transition: theme.transitions.create('margin', {\\r\\n      easing: theme.transitions.easing.easeOut,\\r\\n      duration: theme.transitions.duration.enteringScreen,\\r\\n    }),\\r\\n    marginRight: 0,\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function PersistentDrawerRight() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  function handleDrawerOpen() {\\r\\n    setOpen(true);\\r\\n  }\\r\\n\\r\\n  function handleDrawerClose() {\\r\\n    setOpen(false);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <div className={classes.appFrame}>\\r\\n        <AppBar\\r\\n          position='fixed'\\r\\n          className={clsx(classes.appBar, {\\r\\n            [classes.appBarShift]: open,\\r\\n          })}>\\r\\n          <Toolbar>\\r\\n            <Typography variant='h6' noWrap className={classes.title}>\\r\\n              Persistent drawer\\r\\n            </Typography>\\r\\n            <IconButton\\r\\n              color='inherit'\\r\\n              aria-label='open drawer'\\r\\n              edge='end'\\r\\n              onClick={handleDrawerOpen}\\r\\n              className={clsx(open && classes.hide)}>\\r\\n              <MenuIcon />\\r\\n            </IconButton>\\r\\n          </Toolbar>\\r\\n        </AppBar>\\r\\n        <main\\r\\n          className={clsx(classes.content, {\\r\\n            [classes.contentShift]: open,\\r\\n          })}>\\r\\n          <div className={classes.drawerHeader} />\\r\\n          <Typography paragraph>\\r\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\r\\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\\r\\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\\r\\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\\r\\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\\r\\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\\r\\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\\r\\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\\r\\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\\r\\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\\r\\n            vivamus at augue. At augue eget arcu dictum varius duis at\\r\\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\\r\\n            donec massa sapien faucibus et molestie ac.\\r\\n          </Typography>\\r\\n          <Typography paragraph>\\r\\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\\r\\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\\r\\n            elementum integer enim neque volutpat ac tincidunt. Ornare\\r\\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\\r\\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\\r\\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\\r\\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\\r\\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\\r\\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\\r\\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\\r\\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\\r\\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\\r\\n            ultrices sagittis orci a.\\r\\n          </Typography>\\r\\n        </main>\\r\\n        <Drawer\\r\\n          className={classes.drawer}\\r\\n          variant='persistent'\\r\\n          anchor='right'\\r\\n          open={open}\\r\\n          classes={{\\r\\n            paper: classes.drawerPaper,\\r\\n          }}>\\r\\n          <div className={classes.drawerHeader}>\\r\\n            <IconButton onClick={handleDrawerClose}>\\r\\n              {theme.direction === 'rtl' ? (\\r\\n                <ChevronLeftIcon />\\r\\n              ) : (\\r\\n                <ChevronRightIcon />\\r\\n              )}\\r\\n            </IconButton>\\r\\n          </div>\\r\\n          <Divider />\\r\\n          <List>\\r\\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n          <Divider />\\r\\n          <List>\\r\\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n        </Drawer>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n  },\r\n  appFrame: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  appBar: {\r\n    position: 'absolute',\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n\r\n  drawerOpen: {\r\n    position: 'relative',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    position: 'relative',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(15),\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleDrawerOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleDrawerClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.appFrame}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position='fixed'\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color='inherit'\r\n              aria-label='open drawer'\r\n              onClick={handleDrawerOpen}\r\n              edge='start'\r\n              className={clsx(classes.menuButton, {\r\n                [classes.hide]: open,\r\n              })}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant='h6' noWrap>\r\n              Mini variant drawer\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant='permanent'\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n          open={open}>\r\n          <Box className={classes.toolbar}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? (\r\n                <ChevronRightIcon />\r\n              ) : (\r\n                <ChevronLeftIcon />\r\n              )}\r\n            </IconButton>\r\n          </Box>\r\n          <Divider />\r\n          <List>\r\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <Box className={classes.toolbar} />\r\n          <Typography paragraph>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\r\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\r\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\r\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\r\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\r\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\r\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\r\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\r\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\r\n            vivamus at augue. At augue eget arcu dictum varius duis at\r\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\r\n            donec massa sapien faucibus et molestie ac.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\r\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\r\n            elementum integer enim neque volutpat ac tincidunt. Ornare\r\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\r\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\r\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\r\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\r\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\r\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\r\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\r\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\r\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\r\n            ultrices sagittis orci a.\r\n          </Typography>\r\n        </main>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport clsx from 'clsx';\\r\\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\\r\\nimport Drawer from '@material-ui/core/Drawer';\\r\\nimport AppBar from '@material-ui/core/AppBar';\\r\\nimport Toolbar from '@material-ui/core/Toolbar';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport CssBaseline from '@material-ui/core/CssBaseline';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport MenuIcon from '@material-ui/icons/Menu';\\r\\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\\r\\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\r\\nimport MailIcon from '@material-ui/icons/Mail';\\r\\nimport Box from '@material-ui/core/Box';\\r\\n\\r\\nconst drawerWidth = 240;\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n    zIndex: 1,\\r\\n    overflow: 'hidden',\\r\\n  },\\r\\n  appFrame: {\\r\\n    position: 'relative',\\r\\n    display: 'flex',\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n  },\\r\\n  appBar: {\\r\\n    position: 'absolute',\\r\\n    zIndex: theme.zIndex.drawer + 1,\\r\\n    transition: theme.transitions.create(['width', 'margin'], {\\r\\n      easing: theme.transitions.easing.sharp,\\r\\n      duration: theme.transitions.duration.leavingScreen,\\r\\n    }),\\r\\n  },\\r\\n  appBarShift: {\\r\\n    marginLeft: drawerWidth,\\r\\n    width: `calc(100% - ${drawerWidth}px)`,\\r\\n    transition: theme.transitions.create(['width', 'margin'], {\\r\\n      easing: theme.transitions.easing.sharp,\\r\\n      duration: theme.transitions.duration.enteringScreen,\\r\\n    }),\\r\\n  },\\r\\n  menuButton: {\\r\\n    marginRight: 36,\\r\\n  },\\r\\n  hide: {\\r\\n    display: 'none',\\r\\n  },\\r\\n  drawer: {\\r\\n    width: drawerWidth,\\r\\n    flexShrink: 0,\\r\\n    whiteSpace: 'nowrap',\\r\\n  },\\r\\n\\r\\n  drawerOpen: {\\r\\n    position: 'relative',\\r\\n    width: drawerWidth,\\r\\n    transition: theme.transitions.create('width', {\\r\\n      easing: theme.transitions.easing.sharp,\\r\\n      duration: theme.transitions.duration.enteringScreen,\\r\\n    }),\\r\\n  },\\r\\n  drawerClose: {\\r\\n    position: 'relative',\\r\\n    transition: theme.transitions.create('width', {\\r\\n      easing: theme.transitions.easing.sharp,\\r\\n      duration: theme.transitions.duration.leavingScreen,\\r\\n    }),\\r\\n    overflowX: 'hidden',\\r\\n    width: theme.spacing(15),\\r\\n  },\\r\\n  toolbar: {\\r\\n    display: 'flex',\\r\\n    alignItems: 'center',\\r\\n    justifyContent: 'flex-end',\\r\\n    padding: theme.spacing(0, 1),\\r\\n    ...theme.mixins.toolbar,\\r\\n  },\\r\\n  content: {\\r\\n    flexGrow: 1,\\r\\n    padding: theme.spacing(3),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function MiniDrawer() {\\r\\n  const classes = useStyles();\\r\\n  const theme = useTheme();\\r\\n  const [open, setOpen] = React.useState(false);\\r\\n\\r\\n  function handleDrawerOpen() {\\r\\n    setOpen(true);\\r\\n  }\\r\\n\\r\\n  function handleDrawerClose() {\\r\\n    setOpen(false);\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <Box className={classes.root}>\\r\\n      <Box className={classes.appFrame}>\\r\\n        <CssBaseline />\\r\\n        <AppBar\\r\\n          position='fixed'\\r\\n          className={clsx(classes.appBar, {\\r\\n            [classes.appBarShift]: open,\\r\\n          })}>\\r\\n          <Toolbar>\\r\\n            <IconButton\\r\\n              color='inherit'\\r\\n              aria-label='open drawer'\\r\\n              onClick={handleDrawerOpen}\\r\\n              edge='start'\\r\\n              className={clsx(classes.menuButton, {\\r\\n                [classes.hide]: open,\\r\\n              })}>\\r\\n              <MenuIcon />\\r\\n            </IconButton>\\r\\n            <Typography variant='h6' noWrap>\\r\\n              Mini variant drawer\\r\\n            </Typography>\\r\\n          </Toolbar>\\r\\n        </AppBar>\\r\\n        <Drawer\\r\\n          variant='permanent'\\r\\n          className={clsx(classes.drawer, {\\r\\n            [classes.drawerOpen]: open,\\r\\n            [classes.drawerClose]: !open,\\r\\n          })}\\r\\n          classes={{\\r\\n            paper: clsx({\\r\\n              [classes.drawerOpen]: open,\\r\\n              [classes.drawerClose]: !open,\\r\\n            }),\\r\\n          }}\\r\\n          open={open}>\\r\\n          <Box className={classes.toolbar}>\\r\\n            <IconButton onClick={handleDrawerClose}>\\r\\n              {theme.direction === 'rtl' ? (\\r\\n                <ChevronRightIcon />\\r\\n              ) : (\\r\\n                <ChevronLeftIcon />\\r\\n              )}\\r\\n            </IconButton>\\r\\n          </Box>\\r\\n          <Divider />\\r\\n          <List>\\r\\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n          <Divider />\\r\\n          <List>\\r\\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n        </Drawer>\\r\\n        <main className={classes.content}>\\r\\n          <Box className={classes.toolbar} />\\r\\n          <Typography paragraph>\\r\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\r\\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\\r\\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\\r\\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\\r\\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\\r\\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\\r\\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\\r\\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\\r\\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\\r\\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\\r\\n            vivamus at augue. At augue eget arcu dictum varius duis at\\r\\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\\r\\n            donec massa sapien faucibus et molestie ac.\\r\\n          </Typography>\\r\\n          <Typography paragraph>\\r\\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\\r\\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\\r\\n            elementum integer enim neque volutpat ac tincidunt. Ornare\\r\\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\\r\\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\\r\\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\\r\\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\\r\\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\\r\\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\\r\\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\\r\\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\\r\\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\\r\\n            ultrices sagittis orci a.\\r\\n          </Typography>\\r\\n        </main>\\r\\n      </Box>\\r\\n    </Box>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n  },\r\n  appFrame: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  appBar: {\r\n    position: 'absolute',\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    height: '100%',\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: theme.mixins.toolbar,\r\n  content: {\r\n    width: '100%',\r\n    padding: theme.spacing(3),\r\n    marginTop: 56,\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 'calc(100% - 64px)',\r\n      marginTop: 64,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PermanentDrawerLeft() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.appFrame}>\r\n        <CssBaseline />\r\n        <AppBar position='fixed' className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant='h6' noWrap>\r\n              Permanent drawer\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='permanent'\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          anchor='left'>\r\n          <div className={classes.toolbar} />\r\n          <Divider />\r\n          <List>\r\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Typography paragraph>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\r\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\r\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\r\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\r\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\r\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\r\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\r\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\r\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\r\n            vivamus at augue. At augue eget arcu dictum varius duis at\r\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\r\n            donec massa sapien faucibus et molestie ac.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\r\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\r\n            elementum integer enim neque volutpat ac tincidunt. Ornare\r\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\r\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\r\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\r\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\r\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\r\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\r\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\r\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\r\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\r\n            ultrices sagittis orci a.\r\n          </Typography>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Drawer from '@material-ui/core/Drawer';\\r\\nimport CssBaseline from '@material-ui/core/CssBaseline';\\r\\nimport AppBar from '@material-ui/core/AppBar';\\r\\nimport Toolbar from '@material-ui/core/Toolbar';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\r\\nimport MailIcon from '@material-ui/icons/Mail';\\r\\n\\r\\nconst drawerWidth = 240;\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n    zIndex: 1,\\r\\n    overflow: 'hidden',\\r\\n  },\\r\\n  appFrame: {\\r\\n    position: 'relative',\\r\\n    display: 'flex',\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n  },\\r\\n  appBar: {\\r\\n    position: 'absolute',\\r\\n    width: `calc(100% - ${drawerWidth}px)`,\\r\\n    marginLeft: drawerWidth,\\r\\n  },\\r\\n  drawerPaper: {\\r\\n    position: 'relative',\\r\\n    height: '100%',\\r\\n    width: drawerWidth,\\r\\n  },\\r\\n  drawerHeader: theme.mixins.toolbar,\\r\\n  content: {\\r\\n    width: '100%',\\r\\n    padding: theme.spacing(3),\\r\\n    marginTop: 56,\\r\\n    [theme.breakpoints.up('sm')]: {\\r\\n      height: 'calc(100% - 64px)',\\r\\n      marginTop: 64,\\r\\n    },\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function PermanentDrawerLeft() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <div className={classes.appFrame}>\\r\\n        <CssBaseline />\\r\\n        <AppBar position='fixed' className={classes.appBar}>\\r\\n          <Toolbar>\\r\\n            <Typography variant='h6' noWrap>\\r\\n              Permanent drawer\\r\\n            </Typography>\\r\\n          </Toolbar>\\r\\n        </AppBar>\\r\\n        <Drawer\\r\\n          className={classes.drawer}\\r\\n          variant='permanent'\\r\\n          classes={{\\r\\n            paper: classes.drawerPaper,\\r\\n          }}\\r\\n          anchor='left'>\\r\\n          <div className={classes.toolbar} />\\r\\n          <Divider />\\r\\n          <List>\\r\\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n          <Divider />\\r\\n          <List>\\r\\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n        </Drawer>\\r\\n        <main className={classes.content}>\\r\\n          <div className={classes.toolbar} />\\r\\n          <Typography paragraph>\\r\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\r\\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\\r\\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\\r\\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\\r\\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\\r\\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\\r\\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\\r\\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\\r\\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\\r\\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\\r\\n            vivamus at augue. At augue eget arcu dictum varius duis at\\r\\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\\r\\n            donec massa sapien faucibus et molestie ac.\\r\\n          </Typography>\\r\\n          <Typography paragraph>\\r\\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\\r\\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\\r\\n            elementum integer enim neque volutpat ac tincidunt. Ornare\\r\\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\\r\\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\\r\\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\\r\\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\\r\\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\\r\\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\\r\\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\\r\\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\\r\\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\\r\\n            ultrices sagittis orci a.\\r\\n          </Typography>\\r\\n        </main>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n  },\r\n  appFrame: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  appBar: {\r\n    position: 'absolute',\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginRight: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    width: drawerWidth,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PermanentDrawerRight() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.appFrame}>\r\n        <CssBaseline />\r\n        <AppBar position='fixed' className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant='h6' noWrap>\r\n              Permanent drawer\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Typography paragraph>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\r\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\r\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\r\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\r\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\r\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\r\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\r\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\r\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\r\n            vivamus at augue. At augue eget arcu dictum varius duis at\r\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\r\n            donec massa sapien faucibus et molestie ac.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\r\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\r\n            elementum integer enim neque volutpat ac tincidunt. Ornare\r\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\r\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\r\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\r\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\r\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\r\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\r\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\r\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\r\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\r\n            ultrices sagittis orci a.\r\n          </Typography>\r\n        </main>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='permanent'\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          anchor='right'>\r\n          <div className={classes.toolbar} />\r\n          <Divider />\r\n          <List>\r\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Drawer from '@material-ui/core/Drawer';\\r\\nimport CssBaseline from '@material-ui/core/CssBaseline';\\r\\nimport AppBar from '@material-ui/core/AppBar';\\r\\nimport Toolbar from '@material-ui/core/Toolbar';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\r\\nimport MailIcon from '@material-ui/icons/Mail';\\r\\n\\r\\nconst drawerWidth = 240;\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n    zIndex: 1,\\r\\n    overflow: 'hidden',\\r\\n  },\\r\\n  appFrame: {\\r\\n    position: 'relative',\\r\\n    display: 'flex',\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n  },\\r\\n  appBar: {\\r\\n    position: 'absolute',\\r\\n    width: `calc(100% - ${drawerWidth}px)`,\\r\\n    marginRight: drawerWidth,\\r\\n  },\\r\\n  drawer: {\\r\\n    width: drawerWidth,\\r\\n    flexShrink: 0,\\r\\n  },\\r\\n  drawerPaper: {\\r\\n    position: 'relative',\\r\\n    width: drawerWidth,\\r\\n  },\\r\\n  toolbar: theme.mixins.toolbar,\\r\\n  content: {\\r\\n    flexGrow: 1,\\r\\n    backgroundColor: theme.palette.background.default,\\r\\n    padding: theme.spacing(3),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function PermanentDrawerRight() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <div className={classes.appFrame}>\\r\\n        <CssBaseline />\\r\\n        <AppBar position='fixed' className={classes.appBar}>\\r\\n          <Toolbar>\\r\\n            <Typography variant='h6' noWrap>\\r\\n              Permanent drawer\\r\\n            </Typography>\\r\\n          </Toolbar>\\r\\n        </AppBar>\\r\\n        <main className={classes.content}>\\r\\n          <div className={classes.toolbar} />\\r\\n          <Typography paragraph>\\r\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\r\\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\\r\\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\\r\\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\\r\\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\\r\\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\\r\\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\\r\\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\\r\\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\\r\\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\\r\\n            vivamus at augue. At augue eget arcu dictum varius duis at\\r\\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\\r\\n            donec massa sapien faucibus et molestie ac.\\r\\n          </Typography>\\r\\n          <Typography paragraph>\\r\\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\\r\\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\\r\\n            elementum integer enim neque volutpat ac tincidunt. Ornare\\r\\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\\r\\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\\r\\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\\r\\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\\r\\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\\r\\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\\r\\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\\r\\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\\r\\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\\r\\n            ultrices sagittis orci a.\\r\\n          </Typography>\\r\\n        </main>\\r\\n        <Drawer\\r\\n          className={classes.drawer}\\r\\n          variant='permanent'\\r\\n          classes={{\\r\\n            paper: classes.drawerPaper,\\r\\n          }}\\r\\n          anchor='right'>\\r\\n          <div className={classes.toolbar} />\\r\\n          <Divider />\\r\\n          <List>\\r\\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n          <Divider />\\r\\n          <List>\\r\\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n        </Drawer>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n  },\r\n  appFrame: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  appBar: {\r\n    position: 'absolute',\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nexport default function ClippedDrawer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.appFrame}>\r\n        <CssBaseline />\r\n        <AppBar position='fixed' className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant='h6' noWrap>\r\n              Clipped drawer\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='permanent'\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}>\r\n          <div className={classes.toolbar} />\r\n          <List>\r\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Typography paragraph>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\r\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\r\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\r\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\r\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\r\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\r\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\r\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\r\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\r\n            vivamus at augue. At augue eget arcu dictum varius duis at\r\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\r\n            donec massa sapien faucibus et molestie ac.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\r\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\r\n            elementum integer enim neque volutpat ac tincidunt. Ornare\r\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\r\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\r\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\r\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\r\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\r\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\r\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\r\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\r\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\r\n            ultrices sagittis orci a.\r\n          </Typography>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ComponentCard from '@crema/core/ComponentCard';\r\nimport ComponentHeader from '@crema/core/ComponentHeader';\r\nimport GridContainer from '@crema/core/GridContainer';\r\n\r\nimport TemporaryDrawer from './TemporaryDrawer';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport TemporaryDrawerSource from '!raw-loader!./TemporaryDrawer';\r\nimport SwipeableTemporaryDrawer from './SwipeableTemporaryDrawer';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport SwipeableTemporaryDrawerSource from '!raw-loader!./SwipeableTemporaryDrawer';\r\nimport ResponsiveDrawer from './ResponsiveDrawer';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ResponsiveDrawerSource from '!raw-loader!./ResponsiveDrawer';\r\nimport PersistentDrawer from './PersistentDrawer';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport PersistentDrawerSource from '!raw-loader!./PersistentDrawer';\r\nimport PersistentDrawerRight from './PersistentDrawerRight';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport PersistentDrawerRightSource from '!raw-loader!./PersistentDrawerRight';\r\nimport MiniDrawer from './MiniDrawer';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MiniDrawerSource from '!raw-loader!./MiniDrawer';\r\nimport PermanentDrawer from './PermanentDrawer';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport PermanentDrawerSource from '!raw-loader!./PermanentDrawer';\r\nimport FullHeightNavigationRight from './FullHeightNavigationRight';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport FullHeightNavigationRightSource from '!raw-loader!./FullHeightNavigationRight';\r\nimport ClippedUnderAappbar from './ClippedUnderAappbar';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ClippedUnderAappbarSource from '!raw-loader!./ClippedUnderAappbar';\r\n\r\nconst Drawers = () => {\r\n  return (\r\n    <>\r\n      <ComponentHeader\r\n        title='Drawer'\r\n        description='Navigation drawers provide access to destinations in your app. Side sheets are surfaces containing supplementary content that are anchored to the left or right edge of the screen'\r\n        refUrl='https://material-ui.com/components/drawers/'\r\n      />\r\n\r\n      <GridContainer>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Temporary drawer'\r\n            component={TemporaryDrawer}\r\n            source={TemporaryDrawerSource}\r\n            description='Temporary navigation drawers can toggle open or closed. Closed by default, the drawer opens temporarily above all other content until a section is selected.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <ComponentCard\r\n            title='Swipeable Temporary drawer'\r\n            component={SwipeableTemporaryDrawer}\r\n            source={SwipeableTemporaryDrawerSource}\r\n            description='You can make the drawer swipeable with the SwipeableDrawer component.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Responsive drawer'\r\n            component={ResponsiveDrawer}\r\n            source={ResponsiveDrawerSource}\r\n            description='The Hidden responsive helper component allows showing different types of drawer depending on the screen width. A temporary drawer is shown for small screens while a permanent drawer is shown for wider screens.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Persistent drawer'\r\n            component={PersistentDrawer}\r\n            source={PersistentDrawerSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Persistent drawer Right'\r\n            component={PersistentDrawerRight}\r\n            source={PersistentDrawerRightSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Mini variant drawer'\r\n            component={MiniDrawer}\r\n            source={MiniDrawerSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Permanent drawer'\r\n            component={PermanentDrawer}\r\n            source={PermanentDrawerSource}\r\n            description='Permanent navigation drawers are always visible and pinned to the left edge, at the same elevation as the content or background. They cannot be closed.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Full Height Navigation Right'\r\n            component={FullHeightNavigationRight}\r\n            source={FullHeightNavigationRightSource}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ComponentCard\r\n            title='Clipped under the app bar'\r\n            component={ClippedUnderAappbar}\r\n            source={ClippedUnderAappbarSource}\r\n            description='Apps focused on productivity that require balance across the screen'\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Drawers;\r\n","export default \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport {withStyles} from '@material-ui/core/styles';\\r\\nimport Drawer from '@material-ui/core/Drawer';\\r\\nimport AppBar from '@material-ui/core/AppBar';\\r\\nimport Toolbar from '@material-ui/core/Toolbar';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport IconButton from '@material-ui/core/IconButton';\\r\\nimport Hidden from '@material-ui/core/Hidden';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport MenuIcon from '@material-ui/icons/Menu';\\r\\nimport classNames from 'classnames';\\r\\nimport MailIcon from '@material-ui/icons/Mail';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\r\\nimport InboxIcon from '@material-ui/core/SvgIcon/SvgIcon';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\n\\r\\nconst drawerWidth = 240;\\r\\n\\r\\nconst styles = (theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    height: 430,\\r\\n    marginTop: theme.spacing(3),\\r\\n    zIndex: 1,\\r\\n    overflow: 'hidden',\\r\\n  },\\r\\n  appFrame: {\\r\\n    position: 'relative',\\r\\n    display: 'flex',\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n  },\\r\\n  appBar: {\\r\\n    position: 'absolute',\\r\\n    backgroundColor: theme.palette.primary.main,\\r\\n    marginLeft: drawerWidth,\\r\\n    [theme.breakpoints.up('md')]: {\\r\\n      width: `calc(100% - ${drawerWidth}px)`,\\r\\n    },\\r\\n  },\\r\\n  navIconHide: {\\r\\n    [theme.breakpoints.up('md')]: {\\r\\n      display: 'none',\\r\\n    },\\r\\n  },\\r\\n  drawerHeader: theme.mixins.toolbar,\\r\\n  drawerPaper: {\\r\\n    width: 250,\\r\\n    [theme.breakpoints.up('md')]: {\\r\\n      width: drawerWidth,\\r\\n      position: 'relative',\\r\\n      height: '100%',\\r\\n    },\\r\\n  },\\r\\n  content: {\\r\\n    backgroundColor: theme.palette.background.default,\\r\\n    width: '100%',\\r\\n    padding: theme.spacing(3),\\r\\n    height: 'calc(100% - 56px)',\\r\\n    marginTop: 56,\\r\\n    [theme.breakpoints.up('sm')]: {\\r\\n      height: 'calc(100% - 64px)',\\r\\n      marginTop: 64,\\r\\n    },\\r\\n  },\\r\\n});\\r\\n\\r\\nclass ResponsiveDrawer extends React.Component {\\r\\n  state = {\\r\\n    mobileOpen: false,\\r\\n  };\\r\\n\\r\\n  handleDrawerToggle = () => {\\r\\n    this.setState({mobileOpen: !this.state.mobileOpen});\\r\\n  };\\r\\n\\r\\n  render() {\\r\\n    const {classes, theme} = this.props;\\r\\n    const drawer = (\\r\\n      <div>\\r\\n        <div className={classes.toolbar} />\\r\\n        <Divider />\\r\\n        <List>\\r\\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\r\\n            <ListItem button key={text}>\\r\\n              <ListItemIcon>\\r\\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n              </ListItemIcon>\\r\\n              <ListItemText primary={text} />\\r\\n            </ListItem>\\r\\n          ))}\\r\\n        </List>\\r\\n        <Divider />\\r\\n        <List>\\r\\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\\r\\n            <ListItem button key={text}>\\r\\n              <ListItemIcon>\\r\\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n              </ListItemIcon>\\r\\n              <ListItemText primary={text} />\\r\\n            </ListItem>\\r\\n          ))}\\r\\n        </List>\\r\\n      </div>\\r\\n    );\\r\\n    return (\\r\\n      <div className={classes.root}>\\r\\n        <div className={classes.appFrame}>\\r\\n          <AppBar className={classNames(classes.appBar)}>\\r\\n            <Toolbar>\\r\\n              <IconButton\\r\\n                aria-label='open drawer'\\r\\n                onClick={this.handleDrawerToggle}\\r\\n                className={classes.navIconHide}>\\r\\n                <MenuIcon className='text-white' />\\r\\n              </IconButton>\\r\\n              <Typography\\r\\n                variant='h6'\\r\\n                color='inherit'\\r\\n                noWrap\\r\\n                className='text-white'>\\r\\n                Responsive drawer\\r\\n              </Typography>\\r\\n            </Toolbar>\\r\\n          </AppBar>\\r\\n          <Hidden mdUp>\\r\\n            <Drawer\\r\\n              variant='temporary'\\r\\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\\r\\n              open={this.state.mobileOpen}\\r\\n              classes={{\\r\\n                paper: classes.drawerPaper,\\r\\n              }}\\r\\n              onClose={this.handleDrawerToggle}\\r\\n              ModalProps={{\\r\\n                keepMounted: true, // Better open performance on mobile.\\r\\n              }}>\\r\\n              {drawer}\\r\\n            </Drawer>\\r\\n          </Hidden>\\r\\n          <Hidden smDown implementation='css'>\\r\\n            <Drawer\\r\\n              variant='permanent'\\r\\n              classes={{\\r\\n                paper: classes.drawerPaper,\\r\\n              }}>\\r\\n              {drawer}\\r\\n            </Drawer>\\r\\n          </Hidden>\\r\\n          <main className={classes.content}>\\r\\n            <Typography gutterBottom noWrap>\\r\\n              {'You think water moves fast? You should see ice.'}\\r\\n            </Typography>\\r\\n          </main>\\r\\n        </div>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nResponsiveDrawer.propTypes = {\\r\\n  classes: PropTypes.object.isRequired,\\r\\n  theme: PropTypes.object.isRequired,\\r\\n};\\r\\n\\r\\nexport default withStyles(styles, {withTheme: true})(ResponsiveDrawer);\\r\\n\";","export default \"import React from 'react';\\r\\nimport {makeStyles} from '@material-ui/core/styles';\\r\\nimport Drawer from '@material-ui/core/Drawer';\\r\\nimport AppBar from '@material-ui/core/AppBar';\\r\\nimport CssBaseline from '@material-ui/core/CssBaseline';\\r\\nimport Toolbar from '@material-ui/core/Toolbar';\\r\\nimport List from '@material-ui/core/List';\\r\\nimport Typography from '@material-ui/core/Typography';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport ListItem from '@material-ui/core/ListItem';\\r\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\r\\nimport ListItemText from '@material-ui/core/ListItemText';\\r\\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\\r\\nimport MailIcon from '@material-ui/icons/Mail';\\r\\n\\r\\nconst drawerWidth = 240;\\r\\n\\r\\nconst useStyles = makeStyles((theme) => ({\\r\\n  root: {\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n    zIndex: 1,\\r\\n    overflow: 'hidden',\\r\\n  },\\r\\n  appFrame: {\\r\\n    position: 'relative',\\r\\n    display: 'flex',\\r\\n    width: '100%',\\r\\n    height: '100%',\\r\\n  },\\r\\n  appBar: {\\r\\n    position: 'absolute',\\r\\n    zIndex: theme.zIndex.drawer + 1,\\r\\n  },\\r\\n  drawer: {\\r\\n    width: drawerWidth,\\r\\n    flexShrink: 0,\\r\\n  },\\r\\n  drawerPaper: {\\r\\n    position: 'relative',\\r\\n    width: drawerWidth,\\r\\n  },\\r\\n  content: {\\r\\n    flexGrow: 1,\\r\\n    padding: theme.spacing(3),\\r\\n  },\\r\\n  toolbar: theme.mixins.toolbar,\\r\\n}));\\r\\n\\r\\nexport default function ClippedDrawer() {\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div className={classes.root}>\\r\\n      <div className={classes.appFrame}>\\r\\n        <CssBaseline />\\r\\n        <AppBar position='fixed' className={classes.appBar}>\\r\\n          <Toolbar>\\r\\n            <Typography variant='h6' noWrap>\\r\\n              Clipped drawer\\r\\n            </Typography>\\r\\n          </Toolbar>\\r\\n        </AppBar>\\r\\n        <Drawer\\r\\n          className={classes.drawer}\\r\\n          variant='permanent'\\r\\n          classes={{\\r\\n            paper: classes.drawerPaper,\\r\\n          }}>\\r\\n          <div className={classes.toolbar} />\\r\\n          <List>\\r\\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n          <Divider />\\r\\n          <List>\\r\\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\\r\\n              <ListItem button key={text}>\\r\\n                <ListItemIcon>\\r\\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\\r\\n                </ListItemIcon>\\r\\n                <ListItemText primary={text} />\\r\\n              </ListItem>\\r\\n            ))}\\r\\n          </List>\\r\\n        </Drawer>\\r\\n        <main className={classes.content}>\\r\\n          <div className={classes.toolbar} />\\r\\n          <Typography paragraph>\\r\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\r\\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\\r\\n            dolor purus non enim praesent elementum facilisis leo vel. Risus at\\r\\n            ultrices mi tempus imperdiet. Semper risus in hendrerit gravida\\r\\n            rutrum quisque non tellus. Convallis convallis tellus id interdum\\r\\n            velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\\r\\n            sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\\r\\n            integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\\r\\n            eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\\r\\n            quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\\r\\n            vivamus at augue. At augue eget arcu dictum varius duis at\\r\\n            consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\\r\\n            donec massa sapien faucibus et molestie ac.\\r\\n          </Typography>\\r\\n          <Typography paragraph>\\r\\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\\r\\n            ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\\r\\n            elementum integer enim neque volutpat ac tincidunt. Ornare\\r\\n            suspendisse sed nisi lacus sed viverra tellus. Purus sit amet\\r\\n            volutpat consequat mauris. Elementum eu facilisis sed odio morbi.\\r\\n            Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\\r\\n            ornare massa eget egestas purus viverra accumsan in. In hendrerit\\r\\n            gravida rutrum quisque non tellus orci ac. Pellentesque nec nam\\r\\n            aliquam sem et tortor. Habitant morbi tristique senectus et.\\r\\n            Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean\\r\\n            euismod elementum nisi quis eleifend. Commodo viverra maecenas\\r\\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\\r\\n            ultrices sagittis orci a.\\r\\n          </Typography>\\r\\n        </main>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";"],"sourceRoot":""}