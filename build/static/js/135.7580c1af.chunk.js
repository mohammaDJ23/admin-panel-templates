(this.webpackJsonpcrema=this.webpackJsonpcrema||[]).push([[135],{3126:function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(359),i=t(408),l=t(407),c=t(406),p=t(23),m=t(167),s=t(373),u=t(82),d=t(270),h=t(273),f=t(122),E=Object(m.a)((function(e){return{typography:{padding:e.spacing(2)}}}));function g(){var e=E(),n=a.a.useState(null),t=Object(p.a)(n,2),r=t[0],o=t[1];var i=Boolean(r),l=i?"simple-popper":void 0;return a.a.createElement("div",null,a.a.createElement(d.a,{"aria-describedby":l,variant:"contained",onClick:function(e){o(r?null:e.currentTarget)}},"Toggle Popper"),a.a.createElement(s.a,{id:l,open:i,anchorEl:r,transition:!0},(function(n){var t=n.TransitionProps;return a.a.createElement(h.a,Object.assign({},t,{timeout:350}),a.a.createElement(f.a,null,a.a.createElement(u.a,{className:e.typography},"The content of the Popper.")))})))}function y(){var e=a.a.useState(null),n=Object(p.a)(e,2),t=n[0],r=n[1];var o=Boolean(t),i=o?"simple-popper":void 0;return a.a.createElement("div",null,a.a.createElement("button",{"aria-describedby":i,type:"button",onClick:function(e){r(t?null:e.currentTarget)}},"Toggle Popper"),a.a.createElement(s.a,{id:i,open:o,anchorEl:t},a.a.createElement("div",null,"The content of the Popper.")))}var P=Object(m.a)((function(e){return{root:{width:500},typography:{padding:e.spacing(2)}}}));function k(){var e=a.a.useState(null),n=Object(p.a)(e,2),t=n[0],r=n[1],i=a.a.useState(!1),l=Object(p.a)(i,2),c=l[0],m=l[1],E=a.a.useState(),g=Object(p.a)(E,2),y=g[0],k=g[1],C=P(),b=function(e){return function(n){r(n.currentTarget),m((function(n){return y!==e||!n})),k(e)}};return a.a.createElement("div",{className:C.root},a.a.createElement(s.a,{open:c,anchorEl:t,placement:y,transition:!0},(function(e){var n=e.TransitionProps;return a.a.createElement(h.a,Object.assign({},n,{timeout:350}),a.a.createElement(f.a,null,a.a.createElement(u.a,{className:C.typography},"The content of the Popper.")))})),a.a.createElement(o.a,{container:!0,justify:"center"},a.a.createElement(o.a,{item:!0},a.a.createElement(d.a,{onClick:b("top-start")},"top-start"),a.a.createElement(d.a,{onClick:b("top")},"top"),a.a.createElement(d.a,{onClick:b("top-end")},"top-end"))),a.a.createElement(o.a,{container:!0,justify:"center"},a.a.createElement(o.a,{item:!0,xs:12,lg:6},a.a.createElement(d.a,{onClick:b("left-start")},"left-start"),a.a.createElement("br",null),a.a.createElement(d.a,{onClick:b("left")},"left"),a.a.createElement("br",null),a.a.createElement(d.a,{onClick:b("left-end")},"left-end")),a.a.createElement(o.a,{item:!0,container:!0,xs:12,lg:6,alignItems:"flex-end",direction:"column"},a.a.createElement(o.a,{item:!0},a.a.createElement(d.a,{onClick:b("right-start")},"right-start")),a.a.createElement(o.a,{item:!0},a.a.createElement(d.a,{onClick:b("right")},"right")),a.a.createElement(o.a,{item:!0},a.a.createElement(d.a,{onClick:b("right-end")},"right-end")))),a.a.createElement(o.a,{container:!0,justify:"center"},a.a.createElement(o.a,{item:!0},a.a.createElement(d.a,{onClick:b("bottom-start")},"bottom-start"),a.a.createElement(d.a,{onClick:b("bottom")},"bottom"),a.a.createElement(d.a,{onClick:b("bottom-end")},"bottom-end"))))}var C=Object(m.a)((function(e){return{typography:{padding:e.spacing(2)}}}));function b(){var e=a.a.useState(null),n=Object(p.a)(e,2),t=n[0],r=n[1],o=C(),i=Boolean(t),l=i?"no-transition-popper":void 0;return a.a.createElement("div",null,a.a.createElement(d.a,{"aria-describedby":l,variant:"contained",onClick:function(e){r((function(n){return n?null:e.currentTarget}))}},"Toggle Popper"),a.a.createElement(s.a,{id:l,open:i,anchorEl:t},a.a.createElement(f.a,null,a.a.createElement(u.a,{className:o.typography},"The content of the Popper."))))}n.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(l.a,{title:"Popper",description:"A Popper can be used to display some content on top of another. It's an alternative to react-popper.",refUrl:"https://material-ui.com/components/popper/"}),a.a.createElement(c.a,null,a.a.createElement(o.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Simple Paper",component:g,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimplePopper() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n  }\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popper' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant='contained' onClick={handleClick}>\r\n        Toggle Popper\r\n      </Button>\r\n      <Popper id={id} open={open} anchorEl={anchorEl} transition>\r\n        {({TransitionProps}) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className={classes.typography}>\r\n                The content of the Popper.\r\n              </Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n"})),a.a.createElement(o.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Minimalist Popper",component:y,source:"import React from 'react';\r\nimport Popper from '@material-ui/core/Popper';\r\n\r\nexport default function MinimalPopper() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n  }\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popper' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <button aria-describedby={id} type='button' onClick={handleClick}>\r\n        Toggle Popper\r\n      </button>\r\n      <Popper id={id} open={open} anchorEl={anchorEl}>\r\n        <div>The content of the Popper.</div>\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n",description:"You can use the component with zero extra dependencies."})),a.a.createElement(o.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Positioned Popper",component:k,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function PositionedPopper() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [placement, setPlacement] = React.useState();\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (newPlacement) => (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen((prev) => placement !== newPlacement || !prev);\r\n    setPlacement(newPlacement);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Popper open={open} anchorEl={anchorEl} placement={placement} transition>\r\n        {({TransitionProps}) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className={classes.typography}>\r\n                The content of the Popper.\r\n              </Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Grid container justify='center'>\r\n        <Grid item>\r\n          <Button onClick={handleClick('top-start')}>top-start</Button>\r\n          <Button onClick={handleClick('top')}>top</Button>\r\n          <Button onClick={handleClick('top-end')}>top-end</Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify='center'>\r\n        <Grid item xs={12} lg={6}>\r\n          <Button onClick={handleClick('left-start')}>left-start</Button>\r\n          <br />\r\n          <Button onClick={handleClick('left')}>left</Button>\r\n          <br />\r\n          <Button onClick={handleClick('left-end')}>left-end</Button>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          lg={6}\r\n          alignItems='flex-end'\r\n          direction='column'>\r\n          <Grid item>\r\n            <Button onClick={handleClick('right-start')}>right-start</Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button onClick={handleClick('right')}>right</Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button onClick={handleClick('right-end')}>right-end</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify='center'>\r\n        <Grid item>\r\n          <Button onClick={handleClick('bottom-start')}>bottom-start</Button>\r\n          <Button onClick={handleClick('bottom')}>bottom</Button>\r\n          <Button onClick={handleClick('bottom-end')}>bottom-end</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"})),a.a.createElement(o.a,{item:!0,xs:12,lg:6},a.a.createElement(i.a,{title:"Without transition Popper",component:b,source:"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function NoTransitionPopper() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl((prev) => (prev ? null : event.currentTarget));\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'no-transition-popper' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant='contained' onClick={handleClick}>\r\n        Toggle Popper\r\n      </Button>\r\n      <Popper id={id} open={open} anchorEl={anchorEl}>\r\n        <Paper>\r\n          <Typography className={classes.typography}>\r\n            The content of the Popper.\r\n          </Typography>\r\n        </Paper>\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n"}))))}}}]);
//# sourceMappingURL=135.7580c1af.chunk.js.map